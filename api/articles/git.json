{"title":"git","uid":"58b7f561a82cc9dd7c27d8845a6fb9dd","slug":"git","date":"2024-07-30T07:15:25.000Z","updated":"2024-08-04T10:40:53.019Z","comments":true,"path":"api/articles/git.json","keywords":null,"cover":null,"content":"<h1 id=\"使用github搜索\"><a href=\"#使用github搜索\" class=\"headerlink\" title=\"使用github搜索\"></a>使用github搜索</h1><p>awesome xxx &#x2F;&#x2F;找百科全书</p>\n<p>xxx sample &#x2F;&#x2F;找例子</p>\n<p>xxx starter &#x2F;xxx boilerplate &#x2F;&#x2F;找空项目架子</p>\n<p>xxx tutorial &#x2F;&#x2F;找教程</p>\n<h1 id=\"gitignore不生效\"><a href=\"#gitignore不生效\" class=\"headerlink\" title=\"gitignore不生效\"></a>gitignore不生效</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">git rm -r --cached .</span><br><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m &quot;update .gitignore&quot;</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"git基本操作\"><a href=\"#git基本操作\" class=\"headerlink\" title=\"git基本操作\"></a>git基本操作</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">设置查询配置信息</span><br><span class=\"line\">git config --global user.name &quot;govk&quot;</span><br><span class=\"line\">git config --global user.email &quot;china.lijialin@outlook.com&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">克隆代码</span><br><span class=\"line\">git clone</span><br><span class=\"line\"></span><br><span class=\"line\">查看状态</span><br><span class=\"line\">git status</span><br><span class=\"line\"></span><br><span class=\"line\">告诉新建的文件夹要用git管理</span><br><span class=\"line\">git init </span><br><span class=\"line\"></span><br><span class=\"line\">提交代码</span><br><span class=\"line\">//全部提交到缓冲区 暂存区</span><br><span class=\"line\">git add . </span><br><span class=\"line\">//单次提交 </span><br><span class=\"line\">git add 2.py</span><br><span class=\"line\"></span><br><span class=\"line\">提交代码到仓库</span><br><span class=\"line\">git commit -m &quot;加备注&quot; </span><br><span class=\"line\"></span><br><span class=\"line\">推送代码</span><br><span class=\"line\">git push</span><br><span class=\"line\"></span><br><span class=\"line\">拉取代码</span><br><span class=\"line\">git pull</span><br><span class=\"line\"></span><br><span class=\"line\">查看git提交日志</span><br><span class=\"line\">git log  </span><br><span class=\"line\"></span><br><span class=\"line\">回滚</span><br><span class=\"line\">git reset HEAD //reset定向到</span><br><span class=\"line\">git chackout HEAD main.py //回退到main.py最后一次提交的版本</span><br><span class=\"line\">git chackout main.py //没有提交前 从缓冲区退回到工作区</span><br><span class=\"line\"></span><br><span class=\"line\">从当前分支为基础新建分支</span><br><span class=\"line\">//创建分支a b</span><br><span class=\"line\">git checkout -b a </span><br><span class=\"line\">git checkout -b b</span><br><span class=\"line\"></span><br><span class=\"line\">切换回master主分支</span><br><span class=\"line\">git checkout master</span><br><span class=\"line\"></span><br><span class=\"line\">合并分支a</span><br><span class=\"line\">git merge a</span><br><span class=\"line\">合并有冲突自己难以决策时 放弃当前合并</span><br><span class=\"line\">git merge --abort</span><br><span class=\"line\">看当前有哪些分支</span><br><span class=\"line\">git branch</span><br><span class=\"line\"></span><br><span class=\"line\">完成的分支删除</span><br><span class=\"line\">git branch -D a</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"连接github\"><a href=\"#连接github\" class=\"headerlink\" title=\"连接github\"></a>连接github</h2><p>github新建仓库有提示</p>\n<h3 id=\"…or-create-a-new-repository-on-the-command-line\"><a href=\"#…or-create-a-new-repository-on-the-command-line\" class=\"headerlink\" title=\"…or create a new repository on the command line\"></a>…or create a new repository on the command line</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">echo &quot;# -&quot; &gt;&gt; README.md</span><br><span class=\"line\">git init</span><br><span class=\"line\">git add README.md</span><br><span class=\"line\">git commit -m &quot;first commit&quot;</span><br><span class=\"line\">git branch -M main</span><br><span class=\"line\">git remote add origin https://github.com/govk/-.git</span><br><span class=\"line\">git push -u origin main</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"…or-push-an-existing-repository-from-the-command-line\"><a href=\"#…or-push-an-existing-repository-from-the-command-line\" class=\"headerlink\" title=\"…or push an existing repository from the command line\"></a>…or push an existing repository from the command line</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">git remote add origin https://github.com/govk/-.git</span><br><span class=\"line\">git branch -M main</span><br><span class=\"line\">git push -u origin main</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"…or-import-code-from-another-repository\"><a href=\"#…or-import-code-from-another-repository\" class=\"headerlink\" title=\"…or import code from another repository\"></a>…or import code from another repository</h3><p>You can initialize this repository with code from a Subversion, Mercurial, or TFS project.</p>\n<h1 id=\"vscode\"><a href=\"#vscode\" class=\"headerlink\" title=\"vscode\"></a>vscode</h1><p>插件下载 gitlens</p>\n<p>github最常用的便是SSH和HTTP(S)协议。git关联远程仓库可以使用http协议或者ssh协议。<br>HTTPS优缺点</p>\n<p>优点1: 相比 SSH 协议，可以使用用户名／密码授权是一个很大的优势，这样用户就不必须在使用 Git 之前先在本地生成 SSH 密钥对再把公钥上传到服务器。 对非资深的使用者，或者系统上缺少 SSH 相关程序的使用者，HTTP 协议的可用性是主要的优势。 与 SSH 协议类似，HTTP 协议也非常快和高效<br>优点2: 企业防火墙一般会打开 80 和 443 这两个常见的http和https协议的端口，使用http和https的协议在架设了防火墙的企业里面就可以绕过安全限制正常使用git，非常方便<br>缺点: 使用http&#x2F;https除了速度慢以外，还有个最大的麻烦是每次推送都必须输入口令. 但是现在操作系统或者其他git工具都提供了 keychain 的功能，可以把你的账户密码记录在系统里，例如OSX 的 Keychain 或者 Windows 的凭证管理器。</p>\n<p>SSH的优缺点</p>\n<p>优点1: 架设 Git 服务器时常用 SSH 协议作为传输协议。 因为大多数环境下已经支持通过 SSH 访问 —— 即时没有也比较很容易架设。 SSH 协议也是一个验证授权的网络协议；并且，因为其普遍性，架设和使用都很容易。</p>\n<p>缺点1: SSH服务端一般使用22端口，企业防火墙可能没有打开这个端口。<br>缺点2: SSH 协议的缺点在于你不能通过他实现匿名访问。 即便只要读取数据，使用者也要有通过 SSH 访问你的主机的权限，这使得 SSH 协议不利于开源的项目。 如果你只在公司网络使用，SSH 协议可能是你唯一要用到的协议。 如果你要同时提供匿名只读访问和 SSH 协议，那么你除了为自己推送架设 SSH 服务以外，还得架设一个可以让其他人访问的服务。</p>\n<p>总结<br>HTTPS利于匿名访问，适合开源项目可以方便被别人克隆和读取(但他没有push权限)；毕竟为了克隆别人一个仓库学习一下你就要生成个ssh-key折腾一番还是比较麻烦，所以github除了支持ssh协议必然提供了https协议的支持。<br>而SSH协议使用公钥认证比较适合内部项目。 当然了现在的代码管理平台例如github、gitliab，两种协议都是支持的，基本上看自己喜好和需求来选择就可以了。</p>\n<h1 id=\"git将一个项目同时push到多个仓库\"><a href=\"#git将一个项目同时push到多个仓库\" class=\"headerlink\" title=\"git将一个项目同时push到多个仓库\"></a>git将一个项目同时push到多个仓库</h1><p>使用以下命令添加远程仓库地址</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">git remote set-url --add origin https://github.com/demo.git</span><br></pre></td></tr></table></figure>\n\n<p>查看所有远程仓库信息</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">git remote -v</span><br></pre></td></tr></table></figure>\n\n<p>此时同步所有仓库</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">git push</span><br></pre></td></tr></table></figure>\n\n","text":"使用github搜索awesome xxx //找百科全书 xxx sample //找例子 xxx starter /xxx boilerplate //找空...","permalink":"/post/git","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"开发工具","slug":"开发工具","count":3,"path":"api/categories/开发工具.json"}],"tags":[{"name":"git","slug":"git","count":1,"path":"api/tags/git.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8github%E6%90%9C%E7%B4%A2\"><span class=\"toc-text\">使用github搜索</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#gitignore%E4%B8%8D%E7%94%9F%E6%95%88\"><span class=\"toc-text\">gitignore不生效</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#git%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">git基本操作</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%9E%E6%8E%A5github\"><span class=\"toc-text\">连接github</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E2%80%A6or-create-a-new-repository-on-the-command-line\"><span class=\"toc-text\">…or create a new repository on the command line</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E2%80%A6or-push-an-existing-repository-from-the-command-line\"><span class=\"toc-text\">…or push an existing repository from the command line</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E2%80%A6or-import-code-from-another-repository\"><span class=\"toc-text\">…or import code from another repository</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#vscode\"><span class=\"toc-text\">vscode</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#git%E5%B0%86%E4%B8%80%E4%B8%AA%E9%A1%B9%E7%9B%AE%E5%90%8C%E6%97%B6push%E5%88%B0%E5%A4%9A%E4%B8%AA%E4%BB%93%E5%BA%93\"><span class=\"toc-text\">git将一个项目同时push到多个仓库</span></a></li></ol>","author":{"name":"暗使开开","slug":"blog-author","avatar":"\\favicon.ico","link":"/","description":"<p>即使是虚拟的也会开心</p>唯有终夜长开眼，报以平生未展眉","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/344723412"},"qq":{"icon":"/svg/qq.svg","link":"https://qm.qq.com/q/MXqKNejl6g"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"IDEA","uid":"0c28c8671cbf680a33a46ee0d16608fc","slug":"idea","date":"2024-07-30T07:17:06.000Z","updated":"2024-07-30T07:17:31.964Z","comments":true,"path":"api/articles/idea.json","keywords":null,"cover":null,"text":"IDEA代码编辑 ctrl+shift+V 粘贴复制历史 ctrl+shift+alt+V 不带格式的粘贴 ctrl +alt+L 代码格式化 alt+鼠标左键...","permalink":"/post/idea","photos":[],"count_time":{"symbolsCount":731,"symbolsTime":"1 mins."},"categories":[{"name":"开发工具","slug":"开发工具","count":3,"path":"api/categories/开发工具.json"}],"tags":[{"name":"IDEA","slug":"IDEA","count":1,"path":"api/tags/IDEA.json"}],"author":{"name":"暗使开开","slug":"blog-author","avatar":"\\favicon.ico","link":"/","description":"<p>即使是虚拟的也会开心</p>唯有终夜长开眼，报以平生未展眉","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/344723412"},"qq":{"icon":"/svg/qq.svg","link":"https://qm.qq.com/q/MXqKNejl6g"}}}}},"next_post":{"title":"docker","uid":"4122a09df2e4f3d18921791a0dcc0507","slug":"docker","date":"2024-07-30T07:12:50.000Z","updated":"2024-08-04T09:58:12.467Z","comments":true,"path":"api/articles/docker.json","keywords":null,"cover":null,"text":"Docker真心不推荐使用 高度集成，仓库消失等于白费，个人最不喜欢把心放在别人那里，自己掌握技术才是最好的。 对技术提升没帮助，直接跳过环境部署会让你对使用的...","permalink":"/post/docker","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"开发工具","slug":"开发工具","count":3,"path":"api/categories/开发工具.json"}],"tags":[{"name":"docker","slug":"docker","count":1,"path":"api/tags/docker.json"}],"author":{"name":"暗使开开","slug":"blog-author","avatar":"\\favicon.ico","link":"/","description":"<p>即使是虚拟的也会开心</p>唯有终夜长开眼，报以平生未展眉","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/344723412"},"qq":{"icon":"/svg/qq.svg","link":"https://qm.qq.com/q/MXqKNejl6g"}}}}}}