{"title":"PHP","uid":"70249c996b97118912dc8a290aa9ed6e","slug":"php","date":"2024-07-30T03:50:33.000Z","updated":"2024-08-04T10:31:25.394Z","comments":true,"path":"api/articles/php.json","keywords":null,"cover":null,"content":"<h1 id=\"PHP\"><a href=\"#PHP\" class=\"headerlink\" title=\"PHP\"></a>PHP</h1><h1 id=\"php语法\"><a href=\"#php语法\" class=\"headerlink\" title=\"php语法\"></a>php语法</h1><p>PHP 脚本以 <code>&lt;?php</code> 开头，以 <code>?&gt;</code> 结尾：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> <span class=\"comment\">// 此处是 PHP 代码 ?&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"comment\">// 此处是 PHP 代码</span></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>PHP 语句以分号结尾（;）</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>PHP页面<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"meta\">echo &quot;Hello askk!&quot;;</span></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"输出方法：echo-和-print\"><a href=\"#输出方法：echo-和-print\" class=\"headerlink\" title=\"输出方法：echo 和 print\"></a><strong>输出方法：echo 和 print</strong></h3><ul>\n<li>echo - 能够输出一个以上的字符串，英文逗号隔开</li>\n<li>print - 只能输出一个字符串，并<strong>始终返回 1</strong></li>\n<li>echo 比 print 稍快，并且开销低</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;h2&gt;askk123!&lt;/h2&gt;&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;Hello world!&lt;br&gt;&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;askk&quot;</span>, <span class=\"string\">&quot; string&quot;</span>, <span class=\"number\">1</span>, <span class=\"string\">&quot; 2 &quot;</span>;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h3><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"comment\">// 单行注释</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 单行注释</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h3><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$a</span>=<span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"variable\">$_a</span> = <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"variable\">$b</span>=<span class=\"number\">6</span>;</span><br><span class=\"line\"><span class=\"variable\">$c</span>=<span class=\"variable\">$a</span>+<span class=\"variable\">$b</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$c</span>;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"变量命名规则\"><a href=\"#变量命名规则\" class=\"headerlink\" title=\"变量命名规则\"></a>变量命名规则</h4><ul>\n<li>变量以 $ 符号开头，其后是变量的名称</li>\n<li>变量名称必须以字母或下划线开头</li>\n<li>变量名称不能以数字开头，不能有空格</li>\n<li>变量名称只能包含字母 数字 字符和 下划线（A-z、0-9 以及 _）</li>\n<li>变量名称对大小写敏感</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$txt</span>=<span class=\"string\">&quot;Hello world!&quot;</span>;</span><br><span class=\"line\"><span class=\"variable\">$a</span>=<span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"variable\">$b</span>=<span class=\"number\">8.5</span>;</span><br></pre></td></tr></table></figure>\n\n<p>不必告知 PHP 变量的数据类型，php会根据它的值，自动把变量转换为正确的数据类型</p>\n<h2 id=\"命令行的使用\"><a href=\"#命令行的使用\" class=\"headerlink\" title=\"命令行的使用\"></a>命令行的使用</h2><p>可以像python一样在命令行里运行php<br>用cmd或者vscode插件</p>\n<p>可以获取用户输入的内容</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$input</span> = <span class=\"title function_ invoke__\">readline</span>(<span class=\"string\">&quot;请输入内容：&quot;</span>); </span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;您输入的内容是： &quot;</span> . <span class=\"variable\">$input</span>;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;请输入内容：&quot;</span>; </span><br><span class=\"line\"><span class=\"variable\">$input</span> = <span class=\"title function_ invoke__\">fgets</span>(STDIN); </span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;您输入的内容是： &quot;</span> . <span class=\"variable\">$input</span>;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"数据类型\"><a href=\"#数据类型\" class=\"headerlink\" title=\"数据类型\"></a>数据类型</h2><p><strong>字符串、整数、浮点数、逻辑（布尔型）、数组、对象、NULL、资源类型</strong><br>用var_dump() 会返回变量的数据类型和值，一般用于开发调试时使用</p>\n<p>只获取数据类型 <code>echo gettype($a);</code></p>\n<h3 id=\"字符串\"><a href=\"#字符串\" class=\"headerlink\" title=\"字符串\"></a>字符串</h3><p>字符串是字符序列，比如 “Hello world!”。</p>\n<p>字符串可以是引号内的任何文本，可以使用单引号或双引号<br>注意双引号和单引号的区别</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$x</span> = <span class=\"string\">&quot;Hello world!&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$x</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;br&gt;&quot;</span>; </span><br><span class=\"line\"><span class=\"variable\">$x</span> = <span class=\"string\">&#x27;Hello world!&#x27;</span>;</span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"variable\">$x</span>);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"整数\"><a href=\"#整数\" class=\"headerlink\" title=\"整数\"></a>整数</h3><p>和数学里的整数有些区别</p>\n<ul>\n<li>整数必须有至少一个数字（0-9）</li>\n<li>整数不能包含逗号或空格</li>\n<li>整数不能有小数点</li>\n<li>整数正负均可</li>\n<li>可以用三种格式规定整数：十进制、十六进制（前缀是 0x）或八进制（前缀是 0）</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$x</span> = <span class=\"number\">5985</span>;</span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"variable\">$x</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;br&gt;&quot;</span>; </span><br><span class=\"line\"><span class=\"variable\">$x</span> = -<span class=\"number\">345</span>; <span class=\"comment\">// 负数</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"variable\">$x</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;br&gt;&quot;</span>; </span><br><span class=\"line\"><span class=\"variable\">$x</span> = <span class=\"number\">0x8C</span>; <span class=\"comment\">// 十六进制数</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"variable\">$x</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\"><span class=\"variable\">$x</span> = <span class=\"number\">047</span>; <span class=\"comment\">// 八进制数</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"variable\">$x</span>);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"浮点数\"><a href=\"#浮点数\" class=\"headerlink\" title=\"浮点数\"></a>浮点数</h3><p>浮点数是有小数点或指数形式的数字</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$x</span> = <span class=\"number\">10.365</span>;</span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"variable\">$x</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;br&gt;&quot;</span>; </span><br><span class=\"line\"><span class=\"variable\">$x</span> = <span class=\"number\">2.4e3</span>;</span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"variable\">$x</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;br&gt;&quot;</span>; </span><br><span class=\"line\"><span class=\"variable\">$x</span> = <span class=\"number\">8E-5</span>;</span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"variable\">$x</span>);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"逻辑（布尔值）\"><a href=\"#逻辑（布尔值）\" class=\"headerlink\" title=\"逻辑（布尔值）\"></a>逻辑（布尔值）</h3><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$x</span>=<span class=\"literal\">true</span>;</span><br><span class=\"line\"><span class=\"variable\">$y</span>=<span class=\"literal\">false</span>;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"数组\"><a href=\"#数组\" class=\"headerlink\" title=\"数组\"></a>数组</h3><p>在一个变量中存储多个值<br>分为一维数组和多维数组，认识即可，不要深究，后面会专门讲</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">print</span>(<span class=\"string\">&#x27;&lt;pre&gt;&#x27;</span>);<span class=\"comment\">//可以格式化var_dump的值</span></span><br><span class=\"line\"><span class=\"variable\">$cars</span>=<span class=\"keyword\">array</span>(<span class=\"string\">&quot;Volvo&quot;</span>,<span class=\"number\">235</span>,<span class=\"string\">&quot;SAAB&quot;</span>);</span><br><span class=\"line\"><span class=\"variable\">$_cars</span>=[<span class=\"string\">&quot;Volvo&quot;</span>,<span class=\"string\">&quot;BMW&quot;</span>,<span class=\"string\">&quot;SAAB&quot;</span>];</span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"variable\">$cars</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;hr&gt;&quot;</span>;</span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"variable\">$_cars</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"对象\"><a href=\"#对象\" class=\"headerlink\" title=\"对象\"></a>对象</h3><p>需要用到类和封装的知识<br>等学到类的时候再讲</p>\n<h3 id=\"Null\"><a href=\"#Null\" class=\"headerlink\" title=\"Null\"></a>Null</h3><p>特殊的 NULL 值表示变量无值。NULL 是数据类型 NULL 唯一可能的值<br>注意：可以通过设置变量值为 NULL 来清空变量数据</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$x</span>=<span class=\"string\">&quot;Hello world!&quot;</span>; </span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"variable\">$x</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$x</span>=<span class=\"literal\">null</span>; </span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"variable\">$x</span>);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"resource-资源类型\"><a href=\"#resource-资源类型\" class=\"headerlink\" title=\"resource 资源类型\"></a>resource 资源类型</h3><p>等学到数据库的时候再讲</p>\n<h2 id=\"初级实战-个人博客的开头部分\"><a href=\"#初级实战-个人博客的开头部分\" class=\"headerlink\" title=\"初级实战 - 个人博客的开头部分\"></a>初级实战 - 个人博客的开头部分</h2><p>实战目标：<br>html简单介绍<br>复习变量声明和输出<br>复习注释<br>了解变量重复赋值</p>\n<h2 id=\"EOF-heredoc-定界符使用说明\"><a href=\"#EOF-heredoc-定界符使用说明\" class=\"headerlink\" title=\"EOF(heredoc) 定界符使用说明\"></a>EOF(heredoc) 定界符使用说明</h2><ul>\n<li><p>以 &lt;&lt;&lt;EOF 开始标记开始，以 EOF 结束标记结束</p>\n</li>\n<li><p>结束标记必须顶头写，独自占一行，不能有缩进和空格</p>\n</li>\n<li><p>在结束标记末尾要有分号</p>\n</li>\n<li><p><strong>EOF</strong> 可以用任意其它字符代替，开始标记和结束标记相同即可，比如常用大写的 EOT、EOD、EOF 来表示，但是不只限于那几个(也可以用：JSON、HTML等)，只要保证开始标记和结束标记不在正文中出现即可。</p>\n</li>\n<li><p>位于开始标记和结束标记之间的变量可以被正常解析，但是函数则不可以。在 heredoc 中，变量不需要用连接符 . 或 , 来拼接</p>\n</li>\n<li><p>当内容需要内嵌引号（单引号或双引号）时，不需要加转义符，本身对单双引号转义。</p>\n</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"variable\">$name</span>=<span class=\"string\">&quot;变量会被解析&quot;</span>;</span><br><span class=\"line\"><span class=\"variable\">$a</span>=<span class=\"string\">&lt;&lt;&lt;EOF</span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\">$name</span>&lt;br&gt;</span></span><br><span class=\"line\"><span class=\"string\">看上面的name已经不是name啦！！！&lt;br&gt;</span></span><br><span class=\"line\"><span class=\"string\">EOF</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$a</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&#x27;&lt;hr&gt;&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$a</span>=<span class=\"string\">&lt;&lt;&lt;EOF</span></span><br><span class=\"line\"><span class=\"string\">&lt;a&gt;html格式会被解析&lt;/a&gt;&lt;br/&gt;你看看a标签显示了没？</span></span><br><span class=\"line\"><span class=\"string\">你看看br显示了没？</span></span><br><span class=\"line\"><span class=\"string\">&lt;br&gt;</span></span><br><span class=\"line\"><span class=\"string\">EOF</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$a</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&#x27;&lt;hr&gt;&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&lt;&lt;&lt;EOF</span></span><br><span class=\"line\"><span class=\"string\">&quot;双引号外所有被排列好的格式都会被保留&quot;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;但是双引号内会保留转义符的转义效果,比如table:\\t和换行：\\n下一行&quot;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">你看页面里有\\t吗？</span></span><br><span class=\"line\"><span class=\"string\">\\n \\t 和引号没关系吧？</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">那单&#x27;引&#x27;号呢？&#x27;\\t \\n 是否能看到？&#x27;</span></span><br><span class=\"line\"><span class=\"string\">EOF</span>;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"运算符\"><a href=\"#运算符\" class=\"headerlink\" title=\"运算符\"></a>运算符</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>注：资料来源于菜鸟教程 <a href=\"http://www.runoob.com/\">www.runoob.com</a></p></blockquote>\n<h3 id=\"算术运算符\"><a href=\"#算术运算符\" class=\"headerlink\" title=\"算术运算符\"></a>算术运算符</h3><p>![[Pasted image 20230922152416.png]]</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> </span><br><span class=\"line\"><span class=\"variable\">$x</span>=<span class=\"number\">10</span>; </span><br><span class=\"line\"><span class=\"variable\">$y</span>=<span class=\"number\">6</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> (<span class=\"variable\">$x</span> + <span class=\"variable\">$y</span>); <span class=\"comment\">// 输出16</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&#x27;&lt;br&gt;&#x27;</span>;  <span class=\"comment\">// 换行</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">echo</span> (<span class=\"variable\">$x</span> - <span class=\"variable\">$y</span>); <span class=\"comment\">// 输出4</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&#x27;&lt;br&gt;&#x27;</span>;  <span class=\"comment\">// 换行</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">echo</span> (<span class=\"variable\">$x</span> * <span class=\"variable\">$y</span>); <span class=\"comment\">// 输出60</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&#x27;&lt;br&gt;&#x27;</span>;  <span class=\"comment\">// 换行</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">echo</span> (<span class=\"variable\">$x</span> / <span class=\"variable\">$y</span>); <span class=\"comment\">// 输出1.6666666666667</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&#x27;&lt;br&gt;&#x27;</span>;  <span class=\"comment\">// 换行</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">echo</span> (<span class=\"variable\">$x</span> % <span class=\"variable\">$y</span>); <span class=\"comment\">// 输出4</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&#x27;&lt;br&gt;&#x27;</span>;  <span class=\"comment\">// 换行</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">echo</span> -<span class=\"variable\">$x</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//整数之间的整除，参数也必须是整数，向下取整</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"title function_ invoke__\">intdiv</span>(<span class=\"number\">10</span>, <span class=\"number\">3</span>));</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"赋值运算符\"><a href=\"#赋值运算符\" class=\"headerlink\" title=\"赋值运算符\"></a>赋值运算符</h3><p>![[Pasted image 20230922155033.png]]</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> </span><br><span class=\"line\"><span class=\"variable\">$x</span>=<span class=\"number\">10</span>; </span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$x</span>; <span class=\"comment\">// 输出10</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"variable\">$y</span>=<span class=\"number\">20</span>; </span><br><span class=\"line\"><span class=\"variable\">$y</span> += <span class=\"number\">100</span>;</span><br><span class=\"line\"><span class=\"variable\">$y</span> = <span class=\"variable\">$y</span> + <span class=\"number\">100</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$y</span>; <span class=\"comment\">// 输出120</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"variable\">$z</span>=<span class=\"number\">50</span>;</span><br><span class=\"line\"><span class=\"variable\">$z</span> -= <span class=\"number\">25</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$z</span>; <span class=\"comment\">// 输出25</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"variable\">$i</span>=<span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"variable\">$i</span> *= <span class=\"number\">6</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$i</span>; <span class=\"comment\">// 输出30</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"variable\">$j</span>=<span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"variable\">$j</span> /= <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$j</span>; <span class=\"comment\">// 输出2</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"variable\">$k</span>=<span class=\"number\">15</span>;</span><br><span class=\"line\"><span class=\"variable\">$k</span> %= <span class=\"number\">4</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$k</span>; <span class=\"comment\">// 输出3</span></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"递增-递减运算符\"><a href=\"#递增-递减运算符\" class=\"headerlink\" title=\"递增&#x2F;递减运算符\"></a>递增&#x2F;递减运算符</h3><p>![[Pasted image 20230922160114.png]]</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"variable\">$x</span>=<span class=\"number\">10</span>; </span><br><span class=\"line\"><span class=\"keyword\">echo</span> ++<span class=\"variable\">$x</span>; <span class=\"comment\">// 输出11</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"variable\">$y</span>=<span class=\"number\">10</span>; </span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$y</span>++; <span class=\"comment\">// 输出10</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"variable\">$z</span>=<span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> --<span class=\"variable\">$z</span>; <span class=\"comment\">// 输出4</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"variable\">$i</span>=<span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$i</span>--; <span class=\"comment\">// 输出5</span></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"比较运算符\"><a href=\"#比较运算符\" class=\"headerlink\" title=\"比较运算符\"></a>比较运算符</h3><p>![[Pasted image 20230922160145.png]]</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"variable\">$x</span>=<span class=\"number\">100</span>; </span><br><span class=\"line\"><span class=\"variable\">$y</span>=<span class=\"string\">&quot;100&quot;</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"variable\">$x</span> == <span class=\"variable\">$y</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"variable\">$x</span> === <span class=\"variable\">$y</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"variable\">$x</span> != <span class=\"variable\">$y</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"variable\">$x</span> !== <span class=\"variable\">$y</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"variable\">$a</span>=<span class=\"number\">50</span>;</span><br><span class=\"line\"><span class=\"variable\">$b</span>=<span class=\"number\">90</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"variable\">$a</span> &gt; <span class=\"variable\">$b</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"variable\">$a</span> &lt; <span class=\"variable\">$b</span>);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"逻辑运算符\"><a href=\"#逻辑运算符\" class=\"headerlink\" title=\"逻辑运算符\"></a>逻辑运算符</h3><p>![[Pasted image 20230922160442.png]]</p>\n<h4 id=\"and-和-的区别，-or-和-的区别\"><a href=\"#and-和-的区别，-or-和-的区别\" class=\"headerlink\" title=\"and 和 &amp;&amp; 的区别， or 和 || 的区别\"></a>and 和 &amp;&amp; 的区别， or 和 || 的区别</h4><p>主要体现在优先级： </p>\n<ul>\n<li>&amp;&amp;  运算符的优先级比  and  运算符高。 </li>\n<li>这意味着，在一个表达式中， &amp;&amp;  运算符会先被执行，然后才是  and  运算符。</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> </span><br><span class=\"line\"><span class=\"comment\">// 在表达式中使用&amp;&amp;运算符</span></span><br><span class=\"line\"><span class=\"variable\">$bool</span> = <span class=\"literal\">true</span> &amp;&amp; <span class=\"literal\">false</span>; </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 显示&amp;&amp;运算符的运算结果</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;&amp;&amp;运算符的结果为：&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"variable\">$bool</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;true&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;false&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&#x27;----&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 在表达式中使用and运算符</span></span><br><span class=\"line\"><span class=\"variable\">$bool</span> = <span class=\"literal\">true</span> <span class=\"keyword\">and</span> <span class=\"literal\">false</span>; </span><br><span class=\"line\"><span class=\"comment\">// 显示and运算符的运算结果</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;and运算符的结果为：&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"variable\">$bool</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;true&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;false&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"阻断效果\"><a href=\"#阻断效果\" class=\"headerlink\" title=\"阻断效果\"></a>阻断效果</h4><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//or-前面语句值为真，or后面不执行；否则，执行</span></span><br><span class=\"line\"><span class=\"variable\">$result</span> = <span class=\"number\">0</span> <span class=\"keyword\">or</span> <span class=\"title function_ invoke__\">var_dump</span>(<span class=\"string\">&#x27;执行我的语句&#x27;</span>);  <span class=\"comment\">//输出-执行我的语句</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"variable\">$result</span>);  <span class=\"comment\">//int 0</span></span><br><span class=\"line\"><span class=\"variable\">$result</span> = <span class=\"number\">2</span> <span class=\"keyword\">or</span> <span class=\"title function_ invoke__\">var_dump</span>(<span class=\"string\">&#x27;执行我的语句&#x27;</span>);  <span class=\"comment\">//不输出</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"variable\">$result</span>);  <span class=\"comment\">//int 2</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"条件语句-条件分支\"><a href=\"#条件语句-条件分支\" class=\"headerlink\" title=\"条件语句 (条件分支)\"></a>条件语句 (条件分支)</h2><h4 id=\"if语句\"><a href=\"#if语句\" class=\"headerlink\" title=\"if语句\"></a>if语句</h4><p><strong>仅当指定条件成立时执行代码</strong></p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (条件)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    条件成立时要执行的代码;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"if…else…语句\"><a href=\"#if…else…语句\" class=\"headerlink\" title=\"if…else…语句\"></a>if…else…语句</h4><p><strong>在条件成立时执行一块代码，条件不成立时执行另一块代码</strong></p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (条件)</span><br><span class=\"line\">&#123;  </span><br><span class=\"line\">    条件成立时执行的代码; </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"keyword\">else</span>  </span><br><span class=\"line\">&#123;  </span><br><span class=\"line\">    条件不成立时执行的代码;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"if…elseif…-else\"><a href=\"#if…elseif…-else\" class=\"headerlink\" title=\"if…elseif….else\"></a>if…elseif….else</h4><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (条件)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>条件成立时执行的代码;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">elseif</span> (条件)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">elseif</span>条件成立时执行的代码;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">elseif</span> (条件)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">elseif</span>条件成立时执行的代码;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    条件不成立时执行的代码;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h4 id=\"switch\"><a href=\"#switch\" class=\"headerlink\" title=\"switch\"></a>switch</h4><p>注意：break很重要，不要漏掉</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">switch</span> (n)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> label1:</span><br><span class=\"line\">\t    如果 n=label1，此处代码将执行;</span><br><span class=\"line\">\t    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> label2:</span><br><span class=\"line\">\t    如果 n=label2，此处代码将执行;</span><br><span class=\"line\">\t    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">default</span>:</span><br><span class=\"line\">\t    如果 n 既不等于 label1 也不等于 label2，此处代码将执行;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>什么时候适合用switch？<br>适合条件比较多，并且条件单一固定值匹配时用</p>\n<h2 id=\"循环\"><a href=\"#循环\" class=\"headerlink\" title=\"循环\"></a>循环</h2><p>让相同的代码块一次又一次地重复运行</p>\n<h3 id=\"for-循环\"><a href=\"#for-循环\" class=\"headerlink\" title=\"for 循环\"></a>for 循环</h3><p>用于预先知道脚本需要运行的次数的情况</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (初始值; 条件; 增量)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    要执行的代码(叫循环体);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>参数：</p>\n<ul>\n<li><strong>初始值</strong>：主要是初始化一个变量值，用于设置一个计数器（但可以是任何在循环的开始被执行一次的代码）。</li>\n<li><strong>条件</strong>：循环执行的限制条件。如果为 TRUE，则循环继续。如果为 FALSE，则循环结束。</li>\n<li><strong>增量</strong>：主要用于递增计数器（但可以是任何在循环的结束被执行的代码）。</li>\n</ul>\n<p><strong>注释：</strong>上面的<strong>初始值</strong>和<strong>增量</strong>参数可为空，或者有多个表达式（用逗号分隔）。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"variable\">$i</span>=<span class=\"number\">1</span>,<span class=\"variable\">$j</span>=<span class=\"number\">0</span>; <span class=\"variable\">$i</span>&lt;=<span class=\"number\">5</span>; )</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;数字为 &quot;</span> . <span class=\"variable\">$i</span>.<span class=\"variable\">$j</span> . PHP_EOL;</span><br><span class=\"line\">    <span class=\"variable\">$i</span>++;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"while-循环\"><a href=\"#while-循环\" class=\"headerlink\" title=\"while 循环\"></a>while 循环</h3><p>只要指定的条件成立，则循环执行代码块，直到指定的条件不成立</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">while</span> (条件)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    要执行的代码;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>注意避免死循环</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$i</span>=<span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span>(<span class=\"variable\">$i</span>&lt;=<span class=\"number\">5</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;The number is &quot;</span> . <span class=\"variable\">$i</span> . <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\">    <span class=\"variable\">$i</span>++;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"do…while\"><a href=\"#do…while\" class=\"headerlink\" title=\"do…while\"></a>do…while</h3><p>语句会至少执行一次代码，然后检查条件，只要条件成立，就会重复进行循环</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    要执行的代码;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (条件);</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$i</span>=<span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"variable\">$i</span>++;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;The number is &quot;</span> . <span class=\"variable\">$i</span> . <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (<span class=\"variable\">$i</span>&lt;=<span class=\"number\">5</span>);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"continue和break\"><a href=\"#continue和break\" class=\"headerlink\" title=\"continue和break\"></a>continue和break</h3><h4 id=\"continue\"><a href=\"#continue\" class=\"headerlink\" title=\"continue\"></a>continue</h4><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"variable\">$i</span>=<span class=\"number\">0</span>; <span class=\"variable\">$i</span> &lt; <span class=\"number\">5</span>; <span class=\"variable\">$i</span>++) &#123; </span><br><span class=\"line\">  <span class=\"keyword\">if</span>(<span class=\"variable\">$i</span> == <span class=\"number\">3</span>)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">echo</span> <span class=\"variable\">$i</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"break\"><a href=\"#break\" class=\"headerlink\" title=\"break\"></a>break</h4><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"variable\">$i</span>=<span class=\"number\">0</span>; <span class=\"variable\">$i</span> &lt; <span class=\"number\">5</span>; <span class=\"variable\">$i</span>++) &#123; </span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"variable\">$i</span>&gt;<span class=\"number\">3</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"variable\">$i</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"break-2\"><a href=\"#break-2\" class=\"headerlink\" title=\"break 2\"></a>break 2</h4><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"variable\">$i</span> = <span class=\"number\">0</span>; <span class=\"variable\">$i</span> &lt; <span class=\"number\">3</span>; <span class=\"variable\">$i</span>++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot;外层循环: &quot;</span> . <span class=\"variable\">$i</span> . <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"variable\">$j</span> = <span class=\"number\">0</span>; <span class=\"variable\">$j</span> &lt; <span class=\"number\">5</span>; <span class=\"variable\">$j</span>++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">&quot;内层循环: &quot;</span> . <span class=\"variable\">$j</span> . <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\">        </span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"variable\">$j</span> == <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">break</span> <span class=\"number\">2</span>; <span class=\"comment\">// 跳出两层循环</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&#x27;已跳出全部循环&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"在while中使用continue-break和break2\"><a href=\"#在while中使用continue-break和break2\" class=\"headerlink\" title=\"在while中使用continue break和break2\"></a>在while中使用continue break和break2</h4><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$a</span> = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (<span class=\"variable\">$a</span> &lt;= <span class=\"number\">20</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable\">$a</span>++;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"variable\">$a</span> == <span class=\"number\">15</span>)&#123;</span><br><span class=\"line\">        <span class=\"comment\">//continue;</span></span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"variable\">$a</span>.<span class=\"string\">&#x27;---&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$a</span> = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (<span class=\"variable\">$a</span> &lt;= <span class=\"number\">20</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable\">$a</span>++;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"variable\">$a</span> == <span class=\"number\">15</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"variable\">$i</span>=<span class=\"number\">0</span>; <span class=\"variable\">$i</span> &lt; <span class=\"number\">5</span>; <span class=\"variable\">$i</span>++) &#123; </span><br><span class=\"line\">            <span class=\"keyword\">if</span>(<span class=\"variable\">$i</span>==<span class=\"number\">3</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">break</span> <span class=\"number\">2</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;&lt;br&gt;&#x27;</span>.<span class=\"variable\">$i</span>.<span class=\"string\">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"variable\">$a</span>.<span class=\"string\">&#x27;---&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"foreach-循环\"><a href=\"#foreach-循环\" class=\"headerlink\" title=\"foreach 循环\"></a>foreach 循环</h3><p>用于遍历数组，等学数组一起讲</p>\n<h2 id=\"数组-1\"><a href=\"#数组-1\" class=\"headerlink\" title=\"数组\"></a>数组</h2><p>数组能够在单个变量中存储多个值，并且可以根据 键 访问其中的 值 </p>\n<h4 id=\"数值数组\"><a href=\"#数值数组\" class=\"headerlink\" title=\"数值数组\"></a>数值数组</h4><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$askk</span> = <span class=\"keyword\">array</span>(<span class=\"string\">&quot;askk1&quot;</span>,<span class=\"string\">&quot;askk2&quot;</span>,<span class=\"string\">&quot;askk3&quot;</span>,<span class=\"string\">&quot;askk4&quot;</span>,<span class=\"string\">&quot;askk5&quot;</span>);</span><br><span class=\"line\"><span class=\"variable\">$askk</span> = [<span class=\"string\">&quot;askk1&quot;</span>,<span class=\"string\">&quot;askk2&quot;</span>,<span class=\"string\">&quot;askk3&quot;</span>,<span class=\"string\">&quot;askk4&quot;</span>,<span class=\"string\">&quot;askk5&quot;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"variable\">$askk</span>[<span class=\"number\">1</span>]);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"variable\">$askk</span>[<span class=\"number\">5</span>]);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$askk2</span> = [];</span><br><span class=\"line\"><span class=\"variable\">$askk2</span>[<span class=\"number\">3</span>] = <span class=\"string\">&#x27;3&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"variable\">$askk2</span>);</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"关联数组\"><a href=\"#关联数组\" class=\"headerlink\" title=\"关联数组\"></a>关联数组</h3><p>关联数组是使用您分配给数组的指定的键的数组</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$age</span>=[<span class=\"string\">&quot;askk&quot;</span>=&gt;<span class=\"string\">&quot;35&quot;</span>,<span class=\"string\">&quot;dong&quot;</span>=&gt;<span class=\"string\">&quot;37&quot;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//或者</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$age</span>[<span class=\"string\">&#x27;askk&#x27;</span>]=<span class=\"string\">&quot;35&quot;</span>;  </span><br><span class=\"line\"><span class=\"variable\">$age</span>[<span class=\"string\">&#x27;dong&#x27;</span>]=<span class=\"string\">&quot;37&quot;</span>;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"获取数组的长度-count-函数\"><a href=\"#获取数组的长度-count-函数\" class=\"headerlink\" title=\"获取数组的长度 - count() 函数\"></a>获取数组的长度 - count() 函数</h3><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">count</span>(<span class=\"variable\">$askk</span>);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"遍历数组\"><a href=\"#遍历数组\" class=\"headerlink\" title=\"遍历数组\"></a>遍历数组</h3><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"variable\">$i</span>=<span class=\"number\">0</span>;<span class=\"variable\">$i</span>&lt;<span class=\"title function_ invoke__\">count</span>(<span class=\"variable\">$askk</span>);<span class=\"variable\">$i</span>++) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">echo</span> <span class=\"variable\">$askk</span>[<span class=\"variable\">$i</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;br&gt;&quot;</span>; </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">foreach</span> (<span class=\"variable\">$askk</span> <span class=\"keyword\">as</span> <span class=\"variable\">$value</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    要执行代码;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">foreach</span> (<span class=\"variable\">$askk</span> <span class=\"keyword\">as</span> <span class=\"variable\">$key</span> =&gt; <span class=\"variable\">$value</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    要执行代码;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>for可以，while也可以，但最常用的是foreach</p>\n<h3 id=\"多维数组\"><a href=\"#多维数组\" class=\"headerlink\" title=\"多维数组\"></a>多维数组</h3><p>多维数组是包含一个或多个数组的数组</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$askkArr</span> = [</span><br><span class=\"line\">  [</span><br><span class=\"line\">      <span class=\"string\">&quot;免费课&quot;</span>=&gt;[</span><br><span class=\"line\">          <span class=\"string\">&quot;askk课&quot;</span>,</span><br><span class=\"line\">          <span class=\"string\">&quot;php&quot;</span>,</span><br><span class=\"line\">          <span class=\"string\">&quot;python&quot;</span></span><br><span class=\"line\">      ],</span><br><span class=\"line\">      <span class=\"string\">&quot;体验课&quot;</span>=&gt;[</span><br><span class=\"line\">          <span class=\"string\">&quot;php&quot;</span>,</span><br><span class=\"line\">          <span class=\"string\">&quot;js&quot;</span>,</span><br><span class=\"line\">          <span class=\"string\">&quot;vue&quot;</span></span><br><span class=\"line\">      ]</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  [</span><br><span class=\"line\">      <span class=\"string\">&quot;收费课&quot;</span>=&gt;[</span><br><span class=\"line\">          <span class=\"string\">&quot;油猴脚本&quot;</span>,</span><br><span class=\"line\">          <span class=\"string\">&quot;浏览器插件&quot;</span>,</span><br><span class=\"line\">          <span class=\"string\">&quot;666&quot;</span></span><br><span class=\"line\">      ]</span><br><span class=\"line\">  ]</span><br><span class=\"line\">];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">print_r</span>( <span class=\"variable\">$askkArr</span> );</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$askkArr</span> = [</span><br><span class=\"line\">  <span class=\"string\">&quot;test&quot;</span> =&gt; [</span><br><span class=\"line\">       <span class=\"string\">&quot;免费课&quot;</span>=&gt;[</span><br><span class=\"line\">           <span class=\"string\">&quot;askk课&quot;</span>,</span><br><span class=\"line\">           <span class=\"string\">&quot;php&quot;</span>,</span><br><span class=\"line\">           <span class=\"string\">&quot;python&quot;</span>,</span><br><span class=\"line\">       ],</span><br><span class=\"line\">       <span class=\"string\">&quot;体验课&quot;</span>=&gt;[</span><br><span class=\"line\">           <span class=\"string\">&quot;php&quot;</span>,</span><br><span class=\"line\">           <span class=\"string\">&quot;js&quot;</span>,</span><br><span class=\"line\">           <span class=\"string\">&quot;vue&quot;</span>,</span><br><span class=\"line\">       ]</span><br><span class=\"line\">   ],</span><br><span class=\"line\">  <span class=\"string\">&quot;product&quot;</span> =&gt; [</span><br><span class=\"line\">       <span class=\"string\">&quot;免费课&quot;</span>=&gt;[</span><br><span class=\"line\">           <span class=\"string\">&quot;产品1&quot;</span>,</span><br><span class=\"line\">           <span class=\"string\">&quot;产品2&quot;</span>,</span><br><span class=\"line\">       ],</span><br><span class=\"line\">       <span class=\"string\">&quot;体验课&quot;</span>=&gt;[</span><br><span class=\"line\">           <span class=\"string\">&quot;产品3&quot;</span>,</span><br><span class=\"line\">           <span class=\"string\">&quot;产品4&quot;</span>,</span><br><span class=\"line\">       ]</span><br><span class=\"line\">   ]</span><br><span class=\"line\"> ];</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"title function_ invoke__\">print_r</span>( <span class=\"variable\">$askkArr</span> );</span><br></pre></td></tr></table></figure>\n<p>遍历多维数组</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">foreach</span> (<span class=\"variable\">$askk</span> <span class=\"keyword\">as</span> <span class=\"variable\">$key</span> =&gt; <span class=\"variable\">$value</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    要执行代码;</span><br><span class=\"line\">\t<span class=\"keyword\">foreach</span> (<span class=\"variable\">$value</span> <span class=\"keyword\">as</span> <span class=\"variable\">$kk</span> =&gt; <span class=\"variable\">$vv</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t    要执行代码;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"初级实战2-个人博客的开头部分\"><a href=\"#初级实战2-个人博客的开头部分\" class=\"headerlink\" title=\"初级实战2 - 个人博客的开头部分\"></a>初级实战2 - 个人博客的开头部分</h2><p>实战目标：</p>\n<ul>\n<li>复习运算符的使用</li>\n<li>复习条件语句的使用</li>\n<li>复习循环</li>\n<li>学会使用数组</li>\n</ul>\n<p>任务：<br>循环数组：输出顶部导航栏，输出博客标题和时间<br>条件语句：如果为第一个导航，则给出突出显示<br>运算：输出数字的大小从大到小排列</p>\n<h2 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数\"></a>函数</h2><p>函数是一段可重复使用的代码块，可以将一系列操作封装起来，使代码更加模块化、可维护和可重用，来大大节省我们的开发时间和代码量，提高编程效率。</p>\n<h3 id=\"内置函数\"><a href=\"#内置函数\" class=\"headerlink\" title=\"内置函数\"></a>内置函数</h3><p>内置函数有很多，之前学的print_r() count() 就是一个内置函数，<br>获取当前时间 time()，date(‘Y-m-d H:i:s’)</p>\n<p>这节我们主要讲自定义函数</p>\n<h3 id=\"创建（定义）函数-和-调用\"><a href=\"#创建（定义）函数-和-调用\" class=\"headerlink\" title=\"创建（定义）函数 和 调用\"></a>创建（定义）函数 和 调用</h3><p>PHP 函数准则：</p>\n<ul>\n<li>函数的名称应该提示出它的功能</li>\n<li>函数名称以字母或下划线开头（不能以数字开头）</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">functionName</span>(<span class=\"params\"></span>) </span>&#123; </span><br><span class=\"line\"><span class=\"comment\">// 要执行的代码 </span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//调用</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">functionName</span>();</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;我的名字是：写代码的askk&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">test</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获取当前的时间</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">nowTime</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">date</span>(<span class=\"string\">&#x27;Y-m-d H:i:s&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">nowTime</span>();</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"添加参数\"><a href=\"#添加参数\" class=\"headerlink\" title=\"添加参数\"></a>添加参数</h3><p>为了给函数添加更多的功能，我们可以添加参数，参数类似变量</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">myName</span>(<span class=\"params\"><span class=\"variable\">$name</span></span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">echo</span> <span class=\"string\">&quot;我的名字是：<span class=\"subst\">$name</span>&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">myName</span>(<span class=\"string\">&quot;askk&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 获取当前的时间</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">nowTime</span>(<span class=\"params\"><span class=\"variable\">$type</span></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"variable\">$type</span>==<span class=\"string\">&quot;time&quot;</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">date</span>(<span class=\"string\">&#x27;Y-m-d H:i:s&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(<span class=\"variable\">$type</span>==<span class=\"string\">&quot;day&quot;</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">date</span>(<span class=\"string\">&#x27;Y-m-d&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">nowTime</span>(<span class=\"string\">&quot;time&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"多个参数\"><a href=\"#多个参数\" class=\"headerlink\" title=\"多个参数\"></a>多个参数</h3><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">plus</span>(<span class=\"params\"><span class=\"variable\">$a</span>,<span class=\"variable\">$b</span></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">echo</span> <span class=\"variable\">$a</span>+<span class=\"variable\">$b</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">plus</span>(<span class=\"number\">2</span>,<span class=\"number\">3</span>);</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//严格模式</span></span><br><span class=\"line\"><span class=\"keyword\">declare</span>(strict_types=<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">plus</span>(<span class=\"params\"><span class=\"keyword\">int</span> <span class=\"variable\">$a</span>,<span class=\"keyword\">int</span> <span class=\"variable\">$b</span></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">echo</span> <span class=\"variable\">$a</span>+<span class=\"variable\">$b</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">plus</span>(<span class=\"string\">&#x27;2&#x27;</span>,<span class=\"string\">&#x27;13&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"返回值\"><a href=\"#返回值\" class=\"headerlink\" title=\"返回值\"></a>返回值</h3><p>return ， 可有可无，但一般都有</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">plus</span>(<span class=\"params\"><span class=\"variable\">$a</span>,<span class=\"variable\">$b</span></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"variable\">$a</span>+<span class=\"variable\">$b</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">plus</span>(<span class=\"number\">2</span>,<span class=\"number\">3</span>);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"变量作用域\"><a href=\"#变量作用域\" class=\"headerlink\" title=\"变量作用域\"></a>变量作用域</h2><p>讲完了函数，就可以学习前面提到过的变量作用域了</p>\n<p>变量的作用域是脚本中变量可被引用&#x2F;使用的部分。</p>\n<h3 id=\"局部-和-全局-global-作用域\"><a href=\"#局部-和-全局-global-作用域\" class=\"headerlink\" title=\"局部 和 全局(global) 作用域\"></a>局部 和 全局(global) 作用域</h3><ul>\n<li>在所有函数外部定义的变量，拥有全局作用域</li>\n<li>除了函数外，全局变量可以被脚本中的任何部分访问</li>\n<li>要在一个函数中访问一个全局变量，需要使用 global 关键字</li>\n<li>函数内部声明的变量是局部变量，仅能在函数内部访问</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$askk</span>=<span class=\"string\">&quot;写代码的askk&quot;</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">global</span> <span class=\"variable\">$askk</span>;</span><br><span class=\"line\">\t<span class=\"variable\">$age</span>=<span class=\"string\">&quot;35&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">echo</span> <span class=\"variable\">$askk</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_ invoke__\">test</span>();</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$age</span>;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"static-作用域\"><a href=\"#static-作用域\" class=\"headerlink\" title=\"static 作用域\"></a>static 作用域</h3><p>当一个函数完成时，它的所有变量通常都会被删除。然而，有时候希望某个局部变量不要被删除。<br>要做到这一点，请在第一次声明变量时使用 <strong>static</strong> 关键字</p>\n<p>每次调用该函数时，该变量将会保留着函数前一次被调用时的值，但是该变量仍然是函数的局部变量</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">myTest</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">static</span> <span class=\"variable\">$a</span>=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"variable\">$a</span>;</span><br><span class=\"line\">    <span class=\"variable\">$a</span>++;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> PHP_EOL;    <span class=\"comment\">// 换行符</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"title function_ invoke__\">myTest</span>();</span><br><span class=\"line\"><span class=\"title function_ invoke__\">myTest</span>();</span><br><span class=\"line\"><span class=\"title function_ invoke__\">myTest</span>();</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"函数的参数作用域\"><a href=\"#函数的参数作用域\" class=\"headerlink\" title=\"函数的参数作用域\"></a>函数的参数作用域</h3><p>参数是通过调用代码将值传递给函数的局部变量</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test</span>(<span class=\"params\"><span class=\"variable\">$askk</span></span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">echo</span> <span class=\"variable\">$askk</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">test</span>(<span class=\"string\">&#x27;askk&#x27;</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"variable\">$askk</span>);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"unset和isset函数\"><a href=\"#unset和isset函数\" class=\"headerlink\" title=\"unset和isset函数\"></a>unset和isset函数</h3><p>unset()可以删除变量，isset() 可以判断变量是否存在</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$askk</span>=<span class=\"string\">&quot;写代码的askk&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// global $askk;</span></span><br><span class=\"line\">\t<span class=\"variable\">$age</span>=<span class=\"string\">&quot;35&quot;</span>;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">var_dump</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$age</span>));</span><br><span class=\"line\">\t<span class=\"keyword\">unset</span>(<span class=\"variable\">$age</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_ invoke__\">var_dump</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$age</span>));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_ invoke__\">test</span>();</span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"variable\">$askk</span>);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"超级全局变量\"><a href=\"#超级全局变量\" class=\"headerlink\" title=\"超级全局变量\"></a>超级全局变量</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">- $GLOBALS</span><br><span class=\"line\">- $_SERVER</span><br><span class=\"line\"></span><br><span class=\"line\">- $_REQUEST</span><br><span class=\"line\">- $_POST</span><br><span class=\"line\">- $_GET</span><br><span class=\"line\">- $_FILES</span><br><span class=\"line\">- $_ENV</span><br><span class=\"line\">- $_COOKIE</span><br><span class=\"line\">- $_SESSION</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"GLOBALS\"><a href=\"#GLOBALS\" class=\"headerlink\" title=\"$GLOBALS\"></a>$GLOBALS</h4><p>是一个包含了全部变量的全局组合数组。变量的名字就是数组的键。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_ invoke__\">print_r</span>(<span class=\"variable\">$GLOBALS</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$askk</span>=<span class=\"string\">&quot;askk&quot;</span>;</span><br><span class=\"line\"><span class=\"variable\">$age</span>=<span class=\"number\">35</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test3</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">global</span> <span class=\"variable\">$askk</span>,<span class=\"variable\">$age</span>;</span><br><span class=\"line\">\t<span class=\"variable\">$age</span> = <span class=\"string\">&quot;38&quot;</span>;</span><br><span class=\"line\">    <span class=\"variable\">$askk</span> = <span class=\"string\">&quot;写代码的askk&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_ invoke__\">test3</span>();</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$age</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$askk</span>;</span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$askk</span>=<span class=\"string\">&quot;askk&quot;</span>;</span><br><span class=\"line\"><span class=\"variable\">$age</span>=<span class=\"number\">35</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test2</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"variable\">$GLOBALS</span>[<span class=\"string\">&quot;age&quot;</span>]=<span class=\"string\">&quot;38&quot;</span>;</span><br><span class=\"line\">    <span class=\"variable\">$GLOBALS</span>[<span class=\"string\">&quot;askk&quot;</span>] = <span class=\"string\">&quot;写代码的askk&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"variable\">$GLOBALS</span>[<span class=\"string\">&quot;askk&quot;</span>].<span class=\"string\">&#x27;---&#x27;</span>.<span class=\"variable\">$GLOBALS</span>[<span class=\"string\">&quot;age&quot;</span>];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">test2</span>();</span><br><span class=\"line\"><span class=\"keyword\">echo</span> PHP_EOL; </span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$age</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$askk</span>;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"SERVER\"><a href=\"#SERVER\" class=\"headerlink\" title=\"$_SERVER\"></a><code>$_SERVER</code></h3><ul>\n<li><code>$_SERVER</code> 是一个包含了诸如头信息(header)、路径(path)、以及脚本位置(script locations)等等信息的数组。</li>\n<li>这个数组中的项目由 Web 服务器创建。</li>\n<li>不能保证每个服务器都提供全部项目；服务器可能会忽略一些，或者提供一些没有在这里列举出来的项目。</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_ invoke__\">print_r</span>(<span class=\"variable\">$_SERVER</span>)</span><br></pre></td></tr></table></figure>\n\n<p>资料来自 <a href=\"https://www.runoob.com/php/php-superglobals.html\">PHP 超级全局变量 | 菜鸟教程 (runoob.com)</a></p>\n<p>![[Pasted image 20230927152355.png]]<br>![[Pasted image 20230927152441.png]]</p>\n<h2 id=\"初级实战3-函数的使用\"><a href=\"#初级实战3-函数的使用\" class=\"headerlink\" title=\"初级实战3 - 函数的使用\"></a>初级实战3 - 函数的使用</h2><ul>\n<li>编写一个函数getFactors，接受一个正整数参数，计算并返回该整数的所有因子（除了1和自身的所有正整数因子）。</li>\n<li>注：因子是能够整除给定数的正整数（例如，对于数值 24，它的因子包括 1、2、3、4、6、8、12 和 24。因为这些数都可以整除 24，没有余数。）</li>\n<li>补充知识：怎么往数组内插入数据</li>\n<li>要求使用函数</li>\n</ul>\n<h2 id=\"其他运算符\"><a href=\"#其他运算符\" class=\"headerlink\" title=\"其他运算符\"></a>其他运算符</h2><h3 id=\"数组运算符\"><a href=\"#数组运算符\" class=\"headerlink\" title=\"数组运算符\"></a>数组运算符</h3><ul>\n<li>+号运算符（合并）<br>注意：只会保留第一个数组中的键值对，而忽略后面数组中相同键名的元素，如果想要合并两个数组并覆盖相同键名的元素，可以使用array_merge()函数</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$a</span> = [</span><br><span class=\"line\">  <span class=\"string\">&quot;m&quot;</span> =&gt; <span class=\"string\">&quot;测试&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;n&quot;</span> =&gt; <span class=\"string\">&quot;askk&quot;</span></span><br><span class=\"line\">];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$b</span> = [</span><br><span class=\"line\">  <span class=\"string\">&quot;m&quot;</span> =&gt; <span class=\"string\">&quot;测试2&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;o&quot;</span>=&gt;<span class=\"string\">&quot;测试o&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;p&quot;</span>=&gt;<span class=\"string\">&quot;测试p&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;q&quot;</span>=&gt;[</span><br><span class=\"line\">      <span class=\"string\">&quot;cs&quot;</span>=&gt;<span class=\"string\">&quot;二维测试&quot;</span></span><br><span class=\"line\">  ]</span><br><span class=\"line\">];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$c</span>=[</span><br><span class=\"line\">  <span class=\"string\">&quot;m&quot;</span> =&gt; <span class=\"string\">&quot;测试3&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;cc&quot;</span>=&gt;<span class=\"number\">123</span></span><br><span class=\"line\">];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">print_r</span>(<span class=\"variable\">$a</span>+<span class=\"variable\">$b</span>+<span class=\"variable\">$c</span>);</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>&#x3D;&#x3D;</li>\n<li>&#x3D;&#x3D;&#x3D;<br>  有相同的键&#x2F;值对，且顺序相同、类型相同<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">   <span class=\"variable\">$a</span> = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>];</span><br><span class=\"line\">   <span class=\"variable\">$b</span> = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"string\">&quot;3&quot;</span>];</span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"variable\">$a</span> == <span class=\"variable\">$b</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"variable\">$a</span> === <span class=\"variable\">$b</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"variable\">$a</span> = [</span><br><span class=\"line\">       <span class=\"string\">&quot;a&quot;</span>=&gt;<span class=\"number\">123</span>,</span><br><span class=\"line\">       <span class=\"string\">&quot;b&quot;</span>=&gt;<span class=\"number\">456</span>,</span><br><span class=\"line\">   ];</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"variable\">$b</span> = [</span><br><span class=\"line\">       <span class=\"string\">&quot;b&quot;</span>=&gt;<span class=\"number\">456</span>,</span><br><span class=\"line\">       <span class=\"string\">&quot;a&quot;</span>=&gt;<span class=\"number\">123</span>,</span><br><span class=\"line\">   ];</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"title function_ invoke__\">var_dump</span>(<span class=\"variable\">$a</span> == <span class=\"variable\">$b</span>);</span><br><span class=\"line\">   <span class=\"title function_ invoke__\">var_dump</span>(<span class=\"variable\">$a</span> === <span class=\"variable\">$b</span>);</span><br></pre></td></tr></table></figure></li>\n<li>!&#x3D; 和 &lt;&gt;</li>\n<li>!&#x3D;&#x3D;</li>\n</ul>\n<h3 id=\"三元运算符\"><a href=\"#三元运算符\" class=\"headerlink\" title=\"三元运算符 ?:\"></a>三元运算符 ?:</h3><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// $name = $username?$username:&quot;测试&quot;;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$name</span> = <span class=\"keyword\">isset</span>(<span class=\"variable\">$username</span>)?<span class=\"variable\">$username</span>:<span class=\"string\">&quot;测试&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// $name = $username?:&quot;测试&quot;;</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"variable\">$name</span>);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"空合并运算符\"><a href=\"#空合并运算符\" class=\"headerlink\" title=\"空合并运算符 ??\"></a>空合并运算符 ??</h3><p>用于简化处理可能为null的变量或数组元素的情况。<br>它的作用是判断一个变量是否未定义或者为null，如果未定义或为null，则返回指定的默认值；否则返回该变量的值</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$name</span> = <span class=\"variable\">$username</span> ?? <span class=\"string\">&quot;askk&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$name</span>;</span><br></pre></td></tr></table></figure>\n<h3 id=\"组合比较符\"><a href=\"#组合比较符\" class=\"headerlink\" title=\"组合比较符 &lt;&#x3D;&gt;\"></a>组合比较符 &lt;&#x3D;&gt;</h3><p>可比较整型 浮点型 字符串</p>\n<p><code>$c = $a &lt;=&gt; $b; </code></p>\n<p>如果 $a &gt; $b, 则 $c 的值为 1<br>如果 $a &#x3D;&#x3D; $b, 则 $c 的值为 0<br>如果 $a &lt; $b, 则 $c 的值为 -1</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$a</span> = <span class=\"string\">&quot;acd&quot;</span>;</span><br><span class=\"line\"><span class=\"variable\">$b</span> = <span class=\"string\">&quot;ace&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"variable\">$a</span> &lt;=&gt; <span class=\"variable\">$b</span>);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"比较\"><a href=\"#比较\" class=\"headerlink\" title=\"比较\"></a>比较</h2><h3 id=\"数据类型的比较\"><a href=\"#数据类型的比较\" class=\"headerlink\" title=\"数据类型的比较\"></a>数据类型的比较</h3><p>虽然 PHP 是弱类型语言，但也需要明白变量类型及它们的意义<br>因为我们经常需要对 PHP 变量进行比较，包含松散和严格比较。</p>\n<ul>\n<li>松散比较：使用两个等号 &#x3D;&#x3D; 比较，只比较值，不比较类型。</li>\n<li>严格比较：用三个等号（全等） &#x3D;&#x3D;&#x3D; 比较，除了比较值，也比较类型。</li>\n</ul>\n<p>例如，”42” 是一个字符串而 42 是一个整数。false 是一个布尔值而 “false” 是一个字符串。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"number\">42</span> == <span class=\"string\">&quot;42&quot;</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;1、值相等&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">echo</span> PHP_EOL; <span class=\"comment\">// 换行符</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"number\">42</span> === <span class=\"string\">&quot;42&quot;</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;2、类型相等&#x27;</span>;</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;3、类型不相等&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>问题：如果只想比较类型是否相同，怎么比较？</p>\n<h3 id=\"比较undefined、-0、false、null、空值\"><a href=\"#比较undefined、-0、false、null、空值\" class=\"headerlink\" title=\"比较undefined、 0、false、null、空值\"></a>比较undefined、 0、false、null、空值</h3><p>分析 isset() is_null() empty()的区别</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(!<span class=\"keyword\">isset</span>(<span class=\"variable\">$name</span>));</span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"title function_ invoke__\">is_null</span>(<span class=\"variable\">$name</span>));</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$name</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(!<span class=\"keyword\">isset</span>(<span class=\"variable\">$name</span>));</span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"title function_ invoke__\">is_null</span>(<span class=\"variable\">$name</span>));</span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"keyword\">empty</span>(<span class=\"variable\">$name</span>));</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"empty\"><a href=\"#empty\" class=\"headerlink\" title=\"empty\"></a>empty</h4><p>注意：empty() 函数对于未定义的变量也会返回true，因此在使用empty() 函数之前，应该确保变量已经被定义</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$var1</span> = <span class=\"string\">&quot;&quot;</span>; <span class=\"comment\">// 空字符串</span></span><br><span class=\"line\"><span class=\"variable\">$var2</span> = <span class=\"number\">0</span>; <span class=\"comment\">// 整数0</span></span><br><span class=\"line\"><span class=\"variable\">$var3</span> = <span class=\"literal\">null</span>; <span class=\"comment\">// null</span></span><br><span class=\"line\"><span class=\"variable\">$var4</span> = <span class=\"literal\">false</span>; <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"variable\">$var5</span> = <span class=\"keyword\">array</span>(); <span class=\"comment\">// 空数组 []</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"keyword\">empty</span>(<span class=\"variable\">$var1</span>));</span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"keyword\">empty</span>(<span class=\"variable\">$var2</span>));</span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"keyword\">empty</span>(<span class=\"variable\">$var3</span>));</span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"keyword\">empty</span>(<span class=\"variable\">$var4</span>));</span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"keyword\">empty</span>(<span class=\"variable\">$var5</span>));</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"字符串相关函数\"><a href=\"#字符串相关函数\" class=\"headerlink\" title=\"字符串相关函数\"></a>字符串相关函数</h2><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$strZh</span> = <span class=\"string\">&quot;我是写代码的askk&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$strEn</span> = <span class=\"string\">&quot;Hello askk,I am a person who loves to share&quot;</span>;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>strlen()  获取字符串长度 </p>\n</li>\n<li><p>strpos() 在字符串内查找一个字符或一段指定的文本，返回第一次出现的位置或false</p>\n</li>\n<li><p>stripos() 同上，但不区分大小写</p>\n</li>\n<li><p>strrpos() 同上上，返回最后一次出现的位置或false</p>\n</li>\n<li><p>strripos() 同上，但不区分大小写</p>\n</li>\n<li><p>explode()  把字符串打散成数组</p>\n</li>\n<li><p>implode() 把数组拼接成字符串</p>\n</li>\n<li><p>strtoupper() 把字符串转换为大写</p>\n</li>\n<li><p>strtolower() 把字符串转换为小写</p>\n</li>\n<li><p>ucfirst() 将单词的首字母转换为大写</p>\n</li>\n<li><p>lcfirst() 将单词的首字母转换为小写</p>\n</li>\n<li><p>ucwords() 将字符串中每个单词的首字母转换为大写</p>\n</li>\n<li><p>str_replace($search, $replace, $string) 将字符串中的某个子字符串替换为另一个字符串</p>\n</li>\n<li><p>strrev()：将字符串反转</p>\n</li>\n<li><p>trim()：去除字符串两端的空格</p>\n</li>\n<li><p>substr() 截取字符串的一部分</p>\n</li>\n<li><p>mb_substr() 截取字符串的一部分(中文)  需要安装扩展mbstring</p>\n</li>\n</ul>\n<h2 id=\"初级实战4-字符串函数的使用\"><a href=\"#初级实战4-字符串函数的使用\" class=\"headerlink\" title=\"初级实战4 - 字符串函数的使用\"></a>初级实战4 - 字符串函数的使用</h2><p>编写一个函数，接受一个英文字符串参数”Hello askk, HOW Are You?”，将字符串中的每个单词的首字母转换为小写，并返回修改后的字符串。</p>\n<ul>\n<li>考察字符串的函数使用</li>\n<li>考察数组的使用</li>\n<li>考察循环的使用</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$str</span> = <span class=\"string\">&#x27;Hello askk,HOW,Are,You&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$arr</span> = <span class=\"title function_ invoke__\">explode</span>(<span class=\"string\">&#x27; &#x27;</span>,<span class=\"variable\">$str</span>);</span><br><span class=\"line\"><span class=\"comment\">//   print_r($arr);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$newArr</span> = [];</span><br><span class=\"line\"><span class=\"keyword\">foreach</span> (<span class=\"variable\">$arr</span> <span class=\"keyword\">as</span> <span class=\"variable\">$key</span> =&gt; <span class=\"variable\">$value</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(<span class=\"title function_ invoke__\">strpos</span>(<span class=\"variable\">$value</span>,<span class=\"string\">&#x27;,&#x27;</span>) !== <span class=\"literal\">false</span>)&#123;</span><br><span class=\"line\">      <span class=\"variable\">$valueArr</span> = <span class=\"title function_ invoke__\">explode</span>(<span class=\"string\">&#x27;,&#x27;</span>,<span class=\"variable\">$value</span>);</span><br><span class=\"line\">      <span class=\"variable\">$newValueArr</span> = [];</span><br><span class=\"line\">      <span class=\"keyword\">foreach</span> (<span class=\"variable\">$valueArr</span> <span class=\"keyword\">as</span> <span class=\"variable\">$kk</span> =&gt; <span class=\"variable\">$vv</span>) &#123;</span><br><span class=\"line\">          <span class=\"variable\">$newValueArr</span>[] = <span class=\"title function_ invoke__\">lcfirst</span>(<span class=\"variable\">$vv</span>); </span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"variable\">$newArr</span>[] = <span class=\"title function_ invoke__\">implode</span>(<span class=\"string\">&#x27;,&#x27;</span>,<span class=\"variable\">$newValueArr</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"variable\">$newArr</span>[]= <span class=\"title function_ invoke__\">lcfirst</span>(<span class=\"variable\">$value</span>); </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">implode</span>(<span class=\"string\">&#x27; &#x27;</span>,<span class=\"variable\">$newArr</span>);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"数组相关函数\"><a href=\"#数组相关函数\" class=\"headerlink\" title=\"数组相关函数\"></a>数组相关函数</h2><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$array</span> = [<span class=\"string\">&quot;a&quot;</span>,<span class=\"string\">&quot;b&quot;</span>,<span class=\"string\">&quot;c&quot;</span>,<span class=\"string\">&quot;d&quot;</span>];</span><br></pre></td></tr></table></figure>\n<ol>\n<li>array()：创建一个数组。 </li>\n<li>count()：返回数组中元素的数量。 </li>\n<li>array_push($array, $newElement)：将一个或多个元素添加到数组的末尾。</li>\n<li>array_unshift($array, $newElement)：将一个或多个元素添加到数组的开头。 </li>\n<li>array_pop()：删除并返回数组中的最后一个元素。 </li>\n<li>array_shift()：删除并返回数组中的第一个元素。 </li>\n<li>array_slice()：从数组中提取一部分元素，组成新的数组。 </li>\n<li>array_merge()：合并两个或多个数组。 </li>\n<li>array_reverse()：反转数组中的元素的顺序。</li>\n<li>in_array()：检查数组中是否存在某个值。 </li>\n<li>array_key_exists()：检查数组中是否存在某个键。 </li>\n<li>array_keys()：返回数组中的所有键，组成新数组。 </li>\n<li>array_values()：返回数组中的所有值，组成新数组。 </li>\n<li>array_search()：在数组中搜索给定的值，并返回对应的键。 </li>\n<li>array_unique()：移除数组中的重复值（原数组不变）。</li>\n<li>max() min() 最大值和最小值</li>\n<li>sort() 数组排序（升序）</li>\n<li>rsort() 数组排序（降序）</li>\n<li>array_sum() 数组求和</li>\n<li>array_product() 数组求乘积</li>\n</ol>\n<p>暂时就想到这些函数，后面如果我们遇到了会再做补充。</p>\n<h2 id=\"初级实战5-数组函数的使用\"><a href=\"#初级实战5-数组函数的使用\" class=\"headerlink\" title=\"初级实战5 - 数组函数的使用\"></a>初级实战5 - 数组函数的使用</h2><p>编写一个PHP函数 <code>testArray($numbers)</code> ，该函数接收一个整数数组 <code>$numbers</code> 作为参数，并返回一个关联数组，包含以下统计信息：</p>\n<ul>\n<li>“count” ：数组中的元素个数。 </li>\n<li>“sum” ：数组中所有元素的总和。 </li>\n<li>“average” ：数组中元素的平均值。 </li>\n<li>“max” ：数组中的最大值。 </li>\n<li>“min” ：数组中的最小值。 </li>\n<li>“sorted” ：按照从小到大排序的数组。</li>\n</ul>\n<p>测试数组：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$numbers</span> = [<span class=\"number\">5</span>, <span class=\"number\">9</span>, <span class=\"number\">3</span>, <span class=\"number\">2</span>, <span class=\"number\">7</span>, <span class=\"number\">1</span>, <span class=\"number\">6</span>];</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"时间、日期相关知识\"><a href=\"#时间、日期相关知识\" class=\"headerlink\" title=\"时间、日期相关知识\"></a>时间、日期相关知识</h2><h4 id=\"函数-1\"><a href=\"#函数-1\" class=\"headerlink\" title=\"函数\"></a>函数</h4><ul>\n<li><p>time() 获取当前时间戳（10位），例如：1697520502</p>\n</li>\n<li><p>microtime(true) 返回一个浮点数时间戳（秒数和微秒数的总和）floor(microtime(true)*1000)</p>\n</li>\n<li><p>date(格式，时间戳) 日期格式化</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$time</span> = <span class=\"title function_ invoke__\">time</span>();</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">date</span>(<span class=\"string\">&#x27;Y-m-d H:i:s&#x27;</span>,<span class=\"variable\">$time</span>);</span><br></pre></td></tr></table></figure></li>\n<li><p>strtotime(string) </p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_ invoke__\">strtotime</span>(<span class=\"string\">&quot;next Monday&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$baseTime</span> = <span class=\"title function_ invoke__\">strtotime</span>(<span class=\"string\">&quot;2023-10-01&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">strtotime</span>(<span class=\"string\">&quot;next Monday&quot;</span>, <span class=\"variable\">$baseTime</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$baseTime</span> = <span class=\"title function_ invoke__\">time</span>();</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">strtotime</span>(<span class=\"string\">&quot;+1 day&quot;</span>, <span class=\"variable\">$baseTime</span>);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>mktime($hour, $minute, $second, $month, $day, $year)  生成时间戳</p>\n</li>\n<li><p><code>date_create()</code> 来创建一个日期时间对象 <code>date_create(&#39;2023-11-01&#39;)</code></p>\n</li>\n<li><p><code>date_format()</code> 用于将日期和时间格式化为指定的字符串格式</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_ invoke__\">date_format</span>(<span class=\"variable\">$date</span>, <span class=\"string\">&quot;Y-m-d H:i:s&quot;</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">date_format</span>(<span class=\"variable\">$date</span>, <span class=\"string\">&quot;Y年m月d日 H:i:s&quot;</span>)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>date_diff() 计算两个日期之间的差</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$date1</span> = <span class=\"title function_ invoke__\">date_create</span>(<span class=\"string\">&#x27;2023-10-20 12:00:00&#x27;</span>);</span><br><span class=\"line\"><span class=\"variable\">$date2</span> = <span class=\"title function_ invoke__\">date_create</span>(<span class=\"string\">&#x27;2023-10-21 12:00:00&#x27;</span>);</span><br><span class=\"line\"><span class=\"variable\">$diff</span> = <span class=\"title function_ invoke__\">date_diff</span>(<span class=\"variable\">$date2</span>, <span class=\"variable\">$date1</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$diff</span>-&gt;<span class=\"title function_ invoke__\">format</span>(<span class=\"string\">&#x27;%a 天&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$diff</span>-&gt;<span class=\"title function_ invoke__\">format</span>(<span class=\"string\">&#x27;%m 月&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$diff</span>-&gt;<span class=\"title function_ invoke__\">format</span>(<span class=\"string\">&#x27;%y 年 %m 月 %d 天&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">-  %Y ：完整年份的差异 </span><br><span class=\"line\">-  %y ：年份的差异（两位数） </span><br><span class=\"line\">-  %m ：月份的差异 </span><br><span class=\"line\">-  %d ：天数的差异 </span><br><span class=\"line\">-  %a ：总共的天数差异 </span><br><span class=\"line\">-  %H ：小时的差异 </span><br><span class=\"line\">-  %h ：小时的差异（<span class=\"number\">12</span>小时制） </span><br><span class=\"line\">-  %I ：分钟的差异 </span><br><span class=\"line\">-  %S ：秒数的差异 </span><br><span class=\"line\">-  %R ：正负</span><br><span class=\"line\">-  %r ：正负(必须是负的才会显示)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>strftime($format, $timestamp)</code> ：根据指定的格式，将时间戳格式化为可读的日期和时间字符串，支持本地化的日期和时间格式 (php8已废弃)。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$timestamp</span> = <span class=\"title function_ invoke__\">time</span>();</span><br><span class=\"line\"><span class=\"variable\">$dateString</span> = <span class=\"title function_ invoke__\">strftime</span>(<span class=\"string\">&quot;%A %Y-%m-%d %H:%M:%S&quot;</span>, <span class=\"variable\">$timestamp</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$dateString</span>;</span><br></pre></td></tr></table></figure></li>\n<li><p><code>gmdate($format, $timestamp)</code> ：根据指定的格式，将GMT时间戳格式化为可读的日期和时间字符串。<br><code>gmdate()</code> 和 <code>date()</code>的区别<br><code>gmdate()</code> 函数使用格林威治标准时间（GMT）作为默认的日期&#x2F;时间基准，会忽略服务器的时区设置，始终返回格林威治标准时间（GMT）的日期和时间；<br><code>date()</code> 函数则使用本地时间作为基准，它会根据当前服务器的时区设置来格式化日期和时间。</p>\n</li>\n<li><p><code>date_default_timezone_set($timezone)</code> ：设置默认的时区。</p>\n</li>\n</ul>\n<p>“UTC”, “localtime”本地时区, “Asia&#x2F;Shanghai”上海</p>\n<p>注意：只能在脚本开始时设置默认时区，不能在运行时动态设置。</p>\n<ul>\n<li><code>timezone_identifiers_list()</code> ：返回所有可用时区标识符的数组。</li>\n</ul>\n<h4 id=\"DateTime对象\"><a href=\"#DateTime对象\" class=\"headerlink\" title=\"DateTime对象\"></a>DateTime对象</h4><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$dateTime</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">DateTime</span>(<span class=\"string\">&quot;2023-11-01 12:34:56&quot;</span>);</span><br><span class=\"line\"><span class=\"comment\">//增加或减少指定的时间间隔</span></span><br><span class=\"line\"><span class=\"variable\">$dateTime</span>-&gt;<span class=\"title function_ invoke__\">modify</span>(<span class=\"string\">&#x27;+1 day&#x27;</span>);</span><br><span class=\"line\"><span class=\"variable\">$dateTime</span>-&gt;<span class=\"title function_ invoke__\">modify</span>(<span class=\"string\">&#x27;-1 hour&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//设置日期部分 setDate($year, $month, $day)</span></span><br><span class=\"line\"><span class=\"variable\">$dateTime</span>-&gt;<span class=\"title function_ invoke__\">setDate</span>(<span class=\"number\">2024</span>, <span class=\"number\">1</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//设置时间部分 setTime($hour, $minute, $second)</span></span><br><span class=\"line\"><span class=\"variable\">$dateTime</span>-&gt;<span class=\"title function_ invoke__\">setTime</span>(<span class=\"number\">13</span>, <span class=\"number\">1</span>, <span class=\"number\">5</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设置时区</span></span><br><span class=\"line\"><span class=\"variable\">$dateTime</span>-&gt;<span class=\"title function_ invoke__\">setTimezone</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">DateTimeZone</span>(<span class=\"string\">&quot;Asia/Shanghai&quot;</span>)); </span><br><span class=\"line\"><span class=\"comment\">// 获取时区</span></span><br><span class=\"line\"><span class=\"variable\">$dateTimeZone</span> = <span class=\"variable\">$dateTime</span>-&gt;<span class=\"title function_ invoke__\">getTimezone</span>(); </span><br><span class=\"line\"><span class=\"title function_ invoke__\">print_r</span>(<span class=\"variable\">$dateTimeZone</span>-&gt;<span class=\"title function_ invoke__\">getName</span>());</span><br><span class=\"line\"><span class=\"title function_ invoke__\">print_r</span>(<span class=\"variable\">$dateTimeZone</span>-&gt;<span class=\"title function_ invoke__\">getLocation</span>());</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//将日期时间格式化为指定的字符串格式</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$dateTime</span>-&gt;<span class=\"title function_ invoke__\">format</span>(<span class=\"string\">&quot;Y-m-d H:i:s&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//获取时间戳</span></span><br><span class=\"line\"><span class=\"variable\">$timestamp</span> = <span class=\"variable\">$dateTime</span>-&gt;<span class=\"title function_ invoke__\">getTimestamp</span>();</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$timestamp</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//计算时间差</span></span><br><span class=\"line\"><span class=\"variable\">$dateTime2</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">DateTime</span>(<span class=\"string\">&#x27;2023-12-05&#x27;</span>);</span><br><span class=\"line\"><span class=\"variable\">$diff</span> = <span class=\"variable\">$dateTime</span>-&gt;<span class=\"title function_ invoke__\">diff</span>(<span class=\"variable\">$dateTime2</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$diff</span>-&gt;<span class=\"title function_ invoke__\">format</span>(<span class=\"string\">&#x27;%R %m %d %h %i %s&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$datetime</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">DateTime</span>(<span class=\"string\">&#x27;2024-01-01&#x27;</span>);</span><br><span class=\"line\"><span class=\"variable\">$interval</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">DateInterval</span>(<span class=\"string\">&#x27;P1D&#x27;</span>); <span class=\"comment\">// 一天的时间间隔</span></span><br><span class=\"line\"><span class=\"variable\">$datetime</span>-&gt;<span class=\"title function_ invoke__\">add</span>(<span class=\"variable\">$interval</span>);</span><br><span class=\"line\"><span class=\"comment\">//$datetime-&gt;sub($interval);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$datetime</span>-&gt;<span class=\"title function_ invoke__\">format</span>(<span class=\"string\">&#x27;Y-m-d&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<h2 id=\"特殊的变量写法和常量\"><a href=\"#特殊的变量写法和常量\" class=\"headerlink\" title=\"特殊的变量写法和常量\"></a>特殊的变量写法和常量</h2><p>交流社区地址：<a href=\"https://askk.fun/\">https://askk.fun</a></p>\n<h3 id=\"特殊的变量写法\"><a href=\"#特殊的变量写法\" class=\"headerlink\" title=\"特殊的变量写法\"></a>特殊的变量写法</h3><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$a</span> =<span class=\"string\">&#x27;askk&#x27;</span>;</span><br><span class=\"line\"><span class=\"variable\">$$a</span> = <span class=\"string\">&quot;测试&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$a</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&#x27; ---- &#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$$a</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&#x27; ---- &#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$askk</span>;</span><br></pre></td></tr></table></figure>\n\n<p>实际使用场景：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"variable\">$i</span>=<span class=\"number\">0</span>; <span class=\"variable\">$i</span> &lt; <span class=\"number\">5</span>; <span class=\"variable\">$i</span>++) &#123; </span><br><span class=\"line\">    <span class=\"variable\">$a</span> = <span class=\"string\">&quot;askk&quot;</span>.<span class=\"variable\">$i</span>;</span><br><span class=\"line\">    <span class=\"variable\">$$a</span> = <span class=\"string\">&quot;测试-&quot;</span>.<span class=\"variable\">$i</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$askk1</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$askk2</span>;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"常量\"><a href=\"#常量\" class=\"headerlink\" title=\"常量\"></a>常量</h3><p>常量值被定义后，在脚本的其他任何地方都不能被改变。<br>命名规则和变量类似，严格区分大小写，但无需$符<br><strong>注意：</strong> 默认是全局的，可以在整个运行的脚本的任何地方使用。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_ invoke__\">define</span>(<span class=\"string\">&quot;askk&quot;</span>, <span class=\"string\">&quot;写代码的askk askk.fun&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> askk;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&#x27;&lt;hr&gt;&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"variable constant_\">askk1</span> = <span class=\"string\">&quot;猫大叔&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> askk1;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$a</span> = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"title function_ invoke__\">define</span>(<span class=\"string\">&quot;askk&quot;</span>.<span class=\"variable\">$a</span>, <span class=\"string\">&quot;askk1&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">constant</span>(<span class=\"string\">&quot;askk&quot;</span>.<span class=\"variable\">$a</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&#x27;&lt;hr&gt;&#x27;</span>;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>实际使用场景：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"variable\">$i</span>=<span class=\"number\">0</span>; <span class=\"variable\">$i</span> &lt; <span class=\"number\">5</span>; <span class=\"variable\">$i</span>++) &#123; </span><br><span class=\"line\">    <span class=\"variable\">$a</span> = <span class=\"string\">&quot;askk&quot;</span>.<span class=\"variable\">$i</span>;</span><br><span class=\"line\">    <span class=\"comment\">// $$a = &quot;测试-&quot;.$i;</span></span><br><span class=\"line\">    <span class=\"title function_ invoke__\">define</span>(<span class=\"variable\">$a</span>,<span class=\"string\">&#x27;测试-&#x27;</span>.<span class=\"variable\">$i</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">echo</span> askk1;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> askk2;</span><br></pre></td></tr></table></figure>\n<h4 id=\"const和define的区别\"><a href=\"#const和define的区别\" class=\"headerlink\" title=\"const和define的区别\"></a>const和define的区别</h4><ul>\n<li>const不能在条件语句中定义常量</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$a</span> = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"variable\">$a</span>==<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">define</span>(<span class=\"string\">&quot;askk&quot;</span>.<span class=\"variable\">$a</span>, <span class=\"string\">&quot;askk1&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">constant</span>(<span class=\"string\">&quot;askk&quot;</span>.<span class=\"variable\">$a</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"variable constant_\">askk2</span> = <span class=\"string\">&quot;猫大叔&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> askk2;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<ul>\n<li>const用于类成员变量的定义，define不可以用于类成员变量的定义，可用于全局常量。</li>\n<li>const可在类中使用，define不能</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ceshi</span> </span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"variable constant_\">Ceshi</span> = <span class=\"string\">&#x27;askk&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">cc</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">define</span>(<span class=\"string\">&#x27;MS&#x27;</span>,<span class=\"string\">&#x27;写代码的askk&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"built_in\">self</span>::<span class=\"variable constant_\">Ceshi</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable\">$c</span> = <span class=\"keyword\">new</span> ceshi;</span><br><span class=\"line\"><span class=\"variable\">$c</span>-&gt;<span class=\"title function_ invoke__\">cc</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&#x27;----&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> MS;</span><br></pre></td></tr></table></figure>\n\n\n<h4 id=\"常量和变量的区别：\"><a href=\"#常量和变量的区别：\" class=\"headerlink\" title=\"常量和变量的区别：\"></a>常量和变量的区别：</h4><ul>\n<li><p>常量前面没有美元符号($)，而且不能有</p>\n</li>\n<li><p>常量可以不用理会变量的作用域在任何地方定义和访问</p>\n</li>\n<li><p>常量一旦定义就不能重新定义或取消定义</p>\n</li>\n<li><p>常量的值只能是标量（字符串、整数、浮点数、布尔值）,注意：现在也支持数组了</p>\n</li>\n</ul>\n<p>获取所有的常量</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_ invoke__\">get_defined_constants</span>()</span><br><span class=\"line\"><span class=\"title function_ invoke__\">get_defined_constants</span>(<span class=\"literal\">true</span>)</span><br><span class=\"line\"><span class=\"title function_ invoke__\">get_defined_constants</span>(<span class=\"literal\">true</span>)[<span class=\"string\">&quot;user&quot;</span>]</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"魔术常量\"><a href=\"#魔术常量\" class=\"headerlink\" title=\"魔术常量\"></a>魔术常量</h3><p>魔术常量：它的值随着它在代码中的位置改变而改变</p>\n<h5 id=\"LINE\"><a href=\"#LINE\" class=\"headerlink\" title=\"__LINE__\"></a><code>__LINE__</code></h5><p>文件中的当前行号</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&#x27;这是第 &quot; &#x27;</span> . <span class=\"keyword\">__LINE__</span> . <span class=\"string\">&#x27; &quot; 行&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<h5 id=\"FILE\"><a href=\"#FILE\" class=\"headerlink\" title=\"__FILE__\"></a><code>__FILE__</code></h5><p>文件的完整路径和文件名，包含（盘符）根目录</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&#x27;该文件的完整路径为 &quot; &#x27;</span> . <span class=\"keyword\">__FILE__</span> . <span class=\"string\">&#x27; &quot; &#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"DIR\"><a href=\"#DIR\" class=\"headerlink\" title=\"__DIR__\"></a><code>__DIR__</code></h5><p>文件所在的目录</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&#x27;该文件位于 &quot; &#x27;</span> . <span class=\"keyword\">__DIR__</span> . <span class=\"string\">&#x27; &quot; &#x27;</span>;</span><br></pre></td></tr></table></figure>\n<h5 id=\"FUNCTION\"><a href=\"#FUNCTION\" class=\"headerlink\" title=\"__FUNCTION__\"></a><code>__FUNCTION__</code></h5><p>该函数被定义时的名字（区分大小写）</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span>  <span class=\"string\">&#x27;函数名为：&#x27;</span> . <span class=\"keyword\">__FUNCTION__</span> ;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_ invoke__\">test</span>();</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"CLASS\"><a href=\"#CLASS\" class=\"headerlink\" title=\"__CLASS__\"></a><code>__CLASS__</code></h5><p>该类被定义时的名字（区分大小写）</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">testClass</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;类名为：&#x27;</span>  . <span class=\"keyword\">__CLASS__</span> . <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span>  <span class=\"string\">&#x27;函数名为：&#x27;</span> . <span class=\"keyword\">__FUNCTION__</span> ;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable\">$t</span> = <span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">testClass</span>();</span><br><span class=\"line\"><span class=\"variable\">$t</span>-&gt;<span class=\"title function_ invoke__\">test</span>();</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n<h5 id=\"NAMESPACE\"><a href=\"#NAMESPACE\" class=\"headerlink\" title=\"__NAMESPACE__\"></a><code>__NAMESPACE__</code></h5><p>命名空间</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title class_\">MyProject</span>; </span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&#x27;命名空间为：&quot;&#x27;</span>, <span class=\"keyword\">__NAMESPACE__</span>, <span class=\"string\">&#x27;&quot;&#x27;</span>; <span class=\"comment\">// 输出 &quot;MyProject&quot;</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"METHOD\"><a href=\"#METHOD\" class=\"headerlink\" title=\"__METHOD__\"></a><code>__METHOD__</code></h5><p>包含了：命名空间 类名 函数名</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title class_\">askk</span>;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyClass</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">myMethod</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"keyword\">__METHOD__</span>; <span class=\"comment\">// 输出：askk\\MyClass::myMethod</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$obj</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">MyClass</span>();</span><br><span class=\"line\"><span class=\"variable\">$obj</span>-&gt;<span class=\"title function_ invoke__\">myMethod</span>();</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"TRAIT\"><a href=\"#TRAIT\" class=\"headerlink\" title=\"__TRAIT__\"></a><code>__TRAIT__</code></h5><p>当前使用的 trait 的名称</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">trait</span> <span class=\"title\">MyTrait</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">myMethod</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot;trait的名称为: &quot;</span> . <span class=\"keyword\">__TRAIT__</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyClass</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">use</span> <span class=\"title\">MyTrait</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$obj</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">MyClass</span>();</span><br><span class=\"line\"><span class=\"variable\">$obj</span>-&gt;<span class=\"title function_ invoke__\">myMethod</span>();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"包含文件\"><a href=\"#包含文件\" class=\"headerlink\" title=\"包含文件\"></a>包含文件</h2><p>在当前文件内引入其他PHP文件、HTML文件或文本文件等，一般用于包含公共方法，公共页面等，例如header footer sider等网页通用部分。</p>\n<h3 id=\"include-和-require-语句\"><a href=\"#include-和-require-语句\" class=\"headerlink\" title=\"include 和 require 语句\"></a>include 和 require 语句</h3><p>区别：<br><strong>include 和 require 除了处理错误的方式不同之外，在其他方面都是相同的：</strong></p>\n<ul>\n<li>require 生成一个致命错误（E_COMPILE_ERROR），在错误发生后脚本会停止执行。</li>\n<li>include 生成一个警告（E_WARNING），在错误发生后脚本会继续执行。</li>\n</ul>\n<p>因此：<br>如果你希望被包含的文件是必需的且缺少文件会导致脚本无法正常运行，应使用require（推荐）。<br>如果你希望被包含的文件是可选的，或者即使缺少文件也希望脚本继续执行，可以使用include。</p>\n<h4 id=\"例如：\"><a href=\"#例如：\" class=\"headerlink\" title=\"例如：\"></a>例如：</h4><h5 id=\"header-php\"><a href=\"#header-php\" class=\"headerlink\" title=\"header.php\"></a>header.php</h5><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> </span><br><span class=\"line\">\t<span class=\"variable\">$siteTitle</span> = <span class=\"string\">&quot;askk星球(askk.fun)&quot;</span>;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">&lt;meta charset=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span><br><span class=\"line\">&lt;title&gt;<span class=\"meta\">&lt;?php</span> <span class=\"keyword\">echo</span> <span class=\"variable\">$siteTitle</span>;<span class=\"meta\">?&gt;</span>&lt;/title&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"index-php\"><a href=\"#index-php\" class=\"headerlink\" title=\"index.php\"></a>index.php</h5><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> <span class=\"keyword\">include</span> <span class=\"string\">&#x27;header.php&#x27;</span>; <span class=\"meta\">?&gt;</span></span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;h1&gt;欢迎来到<span class=\"meta\">&lt;?php</span> <span class=\"keyword\">echo</span> <span class=\"variable\">$siteTitle</span>;<span class=\"meta\">?&gt;</span> !&lt;/h1&gt;</span><br><span class=\"line\">&lt;p&gt;有问必答。&lt;/p&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"include-once-和-require-once-语句\"><a href=\"#include-once-和-require-once-语句\" class=\"headerlink\" title=\"include_once 和 require_once 语句\"></a>include_once 和 require_once 语句</h3><p>和上面的一样，但他只会调用一次，防止重复调用</p>\n<h2 id=\"面向对象（OO）\"><a href=\"#面向对象（OO）\" class=\"headerlink\" title=\"面向对象（OO）\"></a>面向对象（OO）</h2><h3 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h3><h4 id=\"对象：\"><a href=\"#对象：\" class=\"headerlink\" title=\"对象：\"></a>对象：</h4><p>在现实世界里我们所面对的事情都是对象，如苹果 猫 电视机等。<br>而在面向对象的程序设计(OOP)中，对象是一个由信息及对信息进行处理的描述所组成的整体，是对现实世界的抽象。</p>\n<p>例如：<br>小猫 名字：Tom，性别：公，花色：橘色；会叫，会吃饭，会打闹<br>小狗 名字：Jack，性别：公，花色：黑色；会叫，会吃饭，会打闹</p>\n<p>区分：谁在叫，谁在吃饭，谁在打闹</p>\n<h4 id=\"面向对象：\"><a href=\"#面向对象：\" class=\"headerlink\" title=\"面向对象：\"></a>面向对象：</h4><ul>\n<li>面向对象是一种编程思想和方法，它将程序中的<strong>数据</strong>和<strong>操作数据</strong>的方法封装在一起，形成”对象”，并通过对象之间的交互和消息传递来完成程序的功能。</li>\n<li>面向对象编程(OOP)强调数据的<strong>封装、继承、多态</strong>和<strong>动态绑定</strong>等特性，使得程序具有更好的可扩展性、可维护性和可重用性。</li>\n</ul>\n<h4 id=\"对象的主要三个特性：\"><a href=\"#对象的主要三个特性：\" class=\"headerlink\" title=\"对象的主要三个特性：\"></a><strong>对象的主要三个特性：</strong></h4><ul>\n<li>对象的行为：对象可以执行的操作，比如：开灯，关灯就是行为。</li>\n<li>对象的形态：对对象不同的行为是如何响应的，比如：颜色，尺寸，外型。</li>\n<li>对象的表示：对象的表示就相当于身份证，具体区分在相同的行为与状态下有什么不同（在面向对象编程中，对象的表示通常通过类来实现）。</li>\n</ul>\n<h4 id=\"面向对象编程的三个主要特性：\"><a href=\"#面向对象编程的三个主要特性：\" class=\"headerlink\" title=\"面向对象编程的三个主要特性：\"></a><strong>面向对象编程的三个主要特性：</strong></h4><ul>\n<li><p>封装：指将对象的属性和方法封装在一起，使得外部无法直接访问和修改对象的内部状态。通过使用访问控制修饰符（public、private、protected）来限制属性和方法的访问权限，从而实现封装。</p>\n</li>\n<li><p>继承：指可以创建一个新的类，该类继承（extends）了父类的属性和方法，并且可以添加自己的属性和方法。通过继承，可以避免重复编写相似的代码，并且可以实现代码的重用。</p>\n</li>\n<li><p>多态：指可以使用一个父类类型的变量来引用不同子类类型的对象，从而实现对不同对象的统一操作。多态可以使得代码更加灵活，具有更好的可扩展性和可维护性。在 PHP 中，多态可以通过实现接口（interface）和使用抽象类（abstract class）来实现。</p>\n</li>\n</ul>\n<h3 id=\"类（class）\"><a href=\"#类（class）\" class=\"headerlink\" title=\"类（class）\"></a>类（class）</h3><ul>\n<li>定义了一件事物的抽象特点。</li>\n<li>类的定义包含了数据的形式以及对数据的操作。</li>\n</ul>\n<h4 id=\"类的定义和调用\"><a href=\"#类的定义和调用\" class=\"headerlink\" title=\"类的定义和调用\"></a>类的定义和调用</h4><h5 id=\"类的定义\"><a href=\"#类的定义\" class=\"headerlink\" title=\"类的定义\"></a>类的定义</h5><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Animal</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"variable\">$name</span> = <span class=\"string\">&quot;小猫仔&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">eat</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot; 在吃饭.&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"类的调用\"><a href=\"#类的调用\" class=\"headerlink\" title=\"类的调用\"></a>类的调用</h5><p>new 实例化对象</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$cat</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Animal</span>;</span><br><span class=\"line\"><span class=\"comment\">//$cat = new Animal();</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$cat</span>-&gt;name;</span><br><span class=\"line\"><span class=\"variable\">$cat</span>-&gt;<span class=\"title function_ invoke__\">eat</span>();</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"方法和属性\"><a href=\"#方法和属性\" class=\"headerlink\" title=\"方法和属性\"></a>方法和属性</h4><h5 id=\"类方法（函数）\"><a href=\"#类方法（函数）\" class=\"headerlink\" title=\"类方法（函数）\"></a>类方法（函数）</h5><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Animal</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"variable\">$name</span> = <span class=\"string\">&quot;小猫仔&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">eat</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot; 在吃饭.&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">say</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot; 在说话.&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"this\"><a href=\"#this\" class=\"headerlink\" title=\"$this\"></a>$this</h5><p>代表自身的对象</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Animal</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"variable\">$name</span> = <span class=\"string\">&quot;小猫仔&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">eat</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"variable language_\">$this</span>-&gt;name.<span class=\"string\">&quot; 在吃饭.&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">say</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"variable language_\">$this</span>-&gt;name.<span class=\"string\">&quot; 在说话.&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$cat</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Animal</span>;</span><br><span class=\"line\"><span class=\"variable\">$cat</span>-&gt;name = <span class=\"string\">&quot;小花&quot;</span>;</span><br><span class=\"line\"><span class=\"variable\">$cat</span>-&gt;<span class=\"title function_ invoke__\">say</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$dog</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Animal</span>;</span><br><span class=\"line\"><span class=\"variable\">$dog</span>-&gt;name = <span class=\"string\">&quot;小黑&quot;</span>;</span><br><span class=\"line\"><span class=\"variable\">$dog</span>-&gt;<span class=\"title function_ invoke__\">say</span>();</span><br></pre></td></tr></table></figure>\n<h5 id=\"访问控制\"><a href=\"#访问控制\" class=\"headerlink\" title=\"访问控制\"></a>访问控制</h5><p>关键字 public、private、protected</p>\n<ul>\n<li><strong>public（公有）</strong>：公有的类成员可以在任何地方被访问。</li>\n<li><strong>protected（受保护）</strong>：受保护的类成员则可以被其自身以及其子类和父类访问（咱家的）。</li>\n<li><strong>private（私有）</strong>：私有的类成员则只能被其定义所在的类访问（自己的）。</li>\n</ul>\n<h5 id=\"construct构造函数\"><a href=\"#construct构造函数\" class=\"headerlink\" title=\"__construct构造函数\"></a><code>__construct</code>构造函数</h5><ul>\n<li>构造函数是一种特殊的方法，在创建一个新对象时，它会被自动调用。</li>\n<li>它可以用来 <strong>初始化</strong> 对象的属性或执行其他必要的操作</li>\n<li>没有返回值</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Animal</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"variable\">$name</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"variable\">$birth</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"variable\">$age</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"><span class=\"variable\">$name</span>,<span class=\"variable\">$birth</span></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;name = <span class=\"variable\">$name</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;birth = <span class=\"variable\">$birth</span>;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"variable\">$days</span> = (<span class=\"title function_ invoke__\">time</span>() - <span class=\"title function_ invoke__\">strtotime</span>(<span class=\"variable\">$this</span>-&gt;birth))/<span class=\"number\">3600</span>/<span class=\"number\">24</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;age = <span class=\"title function_ invoke__\">floor</span>(<span class=\"variable\">$days</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">eat</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span>  <span class=\"variable language_\">$this</span>-&gt;name.<span class=\"string\">&quot; 在吃饭.&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$cat</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Animal</span>(<span class=\"string\">&quot;猫仔&quot;</span>,<span class=\"string\">&quot;2023-05-23&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$cat</span>-&gt;name;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&#x27; -- &#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$cat</span>-&gt;birth;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&#x27; -- &#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$cat</span>-&gt;age;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"destruct析构函数\"><a href=\"#destruct析构函数\" class=\"headerlink\" title=\"__destruct析构函数\"></a><code>__destruct</code>析构函数</h5><ul>\n<li>析构函数是一种特殊的方法，它在对象被销毁时自动调用</li>\n<li>它可以用来执行一些清理操作，例如释放资源或关闭数据库连接。</li>\n<li>当对象不再被引用或脚本执行结束时，析构函数会被自动调用。</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyClass</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">say</span>(<span class=\"params\"><span class=\"variable\">$i</span></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;saying-&#x27;</span>.<span class=\"variable\">$i</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__destruct</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot;析构函数被调用\\n&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建对象</span></span><br><span class=\"line\"><span class=\"variable\">$obj</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">MyClass</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 执行其他操作...</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"variable\">$i</span>=<span class=\"number\">0</span>; <span class=\"variable\">$i</span> &lt; <span class=\"number\">4</span>; <span class=\"variable\">$i</span>++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"variable\">$i</span>==<span class=\"number\">3</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">unset</span>(<span class=\"variable\">$obj</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"variable\">$obj</span>)</span><br><span class=\"line\">        <span class=\"variable\">$obj</span>-&gt;<span class=\"title function_ invoke__\">say</span>(<span class=\"variable\">$i</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"static-静态变量-和-self\"><a href=\"#static-静态变量-和-self\" class=\"headerlink\" title=\"static 静态变量 和 self\"></a>static 静态变量 和 self</h5><p>「静态」指的是无需对类进行实例化，就可以直接调用这些属性和方法<br>所有对静态变量进行的操作都会对所有对象起作用<br>举例：小猫小狗听到指令来吃饭，指令变化，全部都要听从</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"built_in\">static</span> <span class=\"variable\">$cat</span> = <span class=\"string\">&quot;askk&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"built_in\">self</span>::<span class=\"variable\">$cat</span>;</span><br></pre></td></tr></table></figure>\n<h5 id=\"类常量\"><a href=\"#类常量\" class=\"headerlink\" title=\"类常量\"></a>类常量</h5><p>静态属性与类常量相似，唯一的区分是类常量不可以更改，静态属性可以更改<br>使用场景：所有的对象共用一个属性</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"variable constant_\">askk</span> = <span class=\"string\">&quot;askk&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"built_in\">self</span>::<span class=\"variable constant_\">askk</span>;</span><br></pre></td></tr></table></figure>\n\n\n<h5 id=\"static-静态方法\"><a href=\"#static-静态方法\" class=\"headerlink\" title=\"static 静态方法\"></a>static 静态方法</h5><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"built_in\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">say</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"built_in\">self</span>::<span class=\"variable\">$name</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>可以调用静态方法、静态变量<br>可以调用非静态方法、非静态变量</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">eat</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"variable language_\">$this</span>-&gt;name.<span class=\"string\">&quot; 在吃饭.&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"built_in\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">say</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">echo</span> (<span class=\"keyword\">new</span> <span class=\"built_in\">self</span>)-&gt;<span class=\"title function_ invoke__\">eat</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"类的继承（extends）：\"><a href=\"#类的继承（extends）：\" class=\"headerlink\" title=\"类的继承（extends）：\"></a>类的继承（extends）：</h4><p>指可以创建一个新的类，该类继承（extends）了父类的属性和方法，并且可以添加自己的属性和方法。通过继承，可以避免重复编写相似的代码，并且可以实现代码的重用。</p>\n<p>注意：继承不一定能访问</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Animal</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$name</span>=<span class=\"string\">&quot;小动物&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"variable\">$age</span>=<span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"variable\">$birth</span>=<span class=\"string\">&#x27;2023&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Cat</span> <span class=\"keyword\">extends</span> <span class=\"title\">Animal</span> </span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Animal</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Cat</span>);</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Animal</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"variable\">$name</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"><span class=\"variable\">$name</span></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;name = <span class=\"variable\">$name</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">eat</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"variable language_\">$this</span>-&gt;name . <span class=\"string\">&quot; 在吃饭.&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Cat</span> <span class=\"keyword\">extends</span> <span class=\"title\">Animal</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">meow</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"variable language_\">$this</span>-&gt;name . <span class=\"string\">&quot; 在喵呜.&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$cat</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Cat</span>(<span class=\"string\">&quot;Tom&quot;</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"variable\">$cat</span>);</span><br><span class=\"line\"><span class=\"variable\">$cat</span>-&gt;<span class=\"title function_ invoke__\">eat</span>();  <span class=\"comment\">// 继承自父类 Animal 的方法</span></span><br><span class=\"line\"><span class=\"variable\">$cat</span>-&gt;<span class=\"title function_ invoke__\">meow</span>();  <span class=\"comment\">// 子类 Cat 自己的方法</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"方法和属性重写\"><a href=\"#方法和属性重写\" class=\"headerlink\" title=\"方法和属性重写\"></a>方法和属性重写</h5><p>如果从父类继承的方法或属性不能满足子类的需求，可以对其进行改写</p>\n<h5 id=\"final-关键字\"><a href=\"#final-关键字\" class=\"headerlink\" title=\"final 关键字\"></a>final 关键字</h5><p>作用：</p>\n<ul>\n<li>防止类被继承</li>\n<li>防止类的方法被重写</li>\n</ul>\n<p>如果在一个类前加final，那么这个类就不能被继承；</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">final</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">myClass</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 类的内容</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如果在一个方法前加final，那么这个方法就不能被重写</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">final</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">eat</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"variable language_\">$this</span>-&gt;name . <span class=\"string\">&quot; 在吃饭.&quot;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>注意：final不能用于属性</p>\n<h5 id=\"调用父类方法\"><a href=\"#调用父类方法\" class=\"headerlink\" title=\"调用父类方法\"></a>调用父类方法</h5><p>parent::<br><strong>parent::__construct()</strong></p>\n<h5 id=\"静态延迟绑定-static\"><a href=\"#静态延迟绑定-static\" class=\"headerlink\" title=\"静态延迟绑定 static\"></a>静态延迟绑定 static</h5><p>是指在运行时根据实际调用的类来确定静态方法或属性的绑定<br>语法：<code>static::$name</code></p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Animal</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"built_in\">static</span> <span class=\"variable\">$name</span>=<span class=\"string\">&quot;小动物&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">eat</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"built_in\">self</span>::<span class=\"variable\">$name</span>. <span class=\"string\">&quot; 在吃饭.&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&#x27; ---- &#x27;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"built_in\">static</span>::<span class=\"variable\">$name</span>. <span class=\"string\">&quot; 在吃饭.&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Cat</span> <span class=\"keyword\">extends</span> <span class=\"title\">Animal</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"built_in\">static</span> <span class=\"variable\">$name</span>=<span class=\"string\">&quot;小猫&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Animal</span>::<span class=\"title function_ invoke__\">eat</span>();</span><br><span class=\"line\"><span class=\"title class_\">Cat</span>::<span class=\"title function_ invoke__\">eat</span>();</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"类的多态\"><a href=\"#类的多态\" class=\"headerlink\" title=\"类的多态\"></a>类的多态</h4><ul>\n<li>多态性允许不同类的对象对相同的消息作出不同的响应。</li>\n<li>多态性通过方法重写（覆盖）和方法重载来实现。</li>\n<li>方法重写是指子类重写父类的方法，以改变方法的实现细节。</li>\n<li>方法重载是指在同一个类中根据参数个数或类型不同来实现不同功能。</li>\n<li>需要注意的是，多态性只适用于继承关系的类。子类必须重写父类的方法才能实现多态性。</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Animal</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"variable\">$name</span>=<span class=\"string\">&quot;动物&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">makeSound</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot;<span class=\"subst\">$this</span>-&gt;name 在吼叫。&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Dog</span> <span class=\"keyword\">extends</span> <span class=\"title\">Animal</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"variable\">$name</span>=<span class=\"string\">&quot;小狗&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">makeSound</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot;<span class=\"subst\">$this</span>-&gt;name 在汪汪。&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Cat</span> <span class=\"keyword\">extends</span> <span class=\"title\">Animal</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"variable\">$name</span>=<span class=\"string\">&quot;小猫&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">makeSound</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot;<span class=\"subst\">$this</span>-&gt;name 在喵喵。&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$animal</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Animal</span>();</span><br><span class=\"line\"><span class=\"variable\">$dog</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Dog</span>();</span><br><span class=\"line\"><span class=\"variable\">$cat</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Cat</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$animal</span>-&gt;<span class=\"title function_ invoke__\">makeSound</span>();</span><br><span class=\"line\"><span class=\"variable\">$dog</span>-&gt;<span class=\"title function_ invoke__\">makeSound</span>();</span><br><span class=\"line\"><span class=\"variable\">$cat</span>-&gt;<span class=\"title function_ invoke__\">makeSound</span>();</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"方法重载\"><a href=\"#方法重载\" class=\"headerlink\" title=\"方法重载\"></a>方法重载</h5><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$args</span> = <span class=\"title function_ invoke__\">func_get_args</span>(); </span><br><span class=\"line\"><span class=\"variable\">$numArgs</span> = <span class=\"title function_ invoke__\">func_num_args</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable\">$args</span> = <span class=\"title function_ invoke__\">func_get_args</span>(); </span><br><span class=\"line\">    <span class=\"variable\">$numArgs</span> = <span class=\"title function_ invoke__\">func_num_args</span>();</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"title function_ invoke__\">var_dump</span>(<span class=\"variable\">$args</span>[<span class=\"number\">1</span>]);</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">var_dump</span>(<span class=\"variable\">$numArgs</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">test</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Animal</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">makeSound</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot;动物在吼叫&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Cat</span> <span class=\"keyword\">extends</span> <span class=\"title\">Animal</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">makeSound</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// $args = func_get_args();</span></span><br><span class=\"line\">        <span class=\"variable\">$numArgs</span> = <span class=\"title function_ invoke__\">func_num_args</span>();</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">switch</span>(<span class=\"variable\">$numArgs</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">                <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;执行参数个数为2的事件&#x27;</span>;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">                <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;执行参数个数为3的事件&#x27;</span>;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">default</span>:</span><br><span class=\"line\">                <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;执行默认事件&#x27;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// $animal = new Animal();</span></span><br><span class=\"line\"><span class=\"variable\">$cat</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Cat</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$cat</span>-&gt;<span class=\"title function_ invoke__\">makeSound</span>(<span class=\"string\">&quot;测试&quot;</span>,<span class=\"string\">&quot;2&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"接口和抽象类\"><a href=\"#接口和抽象类\" class=\"headerlink\" title=\"接口和抽象类\"></a>接口和抽象类</h4><h5 id=\"interface-接口\"><a href=\"#interface-接口\" class=\"headerlink\" title=\"interface(接口)\"></a>interface(接口)</h5><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Animals</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\"></span>)</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">b</span>(<span class=\"params\"></span>)</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Cat</span> <span class=\"keyword\">implements</span> <span class=\"title\">Animals</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&#125;;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">b</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>接口是指一组方法的集合，不是类，不能被实例化。</p>\n<ul>\n<li>可以指定某个类必须<strong>实现</strong>哪些方法，但不需要定义这些方法的具体内容</li>\n<li>只可以使用public</li>\n<li>通常用于定义一些规范，让代码更加有条理 不易出错。<br>例如：小动物必须要吃饭和睡觉，否则就会死！这是必须的，每个小动物都必须有这2个方法！</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Animals</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"variable constant_\">askk</span> = <span class=\"string\">&quot;askk&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">eat</span>(<span class=\"params\"></span>)</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sleep</span>(<span class=\"params\"><span class=\"variable\">$hours</span></span>)</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">jump</span>(<span class=\"params\"></span>)</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Cat</span> <span class=\"keyword\">implements</span> <span class=\"title\">Animals</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">eat</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot;Cat 在吃饭.&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sleep</span>(<span class=\"params\"><span class=\"variable\">$hours</span></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot;Cat 要睡 <span class=\"subst\">$hours</span> 小时.&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">jump</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;跳跳跳&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$cat</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Cat</span>();</span><br><span class=\"line\"><span class=\"variable\">$cat</span>-&gt;<span class=\"title function_ invoke__\">eat</span>();</span><br><span class=\"line\"><span class=\"variable\">$cat</span>-&gt;<span class=\"title function_ invoke__\">sleep</span>(<span class=\"number\">18</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title class_\">Cat</span>::<span class=\"variable constant_\">askk</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title class_\">Cat</span>::<span class=\"title function_ invoke__\">jump</span>();</span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Animals</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">eat</span>(<span class=\"params\"></span>)</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sleep</span>(<span class=\"params\"><span class=\"variable\">$hours</span></span>)</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Sports</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">run</span>(<span class=\"params\"></span>)</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">jump</span>(<span class=\"params\"></span>)</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Cat</span> <span class=\"keyword\">implements</span> <span class=\"title\">Animals</span>,<span class=\"title\">Sports</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">eat</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot;Cat 在吃饭&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sleep</span>(<span class=\"params\"><span class=\"variable\">$hours</span></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot;Cat 要睡 <span class=\"subst\">$hours</span> 小时&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">run</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot;Cat 在跑步&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">jump</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot;Cat 在蹦跳&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"抽象类和抽象方法\"><a href=\"#抽象类和抽象方法\" class=\"headerlink\" title=\"抽象类和抽象方法\"></a>抽象类和抽象方法</h5><p>和接口非常类似，使用它也是定义一种约束或规范，适合较大型的项目或库使用</p>\n<h6 id=\"抽象类\"><a href=\"#抽象类\" class=\"headerlink\" title=\"抽象类\"></a>抽象类</h6><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Animals</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>抽象类是一种特殊的类，只能被继承，不能被实例化</li>\n<li>抽象类用于定义一组相关的方法，但这些方法的具体实现由继承它的子类来完成。</li>\n<li>子类继承抽象类后，必须实现抽象类中的所有抽象方法。</li>\n<li>抽象类可以包含抽象方法和普通方法</li>\n</ul>\n<h6 id=\"抽象方法\"><a href=\"#抽象方法\" class=\"headerlink\" title=\"抽象方法\"></a>抽象方法</h6><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">xxx</span>(<span class=\"params\"></span>)</span>;</span><br><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">xxx</span>(<span class=\"params\"></span>)</span>;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>抽象方法是没有具体实现的方法，只有方法的声明，而不需要方法体。</li>\n<li>抽象方法只能存在于抽象类中。</li>\n<li>可以使用protected，但不能使用private私有。<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Animals</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">eat</span>(<span class=\"params\"></span>)</span>;</span><br><span class=\"line\">    <span class=\"keyword\">abstract</span> <span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sleep</span>(<span class=\"params\"><span class=\"variable\">$hours</span></span>)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">play</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;玩耍&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Cat</span> <span class=\"keyword\">extends</span> <span class=\"title\">Animals</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">eat</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot;Cat 在吃饭.&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sleep</span>(<span class=\"params\"><span class=\"variable\">$hours</span></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot;Cat 要睡 <span class=\"subst\">$hours</span> 小时.&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$cat</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Cat</span>();</span><br><span class=\"line\"><span class=\"variable\">$cat</span>-&gt;<span class=\"title function_ invoke__\">eat</span>();</span><br><span class=\"line\"><span class=\"comment\">//$cat-&gt;sleep(12);</span></span><br><span class=\"line\"><span class=\"variable\">$cat</span>-&gt;<span class=\"title function_ invoke__\">play</span>();</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h5 id=\"抽象类与接口的区别\"><a href=\"#抽象类与接口的区别\" class=\"headerlink\" title=\"抽象类与接口的区别\"></a>抽象类与接口的区别</h5><ol>\n<li>抽象类可以包含非抽象方法的实现，而接口只能包含方法的声明，没有方法的实现。 </li>\n<li>类只能继承一个抽象类，但可以实现多个接口。 </li>\n<li>抽象类可以有构造函数，而接口不能有构造函数。 </li>\n<li>抽象类中的方法可以有public、protected和private访问修饰符，而接口中的方法只能是public。 </li>\n<li>子类继承抽象类时，必须实现抽象类中的所有抽象方法，否则子类也必须声明为抽象类。<br>子类实现接口时，必须实现接口中的所有方法。</li>\n</ol>\n<h4 id=\"trait代码复用\"><a href=\"#trait代码复用\" class=\"headerlink\" title=\"trait代码复用\"></a><code>trait</code>代码复用</h4><ul>\n<li>解决类的单一继承问题</li>\n<li>可同时使用多个trait，用逗号隔开</li>\n<li>把常用的、通用的代码抽离出来，写成trait</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">trait</span> <span class=\"title\">A</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">trait</span> <span class=\"title\">B</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">C</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">use</span> <span class=\"title\">A</span>,<span class=\"title\">B</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>和类的继承非常像，但是trait里面不能有类常量，且trait不能被实例化。<br>根据下面类的继承来修改，对比看下他们的相同点：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Animal</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"variable\">$name</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"variable constant_\">askk</span>=<span class=\"string\">&quot;askk&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"><span class=\"variable\">$name</span></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;name = <span class=\"variable\">$name</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">eat</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"variable language_\">$this</span>-&gt;name . <span class=\"string\">&quot; 在吃饭.&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Cat</span> <span class=\"keyword\">extends</span> <span class=\"title\">Animal</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">meow</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"variable language_\">$this</span>-&gt;name . <span class=\"string\">&quot; 在喵呜.&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$cat</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Cat</span>(<span class=\"string\">&quot;Tom&quot;</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"variable\">$cat</span>);</span><br><span class=\"line\"><span class=\"variable\">$cat</span>-&gt;<span class=\"title function_ invoke__\">eat</span>();  <span class=\"comment\">// 继承自父类 Animal 的方法</span></span><br><span class=\"line\"><span class=\"variable\">$cat</span>-&gt;<span class=\"title function_ invoke__\">meow</span>();  <span class=\"comment\">// 子类 Cat 自己的方法</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>trait中可使用抽象方法</li>\n<li>trait中可使用静态属性和静态方法</li>\n<li>trait中可使用其他trait</li>\n<li>trait中可使用parent</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainClass</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">main</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;这是主方法的&#x27;</span>.<span class=\"keyword\">__METHOD__</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">trait</span> <span class=\"title\">Animal</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">eat</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">parent</span>::<span class=\"title function_ invoke__\">main</span>();</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"variable language_\">$this</span>-&gt;name . <span class=\"string\">&quot; 在吃饭.&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"keyword\">__TRAIT__</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Cat</span> <span class=\"keyword\">extends</span> <span class=\"title\">MainClass</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">use</span> <span class=\"title\">Animal</span>;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"variable\">$name</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"><span class=\"variable\">$n</span></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;name = <span class=\"variable\">$n</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">meow</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"variable language_\">$this</span>-&gt;name . <span class=\"string\">&quot; 在喵呜.&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"keyword\">__TRAIT__</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$cat</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Cat</span>(<span class=\"string\">&quot;Tom&quot;</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"variable\">$cat</span>);</span><br><span class=\"line\"><span class=\"variable\">$cat</span>-&gt;<span class=\"title function_ invoke__\">eat</span>();  <span class=\"comment\">// 继承自父类 Animal 的方法</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&#x27;----&#x27;</span>;</span><br><span class=\"line\"><span class=\"variable\">$cat</span>-&gt;<span class=\"title function_ invoke__\">meow</span>();  <span class=\"comment\">// 子类 Cat 自己的方法</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"同名冲突\"><a href=\"#同名冲突\" class=\"headerlink\" title=\"同名冲突\"></a>同名冲突</h5><p>当一个类同时引入了多个Trait，并且这些Trait中存在同名方法时，就会产生方法冲突。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">A</span>,<span class=\"title\">B</span>&#123;</span><br><span class=\"line\">\t//<span class=\"title\">A</span>::<span class=\"title\">eat</span> <span class=\"title\">insteadof</span> <span class=\"title\">B</span>;</span><br><span class=\"line\">    B::<span class=\"variable constant_\">eat</span> <span class=\"keyword\">insteadof</span> A;</span><br><span class=\"line\">    <span class=\"comment\">//别名定义</span></span><br><span class=\"line\">    A::<span class=\"variable constant_\">eat</span> <span class=\"keyword\">as</span> Aeat;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">trait</span> <span class=\"title\">A</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">eat</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;这是A的&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">trait</span> <span class=\"title\">B</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">eat</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;这是B的&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">T</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">use</span> <span class=\"title\">A</span>,<span class=\"title\">B</span>&#123;</span><br><span class=\"line\">        <span class=\"title\">A</span>::<span class=\"title\">eat</span> <span class=\"title\">insteadof</span> <span class=\"title\">B</span>;</span><br><span class=\"line\">        B::<span class=\"variable constant_\">eat</span> <span class=\"keyword\">as</span> Beat;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$t</span> = <span class=\"keyword\">new</span> T;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$t</span>-&gt;<span class=\"title function_ invoke__\">eat</span>();</span><br><span class=\"line\"><span class=\"variable\">$t</span>-&gt;<span class=\"title function_ invoke__\">Beat</span>();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"表单和请求\"><a href=\"#表单和请求\" class=\"headerlink\" title=\"表单和请求\"></a>表单和请求</h2><p>主要用到了<code>$_GET</code> 和 <code>$_POST</code>超全局变量，分别对应两种不同的请求方式</p>\n<h4 id=\"表单\"><a href=\"#表单\" class=\"headerlink\" title=\"表单\"></a>表单</h4><p>input select radio checkbox submit</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">&quot;./user.php&quot;</span> <span class=\"attr\">method</span>=<span class=\"string\">&quot;post&quot;</span>&gt;</span></span><br><span class=\"line\">    用户名: <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;username&quot;</span>&gt;</span></span><br><span class=\"line\">    密码: <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;password&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">multiple</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;arr[]&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span>请选择:<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;1&quot;</span>&gt;</span>大猫<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;2&quot;</span>&gt;</span>二猫<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;3&quot;</span>&gt;</span>三猫<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;提交&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h4 id=\"关于网络请求\"><a href=\"#关于网络请求\" class=\"headerlink\" title=\"关于网络请求\"></a>关于网络请求</h4><p>GET请求和POST请求是两种常用的HTTP请求方法，用于从客户端向服务器发送数据</p>\n<h5 id=\"GET请求：\"><a href=\"#GET请求：\" class=\"headerlink\" title=\"GET请求：\"></a>GET请求：</h5><p>通过URL（网址）参数将数据附加在URL上发送给服务器。这些参数以键值对的形式出现在URL的末尾，使用问号”?”将URL和参数分隔开。</p>\n<h5 id=\"POST请求：\"><a href=\"#POST请求：\" class=\"headerlink\" title=\"POST请求：\"></a>POST请求：</h5><p>将数据作为请求的主体发送给服务器，而不是附加在URL上。这使得POST请求更适合发送敏感数据或超长大段内容，例如表单中的密码、博客文本内容等。</p>\n<h5 id=\"区别：\"><a href=\"#区别：\" class=\"headerlink\" title=\"区别：\"></a>区别：</h5><ul>\n<li>GET参数对任何人都是可见的，POST参数对任何人都是不可见的</li>\n<li>GET对发送信息的量也有限制，不适合大型的变量值，它的值不能超过 2000 个字符；POST对发送信息的量没有限制（默认POST 发送的最大值为 8 MB，但可通过设置 php.ini 的 post_max_size 进行更改；发送的变量数最大值max_input_vars）</li>\n<li>可以在收藏夹中收藏GET请求页面，或者发送带参数的网址给别人可以直接访问，例如带页码的网址、带商品id的淘宝商品、带文章id的博文。这一点POST做不到。</li>\n</ul>\n<h4 id=\"超全局变量-REQUEST\"><a href=\"#超全局变量-REQUEST\" class=\"headerlink\" title=\"超全局变量$_REQUEST\"></a>超全局变量<code>$_REQUEST</code></h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><code>$_REQUEST</code> 变量包含了 <code>$_GET</code>、<code>$_POST</code> 和 <code>$_COOKIE</code> 的内容<br><code>$_SERVER</code>获取请求方式</p></blockquote>\n<h4 id=\"htmlspecialchars-函数\"><a href=\"#htmlspecialchars-函数\" class=\"headerlink\" title=\"htmlspecialchars()函数\"></a>htmlspecialchars()函数</h4><p>用于将字符串中的特殊字符转换为HTML实体，以避免在HTML文档中引起解析错误或安全漏洞。</p>\n<ul>\n<li><code>&amp;</code> （和号） 成为 <code>&amp;amp;</code></li>\n<li><code>&quot;</code> （双引号） 成为 <code>&amp;quot;</code></li>\n<li><code>&#39;</code> （单引号） 成为 <code>&amp;#039;</code></li>\n<li><code>&lt;</code> （小于） 成为 <code>&amp;lt;</code></li>\n<li><code>&gt;</code> （大于） 成为 <code>&amp;gt;</code></li>\n</ul>\n<h2 id=\"mysql数据库\"><a href=\"#mysql数据库\" class=\"headerlink\" title=\"mysql数据库\"></a>mysql数据库</h2><p>本课程只讲解最简单的增删改查语句，不做更深入的语句讲解。</p>\n<p>配置环境变量</p>\n<p><code>mysql -u root -p</code></p>\n<p>查看数据库列表：<br><code>SHOW DATABASES;</code></p>\n<p>使用数据库<br><code>USE xxx;</code></p>\n<p>查看数据表列表：<br><code>SHOW TABLES;</code></p>\n<p>数据库工具：SQL_Front(小皮内置)、Navicat、DBeaver</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>操作数据库的方式：MySQLi 和 PDO</p></blockquote>\n<h3 id=\"MySQLi\"><a href=\"#MySQLi\" class=\"headerlink\" title=\"MySQLi\"></a>MySQLi</h3><p>首先要启用扩展mysqli</p>\n<p>面向过程</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"variable\">$servername</span> = <span class=\"string\">&quot;localhost&quot;</span>;</span><br><span class=\"line\"><span class=\"variable\">$username</span> = <span class=\"string\">&quot;root&quot;</span>;</span><br><span class=\"line\"><span class=\"variable\">$password</span> = <span class=\"string\">&quot;root&quot;</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">// 创建连接</span></span><br><span class=\"line\"><span class=\"variable\">$conn</span> = <span class=\"title function_ invoke__\">mysqli_connect</span>(<span class=\"variable\">$servername</span>, <span class=\"variable\">$username</span>, <span class=\"variable\">$password</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">// 检测连接</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (!<span class=\"variable\">$conn</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">&quot;连接失败: &quot;</span> . <span class=\"title function_ invoke__\">mysqli_connect_error</span>());</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;连接成功&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//关闭</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">mysqli_close</span>(<span class=\"variable\">$conn</span>);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>面向对象</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"variable\">$servername</span> = <span class=\"string\">&quot;localhost&quot;</span>;</span><br><span class=\"line\"><span class=\"variable\">$username</span> = <span class=\"string\">&quot;root&quot;</span>;</span><br><span class=\"line\"><span class=\"variable\">$password</span> = <span class=\"string\">&quot;root&quot;</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">// 创建连接</span></span><br><span class=\"line\"><span class=\"variable\">$conn</span> = <span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">mysqli</span>(<span class=\"variable\">$servername</span>, <span class=\"variable\">$username</span>, <span class=\"variable\">$password</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">// 检测连接</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"variable\">$conn</span>-&gt;connect_error) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">&quot;连接失败: &quot;</span> . <span class=\"variable\">$conn</span>-&gt;connect_error);</span><br><span class=\"line\">&#125; </span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;连接成功&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//关闭</span></span><br><span class=\"line\"><span class=\"variable\">$conn</span>-&gt;<span class=\"title function_ invoke__\">close</span>();</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"resource-资源类型-1\"><a href=\"#resource-资源类型-1\" class=\"headerlink\" title=\"resource 资源类型\"></a>resource 资源类型</h4><ul>\n<li>is_resource() 是否为资源类型</li>\n<li>get_resource_type() 获取资源的类型名称</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$servername</span> = <span class=\"string\">&quot;localhost&quot;</span>;</span><br><span class=\"line\"><span class=\"variable\">$username</span> = <span class=\"string\">&quot;root&quot;</span>;</span><br><span class=\"line\"><span class=\"variable\">$password</span> = <span class=\"string\">&quot;root&quot;</span>;</span><br><span class=\"line\"><span class=\"variable\">$conn</span> = <span class=\"title function_ invoke__\">mysql_connect</span>(<span class=\"variable\">$servername</span>, <span class=\"variable\">$username</span>, <span class=\"variable\">$password</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"title function_ invoke__\">is_resource</span>(<span class=\"variable\">$conn</span>));</span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"title function_ invoke__\">gettype</span>(<span class=\"variable\">$conn</span>));</span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"title function_ invoke__\">get_resource_type</span>(<span class=\"variable\">$conn</span>));</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$handle</span> = <span class=\"title function_ invoke__\">fopen</span>(<span class=\"string\">&quot;test.txt&quot;</span>, <span class=\"string\">&quot;r&quot;</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"variable\">$handle</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"title function_ invoke__\">is_resource</span>(<span class=\"variable\">$handle</span>));</span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"title function_ invoke__\">gettype</span>(<span class=\"variable\">$handle</span>));</span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"title function_ invoke__\">get_resource_type</span>(<span class=\"variable\">$handle</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//$content = fread($handle, filesize(&quot;test.txt&quot;));</span></span><br><span class=\"line\"><span class=\"comment\">//echo $content; </span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">fclose</span>(<span class=\"variable\">$handle</span>);</span><br></pre></td></tr></table></figure>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>接下来将主讲面向对象方式操作</p></blockquote>\n<h4 id=\"创建数据库\"><a href=\"#创建数据库\" class=\"headerlink\" title=\"创建数据库\"></a>创建数据库</h4><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 创建数据库</span></span><br><span class=\"line\"><span class=\"variable\">$sql</span> = <span class=\"string\">&quot;CREATE DATABASE IF NOT EXISTS askkDB&quot;</span>;</span><br><span class=\"line\"><span class=\"comment\">//if (mysqli_query($conn, $sql)) &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"variable\">$conn</span>-&gt;<span class=\"title function_ invoke__\">query</span>(<span class=\"variable\">$sql</span>) === <span class=\"literal\">TRUE</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;数据库创建成功&quot;</span>;</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;数据库创建失败 &quot;</span> . <span class=\"variable\">$conn</span>-&gt;error;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"创建数据库表\"><a href=\"#创建数据库表\" class=\"headerlink\" title=\"创建数据库表\"></a>创建数据库表</h4><ul>\n<li>NOT NULL - 每一行都必须含有值（不能为空），null 值是不允许的。</li>\n<li>DEFAULT value - 设置默认值</li>\n<li>UNSIGNED - 使用无符号数值类型，0 及正数</li>\n<li>AUTO INCREMENT - 设置 MySQL 字段的值在新增记录时每次自动增长 1</li>\n<li>PRIMARY KEY - 设置数据表中每条记录的唯一标识。 通常列的 PRIMARY KEY 设置为 ID 数值，与 AUTO_INCREMENT 一起使用。</li>\n</ul>\n<p>每个表都应该有一个主键(本列为 “id” 列)，主键必须包含唯一的值。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//$conn-&gt;query(&quot;USE askkDB&quot;);</span></span><br><span class=\"line\"><span class=\"comment\">// 使用 sql 创建数据表</span></span><br><span class=\"line\"><span class=\"variable\">$sql</span> = <span class=\"string\">&quot;CREATE TABLE IF NOT EXISTS user (</span></span><br><span class=\"line\"><span class=\"string\">  id INT(6) UNSIGNED AUTO_INCREMENT PRIMARY KEY, </span></span><br><span class=\"line\"><span class=\"string\">  username VARCHAR(30) NOT NULL COMMENT \\&quot;用户名\\&quot;,</span></span><br><span class=\"line\"><span class=\"string\">  password VARCHAR(64) NOT NULL COMMENT &#x27;密码&#x27;,</span></span><br><span class=\"line\"><span class=\"string\">  phone VARCHAR(11),</span></span><br><span class=\"line\"><span class=\"string\">  status INT(1) NOT NULL DEFAULT 1,</span></span><br><span class=\"line\"><span class=\"string\">  create_date TIMESTAMP</span></span><br><span class=\"line\"><span class=\"string\">  ) COMMENT &#x27;用户&#x27;&quot;</span>;</span><br><span class=\"line\"><span class=\"comment\">//if (mysqli_query($conn, $sql)) &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"variable\">$conn</span>-&gt;<span class=\"title function_ invoke__\">query</span>(<span class=\"variable\">$sql</span>) === <span class=\"literal\">TRUE</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;数据表创建成功&quot;</span>;</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;数据表创建错误: &quot;</span> . <span class=\"variable\">$conn</span>-&gt;error;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>注：如果要加注释，那么后面加上 COMMENT 即可</p></blockquote>\n<h4 id=\"插入数据\"><a href=\"#插入数据\" class=\"headerlink\" title=\"插入数据\"></a>插入数据</h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>注意：</strong> 如果列设置 AUTO_INCREMENT (如 “id” 列) 或 TIMESTAMP (如 “create_date” 列)，我们就不需要在 SQL 语句中指定值； MySQL 会自动为该列添加值。</p></blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">INSERT INTO table_name (column1, column2, column3,...)</span><br><span class=\"line\">VALUES (value1, value2, value3,...)</span><br></pre></td></tr></table></figure>\n\n<p>用<code>$conn-&gt;query($sql) === TRUE</code>来判断是否插入成功</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sql</span> = <span class=\"string\">&quot;INSERT INTO user (username, password, phone)</span></span><br><span class=\"line\"><span class=\"string\">VALUES (&#x27;da mao&#x27;, &#x27;123456&#x27;, 13888888888)&quot;</span>;</span><br><span class=\"line\"><span class=\"comment\">//if (mysqli_query($conn, $sql)) &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"variable\">$conn</span>-&gt;<span class=\"title function_ invoke__\">query</span>(<span class=\"variable\">$sql</span>) === <span class=\"literal\">TRUE</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;新记录插入成功&quot;</span>;</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;错误: &quot;</span> . <span class=\"variable\">$sql</span> . <span class=\"string\">&quot;&lt;br&gt;&quot;</span> . <span class=\"variable\">$conn</span>-&gt;error;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h5 id=\"字符串进行转义处理\"><a href=\"#字符串进行转义处理\" class=\"headerlink\" title=\"字符串进行转义处理\"></a>字符串进行转义处理</h5><p><code>$conn-&gt;real_escape_string($string);</code><br>可以确保特殊字符被正确转义，从而避免了SQL注入等安全问题，并保证查询语句的语法正确性，例如：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$name</span>=<span class=\"string\">&quot;这是一个&#x27;送命题&#x27;&quot;</span>;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"插入多条数据\"><a href=\"#插入多条数据\" class=\"headerlink\" title=\"插入多条数据\"></a>插入多条数据</h4><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sql</span> = <span class=\"string\">&quot;INSERT INTO user (username, password, phone)</span></span><br><span class=\"line\"><span class=\"string\">VALUES </span></span><br><span class=\"line\"><span class=\"string\">    (&#x27;大猫&#x27;, &#x27;123456&#x27;, 13888888888),</span></span><br><span class=\"line\"><span class=\"string\">    (&#x27;小猫&#x27;, &#x27;123456&#x27;, 13888888887),</span></span><br><span class=\"line\"><span class=\"string\">    (&#x27;中猫&#x27;, &#x27;123456&#x27;, 13888888886)</span></span><br><span class=\"line\"><span class=\"string\">    &quot;</span>;</span><br><span class=\"line\"><span class=\"variable\">$conn</span>-&gt;<span class=\"title function_ invoke__\">query</span>(<span class=\"variable\">$sql</span>);</span><br></pre></td></tr></table></figure>\n\n<p>foreach循环插入，或者使用语句：<br><code>mysqli_multi_query()</code></p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sql</span> = <span class=\"string\">&quot;INSERT INTO user (username, password, phone)</span></span><br><span class=\"line\"><span class=\"string\">VALUES (&#x27;大猫&#x27;, &#x27;123456&#x27;, 13888888888);&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$sql</span> .= <span class=\"string\">&quot;INSERT INTO user (username, password, phone)</span></span><br><span class=\"line\"><span class=\"string\">VALUES (&#x27;小猫&#x27;, &#x27;123456&#x27;, 13888888887);&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$sql</span>.= <span class=\"string\">&quot;INSERT INTO user (username, password, phone)</span></span><br><span class=\"line\"><span class=\"string\">VALUES (&#x27;中猫&#x27;, &#x27;123456&#x27;, 13888888886);&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//if (mysqli_multi_query($conn, $sql)) &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"variable\">$conn</span>-&gt;<span class=\"title function_ invoke__\">multi_query</span>(<span class=\"variable\">$sql</span>) === <span class=\"literal\">TRUE</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;新记录插入成功&quot;</span>;</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;错误: &quot;</span> . <span class=\"variable\">$sql</span> . <span class=\"string\">&quot;&lt;br&gt;&quot;</span> . <span class=\"variable\">$conn</span>-&gt;error;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h4 id=\"查询数据\"><a href=\"#查询数据\" class=\"headerlink\" title=\"查询数据\"></a>查询数据</h4><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> column1,column2 <span class=\"keyword\">FROM</span> table_name</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sql</span> = <span class=\"string\">&quot;SELECT * FROM user&quot;</span>;</span><br><span class=\"line\"><span class=\"variable\">$result</span> = <span class=\"variable\">$conn</span>-&gt;<span class=\"title function_ invoke__\">query</span>(<span class=\"variable\">$sql</span>);</span><br><span class=\"line\"><span class=\"comment\">//if (mysqli_num_rows($result) &gt; 0) &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"variable\">$result</span>-&gt;num_rows &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;<span class=\"subst\">$result</span>-&gt;num_rows 条结果&quot;</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 输出数据</span></span><br><span class=\"line\">    <span class=\"comment\">//while($row = mysqli_fetch_assoc($result)) &#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"variable\">$row</span> = <span class=\"variable\">$result</span>-&gt;<span class=\"title function_ invoke__\">fetch_assoc</span>()) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot;id: &quot;</span> . <span class=\"variable\">$row</span>[<span class=\"string\">&quot;id&quot;</span>]. <span class=\"string\">&quot; - Name: &quot;</span> . <span class=\"variable\">$row</span>[<span class=\"string\">&quot;username&quot;</span>]. <span class=\"string\">&quot; &quot;</span> . <span class=\"variable\">$row</span>[<span class=\"string\">&quot;phone&quot;</span>]. <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;0 条结果&quot;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>$result-&gt;num_rows</code> 获取到的数据条数</li>\n<li><code>$result-&gt;fetch_assoc()</code> 是一种用于从结果集中获取一行数据的函数。它以关联数组的形式返回结果，其中列名作为键，对应的值则是该行中各列的值</li>\n<li>除了fetch_assoc 还有 fetch_row和fetch_array和fetch_all</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">while</span>(<span class=\"variable\">$row</span> = <span class=\"variable\">$result</span>-&gt;<span class=\"title function_ invoke__\">fetch_row</span>()) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;id: &quot;</span> . <span class=\"variable\">$row</span>[<span class=\"number\">0</span>]. <span class=\"string\">&quot; - Name: &quot;</span> . <span class=\"variable\">$row</span>[<span class=\"number\">1</span>]. <span class=\"string\">&quot; &quot;</span> . <span class=\"variable\">$row</span>[<span class=\"number\">2</span>]. <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//$datas = mysqli_fetch_all($result, MYSQLI_ASSOC);</span></span><br><span class=\"line\"><span class=\"variable\">$datas</span> = <span class=\"variable\">$result</span>-&gt;<span class=\"title function_ invoke__\">fetch_all</span>(MYSQLI_ASSOC);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"variable\">$datas</span>);</span><br></pre></td></tr></table></figure>\n\n<p><code>free_result()</code></p>\n<p>释放结果集所占用的内存资源。在使用 <code>query()</code> 函数执行查询后，会返回一个结果集对象，该结果集对象占用一定的内存空间。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//mysqli_free_result($result);</span></span><br><span class=\"line\"><span class=\"variable\">$result</span>-&gt;<span class=\"title function_ invoke__\">free_result</span>();</span><br></pre></td></tr></table></figure>\n<h5 id=\"where-条件筛选\"><a href=\"#where-条件筛选\" class=\"headerlink\" title=\"where 条件筛选\"></a>where 条件筛选</h5><p>WHERE用于在查询中指定筛选条件，来限制返回的行</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> 列名</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> 表名</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> 条件;</span><br></pre></td></tr></table></figure>\n\n<p>条件判断：<br><code>&gt; &lt; = != &lt;&gt; &gt;= &lt;=</code><br><code>like &quot;%xxx%&quot;</code> <code>like &quot;%xxx&quot;</code> <code>like &quot;xxx%&quot;</code><br><code>between and </code><br><code>is null</code> <code>is not null</code><br><code>in (a,b,c)</code></p>\n<p>and or not 括号</p>\n<h5 id=\"order-by-排序\"><a href=\"#order-by-排序\" class=\"headerlink\" title=\"order by 排序\"></a>order by 排序</h5><p>ASC升序 、DESC降序<br>根据两列进行排序，用逗号隔开即可，注意：只有第一列的值相同时才使用第二列</p>\n<h5 id=\"offset-limit\"><a href=\"#offset-limit\" class=\"headerlink\" title=\"offset limit\"></a>offset limit</h5><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> 列名</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> 表名</span><br><span class=\"line\">LIMIT 行数 <span class=\"keyword\">OFFSET</span> 偏移量;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"更新数据\"><a href=\"#更新数据\" class=\"headerlink\" title=\"更新数据\"></a>更新数据</h4><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">UPDATE</span> 表名</span><br><span class=\"line\"><span class=\"keyword\">SET</span> column1<span class=\"operator\">=</span><span class=\"keyword\">value</span>, column2<span class=\"operator\">=</span>value2,...</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> 条件</span><br></pre></td></tr></table></figure>\n<p>注意：如果省去 WHERE 子句，所有的记录都会被更新</p>\n<p>使用计算表达式更新字段</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">UPDATE</span> 表名 <span class=\"keyword\">SET</span> 列名 <span class=\"operator\">=</span> 列名 <span class=\"operator\">+</span> 值 <span class=\"keyword\">WHERE</span> 条件;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sql</span> = <span class=\"string\">&quot;UPDATE user SET num = num*3 WHERE id = 2&quot;</span>;</span><br><span class=\"line\"><span class=\"variable\">$result</span> = <span class=\"variable\">$conn</span>-&gt;<span class=\"title function_ invoke__\">query</span>(<span class=\"variable\">$sql</span>);</span><br></pre></td></tr></table></figure>\n<h4 id=\"删除数据\"><a href=\"#删除数据\" class=\"headerlink\" title=\"删除数据\"></a>删除数据</h4><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DELETE</span> <span class=\"keyword\">FROM</span> 表名</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> 条件</span><br></pre></td></tr></table></figure>\n\n<p>注意：如果省去 WHERE 子句，所有的记录都会被删除</p>\n<p>删除表中的重复行</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DELETE</span> t1 <span class=\"keyword\">FROM</span> 表名 t1, 表名 t2 <span class=\"keyword\">WHERE</span> t1.列名 <span class=\"operator\">=</span> t2.列名 <span class=\"keyword\">AND</span> t1.id <span class=\"operator\">&gt;</span> t2.id;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"修改数据表\"><a href=\"#修改数据表\" class=\"headerlink\" title=\"修改数据表\"></a>修改数据表</h4><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">修改数据表名：</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> 旧表名 RENAME 新表名;</span><br><span class=\"line\"></span><br><span class=\"line\">重置自增起始值为<span class=\"number\">1</span>：</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> 表名 AUTO_INCREMENT <span class=\"operator\">=</span> <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">添加新的列：</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> 表名 <span class=\"keyword\">ADD</span> <span class=\"keyword\">COLUMN</span> 列名 数据类型;</span><br><span class=\"line\"></span><br><span class=\"line\">修改列名和数据类型：</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> 表名 CHANGE <span class=\"keyword\">COLUMN</span> 旧列名 新列名 新数据类型;</span><br><span class=\"line\"></span><br><span class=\"line\">修改列的默认值： </span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> 表名 <span class=\"keyword\">ALTER</span> <span class=\"keyword\">COLUMN</span> 列名 <span class=\"keyword\">SET</span> <span class=\"keyword\">DEFAULT</span> 默认值;</span><br><span class=\"line\"></span><br><span class=\"line\">删除列：</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> 表名 <span class=\"keyword\">DROP</span> <span class=\"keyword\">COLUMN</span> 列名;</span><br><span class=\"line\"></span><br><span class=\"line\">修改列的注释：</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> 表名 MODIFY <span class=\"keyword\">COLUMN</span> 列名 数据类型 COMMENT <span class=\"string\">&#x27;新注释&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">删除数据表：</span><br><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">TABLE</span> IF <span class=\"keyword\">EXISTS</span> 表名</span><br><span class=\"line\"></span><br><span class=\"line\">清空数据表：</span><br><span class=\"line\"><span class=\"keyword\">TRUNCATE</span> <span class=\"keyword\">TABLE</span> 表名;</span><br><span class=\"line\"></span><br><span class=\"line\">删除数据库：</span><br><span class=\"line\"><span class=\"keyword\">DROP</span> database</span><br></pre></td></tr></table></figure>\n\n<p>咱们只讲了最基本的mysql，关于关联查询 索引 等更深入的知识就需要专门学习了。</p>\n<h4 id=\"预处理语句\"><a href=\"#预处理语句\" class=\"headerlink\" title=\"预处理语句\"></a>预处理语句</h4><p>预处理语句（Prepared Statements），用于执行带有参数的SQL语句。</p>\n<ul>\n<li>预处理语句可以提高安全性，对于防止 SQL 注入是非常有用的</li>\n<li>允许重复使用相同的sql模板而只需更改参数，提高执行效率。</li>\n</ul>\n<h5 id=\"关于sql注入\"><a href=\"#关于sql注入\" class=\"headerlink\" title=\"关于sql注入\"></a>关于sql注入</h5><p>当涉及到SQL查询时，注入攻击是一种常见的安全漏洞</p>\n<h6 id=\"1-直接执行用户输入的SQL查询：\"><a href=\"#1-直接执行用户输入的SQL查询：\" class=\"headerlink\" title=\"1. 直接执行用户输入的SQL查询：\"></a>1. 直接执行用户输入的SQL查询：</h6><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$query</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;query&#x27;</span>];</span><br><span class=\"line\"><span class=\"variable\">$result</span> = <span class=\"variable\">$conn</span>-&gt;<span class=\"title function_ invoke__\">query</span>(<span class=\"variable\">$query</span>);</span><br></pre></td></tr></table></figure>\n<p>如果用户能够直接执行他们自己构造的SQL查询，就会产生严重的安全问题。恶意用户可以执行任意的SQL语句，包括删除、修改或泄露敏感数据。</p>\n<h6 id=\"2-使用字符串拼接的方式构建SQL查询：\"><a href=\"#2-使用字符串拼接的方式构建SQL查询：\" class=\"headerlink\" title=\"2. 使用字符串拼接的方式构建SQL查询：\"></a>2. 使用字符串拼接的方式构建SQL查询：</h6><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$username</span> = <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;username&#x27;</span>];</span><br><span class=\"line\"><span class=\"variable\">$password</span> = <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;password&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$sql</span> = <span class=\"string\">&quot;SELECT * FROM user WHERE username = &#x27;&quot;</span> . <span class=\"variable\">$username</span> . <span class=\"string\">&quot;&#x27; AND password = &#x27;&quot;</span> . <span class=\"variable\">$password</span> . <span class=\"string\">&quot;&#x27;&quot;</span>;</span><br><span class=\"line\"><span class=\"variable\">$result</span> = <span class=\"variable\">$conn</span>-&gt;<span class=\"title function_ invoke__\">query</span>(<span class=\"variable\">$sql</span>);</span><br></pre></td></tr></table></figure>\n\n<p>这种方式存在安全风险，如果用户在输入框中输入恶意代码，可以破坏原始的SQL查询结构，例如输入 <code>&#39; OR 1=1 --</code> ，会导致查询条件永远为真，从而绕过身份验证。</p>\n<ol start=\"3\">\n<li>转义特殊字符也不保险：<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$username</span> = <span class=\"variable\">$conn</span>-&gt;<span class=\"title function_ invoke__\">real_escape_string</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;username&#x27;</span>]);</span><br><span class=\"line\"><span class=\"variable\">$password</span> = <span class=\"variable\">$conn</span>-&gt;<span class=\"title function_ invoke__\">real_escape_string</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;password&#x27;</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$query</span> = <span class=\"string\">&quot;SELECT * FROM users WHERE username = &#x27;&quot;</span> . <span class=\"variable\">$username</span> . <span class=\"string\">&quot;&#x27; AND password = &#x27;&quot;</span> . <span class=\"variable\">$password</span> . <span class=\"string\">&quot;&#x27;&quot;</span>;</span><br><span class=\"line\"><span class=\"variable\">$result</span> = <span class=\"variable\">$conn</span>-&gt;<span class=\"title function_ invoke__\">query</span>(<span class=\"variable\">$query</span>);</span><br></pre></td></tr></table></figure>\n我们使用 <code>-&gt;real_escape_string()</code> 函数对用户输入的用户名和密码进行转义，以防止SQL注入，但仍然可能存在注入漏洞。<br>假设用户在用户名输入框中输入 <code>admin&#39;--</code> ，并在密码输入框中输入任意值。由于转义字符未正确处理，生成的SQL查询语句如下<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> users <span class=\"keyword\">WHERE</span> username <span class=\"operator\">=</span> <span class=\"string\">&#x27;admin&#x27;</span><span class=\"comment\">--&#x27; AND password = &#x27;password&#x27;</span></span><br></pre></td></tr></table></figure>\n在这种情况下， <code>--</code> 是SQL注释的开始，后面的 <code>AND password = &#39;password&#39;</code> 将被忽略。这样，攻击者可以绕过密码验证并成功登录，即使没有提供正确的密码。</li>\n</ol>\n<h5 id=\"预处理方法\"><a href=\"#预处理方法\" class=\"headerlink\" title=\"预处理方法\"></a>预处理方法</h5><p>查询</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sql</span> = <span class=\"string\">&quot;SELECT * FROM user WHERE username = ? AND password = ? &quot;</span>;</span><br><span class=\"line\"><span class=\"variable\">$stmt</span> = <span class=\"variable\">$conn</span>-&gt;<span class=\"title function_ invoke__\">prepare</span>(<span class=\"variable\">$sql</span>);</span><br><span class=\"line\"><span class=\"comment\">//绑定</span></span><br><span class=\"line\"><span class=\"variable\">$stmt</span>-&gt;<span class=\"title function_ invoke__\">bind_param</span>(<span class=\"string\">&quot;ss&quot;</span>, <span class=\"variable\">$username</span>, <span class=\"variable\">$password</span>);</span><br><span class=\"line\"><span class=\"comment\">//执行</span></span><br><span class=\"line\"><span class=\"variable\">$stmt</span>-&gt;<span class=\"title function_ invoke__\">execute</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//获取结果</span></span><br><span class=\"line\"><span class=\"variable\">$result</span> = <span class=\"variable\">$stmt</span>-&gt;<span class=\"title function_ invoke__\">get_result</span>();</span><br><span class=\"line\"><span class=\"title function_ invoke__\">print_r</span>(<span class=\"string\">&#x27;&lt;pre&gt;&#x27;</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">print_r</span>(<span class=\"variable\">$result</span>-&gt;<span class=\"title function_ invoke__\">fetch_all</span>());</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//关闭</span></span><br><span class=\"line\"><span class=\"variable\">$stmt</span>-&gt;<span class=\"title function_ invoke__\">close</span>();</span><br></pre></td></tr></table></figure>\n\n<p>插入</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 预处理</span></span><br><span class=\"line\"><span class=\"variable\">$sql</span> = <span class=\"string\">&quot;INSERT INTO user (username, password, phone)</span></span><br><span class=\"line\"><span class=\"string\">VALUES (?, ?, ?)&quot;</span>;</span><br><span class=\"line\"><span class=\"variable\">$stmt</span> = <span class=\"variable\">$conn</span>-&gt;<span class=\"title function_ invoke__\">prepare</span>(<span class=\"variable\">$sql</span>);</span><br><span class=\"line\"><span class=\"comment\">//绑定</span></span><br><span class=\"line\"><span class=\"variable\">$stmt</span>-&gt;<span class=\"title function_ invoke__\">bind_param</span>(<span class=\"string\">&quot;sss&quot;</span>, <span class=\"variable\">$username</span>, <span class=\"variable\">$password</span>, <span class=\"variable\">$phone</span>);</span><br><span class=\"line\"><span class=\"comment\">//执行</span></span><br><span class=\"line\"><span class=\"variable\">$stmt</span>-&gt;<span class=\"title function_ invoke__\">execute</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//获取结果</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"variable\">$stmt</span>-&gt;affected_rows &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;插入成功&quot;</span>;</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;插入失败&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//关闭</span></span><br><span class=\"line\"><span class=\"variable\">$stmt</span>-&gt;<span class=\"title function_ invoke__\">close</span>();</span><br></pre></td></tr></table></figure>\n\n\n<p>其中的<code>?</code>为占位符</p>\n<p>通过告诉数据库参数的数据类型，可以降低 SQL 注入的风险。参数有以下四种类型:</p>\n<ul>\n<li>i - integer（整型）</li>\n<li>d - double（双精度浮点型）</li>\n<li>s - string（字符串）</li>\n<li>b - BLOB（binary large object:二进制大对象）</li>\n</ul>\n<p>每个参数都需要指定类型。</p>\n<p>php8新方法</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$name</span>=<span class=\"string\">&quot;这是一个&#x27;送命题&#x27;&quot;</span>;</span><br><span class=\"line\"><span class=\"comment\">//mysqli_execute_query</span></span><br><span class=\"line\"><span class=\"variable\">$sql</span> = <span class=\"string\">&quot;INSERT INTO user (username, password, phone)</span></span><br><span class=\"line\"><span class=\"string\">VALUES (?, ?, ?)&quot;</span>;</span><br><span class=\"line\"><span class=\"variable\">$conn</span>-&gt;<span class=\"title function_ invoke__\">execute_query</span>(<span class=\"variable\">$sql</span>,[<span class=\"variable\">$name</span>,<span class=\"string\">&#x27;123456&#x27;</span>,<span class=\"string\">&#x27;13888888888&#x27;</span>]);</span><br><span class=\"line\"><span class=\"variable\">$conn</span>-&gt;<span class=\"title function_ invoke__\">execute_query</span>(<span class=\"variable\">$sql</span>,[<span class=\"variable\">$name</span>,<span class=\"string\">&#x27;123456&#x27;</span>,<span class=\"string\">&#x27;13888888888&#x27;</span>]);</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"PDO\"><a href=\"#PDO\" class=\"headerlink\" title=\"PDO\"></a>PDO</h3><p>安装php_pdo_mysql扩展，用phpinfo() 函数来查看是否安装了PDO扩展</p>\n<p>PDO执行sql语句分为2种方法：</p>\n<p>exec() 方法： </p>\n<ul>\n<li>适用于执行不返回结果集的SQL语句，例如INSERT、UPDATE和DELETE等操作。 </li>\n<li>exec() 方法返回受影响的行数（即被插入、更新或删除的行数），如果没有受影响的行，返回0。 </li>\n<li>通常用于执行不需要获取结果集的简单操作。</li>\n</ul>\n<p>query() 方法： </p>\n<ul>\n<li>适用于执行返回结果集的SQL语句，例如SELECT查询。 </li>\n<li>query() 方法返回一个PDOStatement对象，你可以使用该对象的方法（如 fetch() 、 fetchAll() ）来获取查询结果。 </li>\n<li>通常用于执行需要获取结果集的查询操作。</li>\n</ul>\n<h5 id=\"创建连接\"><a href=\"#创建连接\" class=\"headerlink\" title=\"创建连接\"></a>创建连接</h5><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"variable\">$dbms</span>=<span class=\"string\">&#x27;mysql&#x27;</span>;     <span class=\"comment\">//数据库类型</span></span><br><span class=\"line\"><span class=\"variable\">$host</span>=<span class=\"string\">&#x27;localhost&#x27;</span>; <span class=\"comment\">//数据库主机名</span></span><br><span class=\"line\"><span class=\"variable\">$dbName</span>=<span class=\"string\">&#x27;askkdb&#x27;</span>;    <span class=\"comment\">//使用的数据库</span></span><br><span class=\"line\"><span class=\"variable\">$user</span>=<span class=\"string\">&#x27;root&#x27;</span>;      <span class=\"comment\">//数据库连接用户名</span></span><br><span class=\"line\"><span class=\"variable\">$pass</span>=<span class=\"string\">&#x27;root&#x27;</span>;          <span class=\"comment\">//对应的密码</span></span><br><span class=\"line\"><span class=\"variable\">$dsn</span>=<span class=\"string\">&quot;<span class=\"subst\">$dbms</span>:host=<span class=\"subst\">$host</span>;dbname=<span class=\"subst\">$dbName</span>&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    <span class=\"variable\">$conn</span> = <span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">PDO</span>(<span class=\"variable\">$dsn</span>, <span class=\"variable\">$user</span>, <span class=\"variable\">$pass</span>); <span class=\"comment\">//初始化一个PDO对象</span></span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;连接成功&lt;br/&gt;&quot;</span>;</span><br><span class=\"line\">\t<span class=\"comment\">// 关闭连接</span></span><br><span class=\"line\">    <span class=\"variable\">$conn</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span> (PDOException <span class=\"variable\">$e</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">die</span> (<span class=\"string\">&quot;错误!: &quot;</span> . <span class=\"variable\">$e</span>-&gt;<span class=\"title function_ invoke__\">getMessage</span>() . <span class=\"string\">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"创建数据库-1\"><a href=\"#创建数据库-1\" class=\"headerlink\" title=\"创建数据库\"></a>创建数据库</h5><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//设置 PDO 错误模式为异常</span></span><br><span class=\"line\"><span class=\"variable\">$conn</span>-&gt;<span class=\"title function_ invoke__\">setAttribute</span>(PDO::<span class=\"variable constant_\">ATTR_ERRMODE</span>, PDO::<span class=\"variable constant_\">ERRMODE_EXCEPTION</span>);</span><br><span class=\"line\"><span class=\"comment\">//PDO::ERRMODE_WARNING 警告</span></span><br><span class=\"line\"><span class=\"comment\">//PDO::ERRMODE_SILENT 错误码</span></span><br><span class=\"line\"><span class=\"comment\">//$conn-&gt;errorCode()</span></span><br><span class=\"line\"><span class=\"comment\">//$conn-&gt;errorInfo()</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">// 创建数据库</span></span><br><span class=\"line\">   <span class=\"variable\">$sql</span> = <span class=\"string\">&quot;CREATE DATABASE 数据库名&quot;</span>;</span><br><span class=\"line\">   <span class=\"variable\">$conn</span>-&gt;<span class=\"title function_ invoke__\">exec</span>(<span class=\"variable\">$sql</span>);</span><br><span class=\"line\">   <span class=\"keyword\">echo</span> <span class=\"string\">&quot;数据库创建成功&quot;</span>;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"创建数据表\"><a href=\"#创建数据表\" class=\"headerlink\" title=\"创建数据表\"></a>创建数据表</h5><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sql</span> = <span class=\"string\">&quot;CREATE TABLE IF NOT EXISTS user6 (</span></span><br><span class=\"line\"><span class=\"string\">    id INT(6) UNSIGNED AUTO_INCREMENT PRIMARY KEY, </span></span><br><span class=\"line\"><span class=\"string\">    username VARCHAR(30) NOT NULL COMMENT \\&quot;用户名\\&quot;,</span></span><br><span class=\"line\"><span class=\"string\">    password VARCHAR(64) NOT NULL COMMENT &#x27;密码&#x27;,</span></span><br><span class=\"line\"><span class=\"string\">    phone VARCHAR(11),</span></span><br><span class=\"line\"><span class=\"string\">    status INT(1) NOT NULL DEFAULT 1,</span></span><br><span class=\"line\"><span class=\"string\">    create_date TIMESTAMP</span></span><br><span class=\"line\"><span class=\"string\">    ) COMMENT &#x27;用户&#x27;&quot;</span>;</span><br><span class=\"line\"><span class=\"variable\">$conn</span>-&gt;<span class=\"title function_ invoke__\">exec</span>(<span class=\"variable\">$sql</span>);</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"查询数据-1\"><a href=\"#查询数据-1\" class=\"headerlink\" title=\"查询数据\"></a>查询数据</h5><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 执行查询语句</span></span><br><span class=\"line\">   <span class=\"variable\">$sql</span> = <span class=\"string\">&quot;SELECT * FROM user WHERE id&lt;5&quot;</span>;</span><br><span class=\"line\">   <span class=\"variable\">$result</span> = <span class=\"variable\">$conn</span>-&gt;<span class=\"title function_ invoke__\">query</span>(<span class=\"variable\">$sql</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">// 获取结果</span></span><br><span class=\"line\">   <span class=\"variable\">$result</span> = <span class=\"variable\">$result</span>-&gt;<span class=\"title function_ invoke__\">fetchAll</span>(PDO::<span class=\"variable constant_\">FETCH_ASSOC</span>);</span><br><span class=\"line\">   <span class=\"title function_ invoke__\">var_dump</span>(<span class=\"variable\">$result</span>);</span><br></pre></td></tr></table></figure>\n<h5 id=\"更新数据-1\"><a href=\"#更新数据-1\" class=\"headerlink\" title=\"更新数据\"></a>更新数据</h5><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sql</span> = <span class=\"string\">&quot;UPDATE user SET num = num+3 WHERE id =2&quot;</span>;</span><br><span class=\"line\">   <span class=\"variable\">$stmt</span> = <span class=\"variable\">$conn</span>-&gt;<span class=\"title function_ invoke__\">exec</span>(<span class=\"variable\">$sql</span>);</span><br><span class=\"line\">   <span class=\"title function_ invoke__\">var_dump</span>(<span class=\"variable\">$stmt</span>);</span><br></pre></td></tr></table></figure>\n<h5 id=\"删除数据-1\"><a href=\"#删除数据-1\" class=\"headerlink\" title=\"删除数据\"></a>删除数据</h5><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sql</span> = <span class=\"string\">&quot;DELETE FROM user WHERE id =26&quot;</span>;</span><br><span class=\"line\">   <span class=\"variable\">$stmt</span> = <span class=\"variable\">$conn</span>-&gt;<span class=\"title function_ invoke__\">exec</span>(<span class=\"variable\">$sql</span>);</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"插入数据-1\"><a href=\"#插入数据-1\" class=\"headerlink\" title=\"插入数据\"></a>插入数据</h5><p>和mysqli的类似，不做特殊说明了<br>预处理</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">   <span class=\"comment\">// 执行插入语句</span></span><br><span class=\"line\">   <span class=\"variable\">$sql</span> = <span class=\"string\">&quot;INSERT INTO 表名 (列1, 列2, 列3) VALUES (:value1, :value2, :value3)&quot;</span>;</span><br><span class=\"line\">   <span class=\"variable\">$stmt</span> = <span class=\"variable\">$conn</span>-&gt;<span class=\"title function_ invoke__\">prepare</span>(<span class=\"variable\">$sql</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">// 绑定参数</span></span><br><span class=\"line\">   <span class=\"variable\">$stmt</span>-&gt;<span class=\"title function_ invoke__\">bindParam</span>(<span class=\"string\">&#x27;:value1&#x27;</span>, <span class=\"variable\">$value1</span>);</span><br><span class=\"line\">   <span class=\"variable\">$stmt</span>-&gt;<span class=\"title function_ invoke__\">bindParam</span>(<span class=\"string\">&#x27;:value2&#x27;</span>, <span class=\"variable\">$value2</span>);</span><br><span class=\"line\">   <span class=\"variable\">$stmt</span>-&gt;<span class=\"title function_ invoke__\">bindParam</span>(<span class=\"string\">&#x27;:value3&#x27;</span>, <span class=\"variable\">$value3</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">// 设置参数值</span></span><br><span class=\"line\">   <span class=\"variable\">$value1</span> = <span class=\"string\">&quot;值1&quot;</span>;</span><br><span class=\"line\">   <span class=\"variable\">$value2</span> = <span class=\"string\">&quot;值2&quot;</span>;</span><br><span class=\"line\">   <span class=\"variable\">$value3</span> = <span class=\"string\">&quot;值3&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">// 执行插入语句</span></span><br><span class=\"line\">   <span class=\"variable\">$stmt</span>-&gt;<span class=\"title function_ invoke__\">execute</span>();</span><br><span class=\"line\">   </span><br><span class=\"line\"><span class=\"comment\">// 获取插入的条数</span></span><br><span class=\"line\">    <span class=\"variable\">$rowCount</span> = <span class=\"variable\">$stmt</span>-&gt;<span class=\"title function_ invoke__\">rowCount</span>();</span><br></pre></td></tr></table></figure>\n\n<p>批量插入</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sql</span> = <span class=\"string\">&quot;INSERT INTO user (username, password, phone) VALUES (?,?,?)&quot;</span>;</span><br><span class=\"line\"><span class=\"variable\">$stmt</span> = <span class=\"variable\">$conn</span>-&gt;<span class=\"title function_ invoke__\">prepare</span>(<span class=\"variable\">$sql</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 执行插入语句</span></span><br><span class=\"line\"><span class=\"variable\">$stmt</span>-&gt;<span class=\"title function_ invoke__\">execute</span>([<span class=\"string\">&quot;test1&quot;</span>,<span class=\"string\">&quot;1234&quot;</span>,<span class=\"string\">&quot;13888888888&quot;</span>]);</span><br><span class=\"line\"><span class=\"variable\">$stmt</span>-&gt;<span class=\"title function_ invoke__\">execute</span>([<span class=\"string\">&quot;test2&quot;</span>,<span class=\"string\">&quot;1232&quot;</span>,<span class=\"string\">&quot;13888888888&quot;</span>]);</span><br></pre></td></tr></table></figure>\n\n<h6 id=\"事务\"><a href=\"#事务\" class=\"headerlink\" title=\"事务\"></a>事务</h6><p>事务（Transaction）是一组数据库操作的集合，这些操作要么全部成功执行，要么全部回滚（撤销）。事务提供了一种机制来确保数据库操作的一致性和完整性。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 开始事务</span></span><br><span class=\"line\">    <span class=\"variable\">$conn</span>-&gt;<span class=\"title function_ invoke__\">beginTransaction</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 执行批量插入语句</span></span><br><span class=\"line\">    <span class=\"variable\">$sql</span> = <span class=\"string\">&quot;INSERT INTO user (username, password, phone) VALUES (?,?,?)&quot;</span>;</span><br><span class=\"line\">    <span class=\"variable\">$stmt</span> = <span class=\"variable\">$conn</span>-&gt;<span class=\"title function_ invoke__\">prepare</span>(<span class=\"variable\">$sql</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable\">$data</span> = <span class=\"keyword\">array</span>(</span><br><span class=\"line\">        <span class=\"keyword\">array</span>(<span class=\"string\">&quot;值1&quot;</span>, <span class=\"string\">&quot;值2&quot;</span>, <span class=\"string\">&quot;值3&quot;</span>),</span><br><span class=\"line\">        <span class=\"keyword\">array</span>(<span class=\"string\">&quot;值4&quot;</span>, <span class=\"string\">&quot;值5&quot;</span>, <span class=\"string\">&quot;值6&quot;</span>),</span><br><span class=\"line\">        <span class=\"keyword\">array</span>(<span class=\"string\">&quot;值7&quot;</span>, <span class=\"string\">&quot;值8&quot;</span>, <span class=\"string\">&quot;值9&quot;</span>)</span><br><span class=\"line\">    );</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"variable\">$insertedRows</span> = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">foreach</span> (<span class=\"variable\">$data</span> <span class=\"keyword\">as</span> <span class=\"variable\">$row</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable\">$stmt</span>-&gt;<span class=\"title function_ invoke__\">execute</span>(<span class=\"variable\">$row</span>);</span><br><span class=\"line\">        <span class=\"variable\">$insertedRows</span> += <span class=\"variable\">$stmt</span>-&gt;<span class=\"title function_ invoke__\">rowCount</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 提交事务</span></span><br><span class=\"line\">    <span class=\"variable\">$conn</span>-&gt;<span class=\"title function_ invoke__\">commit</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;批量插入成功&quot;</span>;</span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span>(PDOException <span class=\"variable\">$e</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 回滚事务</span></span><br><span class=\"line\">    <span class=\"variable\">$conn</span>-&gt;<span class=\"title function_ invoke__\">rollback</span>();</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;插入失败: &quot;</span> . <span class=\"variable\">$e</span>-&gt;<span class=\"title function_ invoke__\">getMessage</span>();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>作业：把PDO里没有用预处理的改为预处理方式。如果有时间，可以把上面的增删改查封装为一个DB类，方便调用。<br>后面我们实战的时候也会讲PDO类的二次封装和调用。</p>\n<h2 id=\"cookie-session\"><a href=\"#cookie-session\" class=\"headerlink\" title=\"cookie session\"></a>cookie session</h2><h3 id=\"cookie\"><a href=\"#cookie\" class=\"headerlink\" title=\"cookie\"></a>cookie</h3><p>cookie 常用于识别用户。<br>cookie 是一种服务器留在用户计算机上的小文件。<br>每当同一台计算机通过浏览器请求页面时，这台计算机将会发送 cookie。<br>通过 PHP，能够创建并取回 cookie 的值。</p>\n<h5 id=\"创建cookie\"><a href=\"#创建cookie\" class=\"headerlink\" title=\"创建cookie\"></a>创建cookie</h5><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_ invoke__\">setcookie</span>(name, value, expire, path, domain);</span><br></pre></td></tr></table></figure>\n\n<p>参数说明： </p>\n<ul>\n<li>name ：Cookie的名称。 </li>\n<li>value ：Cookie的值。 </li>\n<li>expire ：Cookie的过期时间，可以是一个Unix时间戳（例如： time() + 3600  表示一小时后过期），或者是一个具体的日期时间字符串（例如： “2024-01-01 00:00:00” ）。 </li>\n<li>path ：可选参数，指定Cookie的有效路径。默认为当前路径。 </li>\n<li>domain ：可选参数，指定Cookie的有效域名。默认为空，表示当前域名。 </li>\n<li>secure ：可选参数，指定是否仅通过安全的HTTPS连接传输Cookie。默认为 false 。 </li>\n<li>httponly：可选参数，指定是否仅通过HTTP协议访问Cookie。默认为 false 。 </li>\n<li><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$expire</span>=<span class=\"title function_ invoke__\">time</span>()+<span class=\"number\">60</span>*<span class=\"number\">60</span>*<span class=\"number\">24</span>*<span class=\"number\">7</span>;</span><br><span class=\"line\"><span class=\"title function_ invoke__\">setcookie</span>(<span class=\"string\">&quot;username&quot;</span>, <span class=\"string\">&quot;askk&quot;</span>, <span class=\"variable\">$expire</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">setcookie</span>(<span class=\"string\">&quot;userid&quot;</span>, <span class=\"string\">&quot;1&quot;</span>, <span class=\"variable\">$expire</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">setcookie</span>(<span class=\"string\">&quot;user[name]&quot;</span>, <span class=\"string\">&quot;askk&quot;</span>, <span class=\"variable\">$expire</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">setcookie</span>(<span class=\"string\">&quot;user[phone]&quot;</span>, <span class=\"string\">&quot;18611112222&quot;</span>, <span class=\"variable\">$expire</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">setcookie</span>(<span class=\"string\">&quot;user[age]&quot;</span>, <span class=\"string\">&quot;35&quot;</span>, <span class=\"variable\">$expire</span>);</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h5 id=\"获取cookie\"><a href=\"#获取cookie\" class=\"headerlink\" title=\"获取cookie\"></a>获取cookie</h5><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 输出 cookie 值</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_COOKIE</span>[<span class=\"string\">&quot;username&quot;</span>]))&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">echo</span> <span class=\"variable\">$_COOKIE</span>[<span class=\"string\">&quot;username&quot;</span>];</span><br><span class=\"line\">&#125;\t</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 查看所有 cookie</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">print_r</span>(<span class=\"variable\">$_COOKIE</span>);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"删除-Cookie\"><a href=\"#删除-Cookie\" class=\"headerlink\" title=\"删除 Cookie\"></a>删除 Cookie</h5><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_ invoke__\">setcookie</span>(<span class=\"string\">&quot;username&quot;</span>, <span class=\"string\">&quot;&quot;</span>, <span class=\"title function_ invoke__\">time</span>()-<span class=\"number\">3600</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"session\"><a href=\"#session\" class=\"headerlink\" title=\"session\"></a>session</h3><ul>\n<li>用于在服务器上存储关于用户会话（session）的信息，并且对于程序中的所有页面都是可用的。</li>\n<li>会话信息是临时的，在用户离开网站后将被删除。</li>\n<li>它允许在同一个用户的多个请求之间保持数据的状态，便于传递数据。<br>Session 的工作机制是：为每个访客创建一个唯一的 id (UID)，并基于这个 UID 来存储变量。UID 存储在 cookie 中，或者通过 URL 进行传导。</li>\n</ul>\n<h4 id=\"启动session\"><a href=\"#启动session\" class=\"headerlink\" title=\"启动session\"></a>启动session</h4><p>通常，将该函数放在PHP文件的顶部</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_ invoke__\">session_start</span>();</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"存取-Session-变量\"><a href=\"#存取-Session-变量\" class=\"headerlink\" title=\"存取 Session 变量\"></a>存取 Session 变量</h4><p>一旦Session启动，可以使用 <code>$_SESSION</code> 超全局变量来存储和访问Session数据。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 存储 session 数据 </span></span><br><span class=\"line\"><span class=\"variable\">$_SESSION</span>[<span class=\"string\">&#x27;username&#x27;</span>]=<span class=\"string\">&#x27;askk&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//取值</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$_SESSION</span>[<span class=\"string\">&#x27;username&#x27;</span>];</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_SESSION</span>[<span class=\"string\">&#x27;views&#x27;</span>]))</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"variable\">$_SESSION</span>[<span class=\"string\">&#x27;views&#x27;</span>]=<span class=\"variable\">$_SESSION</span>[<span class=\"string\">&#x27;views&#x27;</span>]+<span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"variable\">$_SESSION</span>[<span class=\"string\">&#x27;views&#x27;</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;浏览量：&quot;</span>. <span class=\"variable\">$_SESSION</span>[<span class=\"string\">&#x27;views&#x27;</span>];</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"销毁-Session\"><a href=\"#销毁-Session\" class=\"headerlink\" title=\"销毁 Session\"></a>销毁 Session</h4><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_SESSION</span>[<span class=\"string\">&#x27;views&#x27;</span>]))</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">unset</span>(<span class=\"variable\">$_SESSION</span>[<span class=\"string\">&#x27;views&#x27;</span>]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//销毁</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">session_destroy</span>();</span><br></pre></td></tr></table></figure>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>注意：session_destroy() 将重置 session，您将失去所有已存储的 session 数据</p></blockquote>\n<h4 id=\"Session和Cookie的关系和区别\"><a href=\"#Session和Cookie的关系和区别\" class=\"headerlink\" title=\"Session和Cookie的关系和区别\"></a>Session和Cookie的关系和区别</h4><p>关系： </p>\n<ul>\n<li>Session和Cookie都是用于在不同请求之间保持数据的状态。 </li>\n<li>Session使用Cookie来跟踪和标识用户，通过在Cookie中存储Session ID来关联服务器端的Session数据。</li>\n</ul>\n<p>区别： </p>\n<ul>\n<li>存储位置：Cookie数据存储在客户端的浏览器中，而Session数据存储在服务器端。 </li>\n<li>容量限制：Cookie的容量限制通常较小，一般为几KB，而Session的容量限制较大，通常取决于服务器的配置。 </li>\n<li>安全性：由于Cookie存储在客户端，可能会被篡改或窃取，因此存储敏感信息的安全性较低。相比之下，Session数据存储在服务器端，相对更安全。 </li>\n<li>生命周期：Cookie可以设置过期时间，可以在浏览器关闭后仍然保持，具有较长的生命周期。而Session通常在用户关闭浏览器或一段时间不活动后自动过期。 </li>\n<li>存储方式：Cookie以键值对的形式存储数据，可以在客户端进行读取和修改。Session数据存储在服务器端，客户端只保存了一个Session ID。</li>\n</ul>\n<p>在实际应用中，Cookie通常用于存储一些较小、不敏感的数据，如用户首选项、购物车信息等。而Session通常用于存储用户的身份验证信息、敏感数据等，因为Session数据存储在服务器端，相对更安全。 </p>\n<h2 id=\"实战案例：个人中心\"><a href=\"#实战案例：个人中心\" class=\"headerlink\" title=\"实战案例：个人中心\"></a>实战案例：个人中心</h2><p>案例介绍：<br>我们会用最基础的原生 php 方式去做这个项目，不用任何前后端框架，考虑到一些学员没有前端基础，所以我会尽量少的使用 js，但会用到 fetch 请求等基础语句，并且 html 和 css 会有入门级的讲解（简单）；<br>我会尽可能多的使用学到的知识，以达到学以致用的效果；<br>我们会使用面向对象去对一些常用的方法进行封装，例如数据库操作，让大家学会在实际项目中使用类和对象。</p>\n<p>讲解的内容：</p>\n<ul>\n<li>什么是前端，什么是后端；什么是前台，什么是后台</li>\n<li>页面搭建 (从 0 到 1)</li>\n<li>什么是 json</li>\n<li>简单的 Api 接口和请求</li>\n<li>Php 调试代码</li>\n<li>封装类</li>\n<li>文件包含</li>\n<li>数据库的使用</li>\n<li>用户状态</li>\n</ul>\n<p>![[Pasted image 20231116090904.png]]</p>\n<h3 id=\"用户注册\"><a href=\"#用户注册\" class=\"headerlink\" title=\"用户注册\"></a>用户注册</h3><h3 id=\"用户登录\"><a href=\"#用户登录\" class=\"headerlink\" title=\"用户登录\"></a>用户登录</h3><h3 id=\"用户中心\"><a href=\"#用户中心\" class=\"headerlink\" title=\"用户中心\"></a>用户中心</h3><h4 id=\"个人信息\"><a href=\"#个人信息\" class=\"headerlink\" title=\"个人信息\"></a>个人信息</h4><h4 id=\"登录记录\"><a href=\"#登录记录\" class=\"headerlink\" title=\"登录记录\"></a>登录记录</h4><h4 id=\"修改密码\"><a href=\"#修改密码\" class=\"headerlink\" title=\"修改密码\"></a>修改密码</h4><h4 id=\"退出登录\"><a href=\"#退出登录\" class=\"headerlink\" title=\"退出登录\"></a>退出登录</h4><h1 id=\"实战补充知识\"><a href=\"#实战补充知识\" class=\"headerlink\" title=\"实战补充知识\"></a>实战补充知识</h1><h3 id=\"str-repeat-和-rtrim-ltrim-函数\"><a href=\"#str-repeat-和-rtrim-ltrim-函数\" class=\"headerlink\" title=\"str_repeat() 和 rtrim () ltrim() 函数\"></a><code>str_repeat()</code> 和 <code>rtrim ()</code> <code>ltrim()</code> 函数</h3><h3 id=\"floor-和-ceil-round-函数\"><a href=\"#floor-和-ceil-round-函数\" class=\"headerlink\" title=\"floor() 和 ceil() round() 函数\"></a><code>floor()</code> 和 <code>ceil()</code> <code>round()</code> 函数</h3><h3 id=\"md5-加密\"><a href=\"#md5-加密\" class=\"headerlink\" title=\"md5() 加密\"></a><code>md5()</code> 加密</h3><h3 id=\"die-和-exit-函数\"><a href=\"#die-和-exit-函数\" class=\"headerlink\" title=\"die 和 exit 函数\"></a>die 和 exit 函数</h3><h3 id=\"常量-DIRECTORY-SEPARATOR\"><a href=\"#常量-DIRECTORY-SEPARATOR\" class=\"headerlink\" title=\"常量 DIRECTORY_SEPARATOR\"></a>常量 DIRECTORY_SEPARATOR</h3><h3 id=\"Pdo-补充知识\"><a href=\"#Pdo-补充知识\" class=\"headerlink\" title=\"Pdo 补充知识\"></a>Pdo 补充知识</h3><p>$stmt-&gt;closeCursor()<br>If($condition instanceof Closure)</p>\n<h3 id=\"dirname\"><a href=\"#dirname\" class=\"headerlink\" title=\"dirname ()\"></a><code>dirname ()</code></h3><p><code>dirname</code> 函数用于返回指定路径的目录部分。它接受一个字符串参数，该参数是一个文件或目录的路径，并返回该路径的父级目录。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$path</span> = <span class=\"string\">&#x27;/var/www/html/index.php&#x27;</span>;</span><br><span class=\"line\"><span class=\"variable\">$directory</span> = <span class=\"title function_ invoke__\">dirname</span>(<span class=\"variable\">$path</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$directory</span>;  <span class=\"comment\">// 输出: /var/www/html</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$path</span> = <span class=\"string\">&#x27;/var/www/html/&#x27;</span>;</span><br><span class=\"line\"><span class=\"variable\">$directory</span> = <span class=\"title function_ invoke__\">dirname</span>(<span class=\"variable\">$path</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$directory</span>;  <span class=\"comment\">// 输出: /var/www</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$path</span> = <span class=\"string\">&#x27;/var/www/html&#x27;</span>;</span><br><span class=\"line\"><span class=\"variable\">$directory</span> = <span class=\"title function_ invoke__\">dirname</span>(<span class=\"variable\">$path</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$directory</span>;  <span class=\"comment\">// 输出: /var/www</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"header-函数\"><a href=\"#header-函数\" class=\"headerlink\" title=\"header ()函数\"></a>header ()函数</h3><p><code>header()</code> 函数用于发送原始的 HTTP 头信息。它通常用于在服务器响应中设置 HTTP 头，例如设置重定向、设置响应状态码、设置内容类型等。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_ invoke__\">header</span>(<span class=\"keyword\">string</span> <span class=\"variable\">$header</span>, <span class=\"keyword\">bool</span> <span class=\"variable\">$replace</span> = <span class=\"literal\">true</span>, <span class=\"keyword\">int</span> <span class=\"variable\">$http_response_code</span> = <span class=\"literal\">null</span>): <span class=\"keyword\">void</span></span><br></pre></td></tr></table></figure>\n<p>参数说明： </p>\n<ul>\n<li>$header ：要设置的 HTTP 头信息，以字符串形式表示。 </li>\n<li>$replace （可选）：指定是否替换之前设置的相同类型的 HTTP 头信息。默认为  true ，表示替换。 </li>\n<li>$http_response_code（可选）：指定要设置的响应状态码。</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//重定向</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">header</span>(<span class=\"string\">&quot;Location: ./login.php&quot;</span>);</span><br><span class=\"line\"><span class=\"comment\">//设置响应状态码：</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">header</span>(<span class=\"string\">&quot;HTTP/1.1 404 Not Found&quot;</span>);</span><br><span class=\"line\"><span class=\"comment\">//设置内容类型</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">header</span>(<span class=\"string\">&quot;Content-Type: application/json&quot;</span>);</span><br></pre></td></tr></table></figure>\n<p>注意： <code>header()</code> 函数必须在发送任何实际输出之前调用，包括 HTML 标记、空格、换行符等。如果在输出之后调用 <code>header()</code> 函数，将会导致 “headers already sent” 错误。</p>\n<h3 id=\"静态变量的使用\"><a href=\"#静态变量的使用\" class=\"headerlink\" title=\"静态变量的使用\"></a>静态变量的使用</h3><p>与类或函数相关联，而不是与对象或函数的实例相关联。<br>静态变量在整个脚本的执行过程中保持其值不变。</p>\n<h4 id=\"类\"><a href=\"#类\" class=\"headerlink\" title=\"类\"></a>类</h4><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyClass</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">static</span> <span class=\"variable\">$count</span> = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">toObj</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">self</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">plusCount</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">self</span>::<span class=\"variable\">$count</span>++;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"built_in\">self</span>::<span class=\"variable\">$count</span>.PHP_EOL;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title class_\">MyClass</span>::<span class=\"title function_ invoke__\">toObj</span>()-&gt;<span class=\"title function_ invoke__\">plusCount</span>();</span><br><span class=\"line\"><span class=\"title class_\">MyClass</span>::<span class=\"title function_ invoke__\">toObj</span>()-&gt;<span class=\"title function_ invoke__\">plusCount</span>();</span><br><span class=\"line\"><span class=\"title class_\">MyClass</span>::<span class=\"title function_ invoke__\">toObj</span>()-&gt;<span class=\"title function_ invoke__\">plusCount</span>();</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title class_\">MyClass</span>::<span class=\"variable\">$count</span>;</span><br></pre></td></tr></table></figure>\n<h4 id=\"普通函数\"><a href=\"#普通函数\" class=\"headerlink\" title=\"普通函数\"></a>普通函数</h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>静态变量只在函数的作用域内有效，不同函数中的同名静态变量是相互独立的</p></blockquote>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">myFunction</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">static</span> <span class=\"variable\">$count</span> = <span class=\"number\">0</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"variable\">$count</span>++;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"variable\">$count</span>.PHP_EOL;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">mySecond</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">static</span> <span class=\"variable\">$count</span> = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"variable\">$count</span>.PHP_EOL;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_ invoke__\">myFunction</span>();</span><br><span class=\"line\"><span class=\"title function_ invoke__\">myFunction</span>();</span><br><span class=\"line\"><span class=\"title function_ invoke__\">myFunction</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">mySecond</span>();</span><br></pre></td></tr></table></figure>\n<h1 id=\"关于phpinfo\"><a href=\"#关于phpinfo\" class=\"headerlink\" title=\"关于phpinfo()\"></a>关于phpinfo()</h1>","text":"PHPphp语法PHP 脚本以 <?php 开头，以 ?> 结尾： <?php // 此处是 PHP 代码 ?><?php// 此处是 PHP 代码?> PHP...","permalink":"/post/php","photos":[],"count_time":{"symbolsCount":"53k","symbolsTime":"48 mins."},"categories":[{"name":"编程语言","slug":"编程语言","count":5,"path":"api/categories/编程语言.json"}],"tags":[{"name":"PHP","slug":"PHP","count":1,"path":"api/tags/PHP.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#PHP\"><span class=\"toc-text\">PHP</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#php%E8%AF%AD%E6%B3%95\"><span class=\"toc-text\">php语法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BE%93%E5%87%BA%E6%96%B9%E6%B3%95%EF%BC%9Aecho-%E5%92%8C-print\"><span class=\"toc-text\">输出方法：echo 和 print</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B3%A8%E9%87%8A\"><span class=\"toc-text\">注释</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">变量</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8F%98%E9%87%8F%E5%91%BD%E5%90%8D%E8%A7%84%E5%88%99\"><span class=\"toc-text\">变量命名规则</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%9A%84%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">命令行的使用</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">数据类型</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AD%97%E7%AC%A6%E4%B8%B2\"><span class=\"toc-text\">字符串</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B4%E6%95%B0\"><span class=\"toc-text\">整数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B5%AE%E7%82%B9%E6%95%B0\"><span class=\"toc-text\">浮点数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%80%BB%E8%BE%91%EF%BC%88%E5%B8%83%E5%B0%94%E5%80%BC%EF%BC%89\"><span class=\"toc-text\">逻辑（布尔值）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">数组</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AF%B9%E8%B1%A1\"><span class=\"toc-text\">对象</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Null\"><span class=\"toc-text\">Null</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#resource-%E8%B5%84%E6%BA%90%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">resource 资源类型</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%9D%E7%BA%A7%E5%AE%9E%E6%88%98-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%BC%80%E5%A4%B4%E9%83%A8%E5%88%86\"><span class=\"toc-text\">初级实战 - 个人博客的开头部分</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#EOF-heredoc-%E5%AE%9A%E7%95%8C%E7%AC%A6%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E\"><span class=\"toc-text\">EOF(heredoc) 定界符使用说明</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">运算符</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AE%97%E6%9C%AF%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">算术运算符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%B5%8B%E5%80%BC%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">赋值运算符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%80%92%E5%A2%9E-%E9%80%92%E5%87%8F%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">递增&#x2F;递减运算符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%AF%94%E8%BE%83%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">比较运算符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">逻辑运算符</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#and-%E5%92%8C-%E7%9A%84%E5%8C%BA%E5%88%AB%EF%BC%8C-or-%E5%92%8C-%E7%9A%84%E5%8C%BA%E5%88%AB\"><span class=\"toc-text\">and 和 &amp;&amp; 的区别， or 和 || 的区别</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%98%BB%E6%96%AD%E6%95%88%E6%9E%9C\"><span class=\"toc-text\">阻断效果</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9D%A1%E4%BB%B6%E8%AF%AD%E5%8F%A5-%E6%9D%A1%E4%BB%B6%E5%88%86%E6%94%AF\"><span class=\"toc-text\">条件语句 (条件分支)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#if%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">if语句</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#if%E2%80%A6else%E2%80%A6%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">if…else…语句</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#if%E2%80%A6elseif%E2%80%A6-else\"><span class=\"toc-text\">if…elseif….else</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#switch\"><span class=\"toc-text\">switch</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%BE%AA%E7%8E%AF\"><span class=\"toc-text\">循环</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#for-%E5%BE%AA%E7%8E%AF\"><span class=\"toc-text\">for 循环</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#while-%E5%BE%AA%E7%8E%AF\"><span class=\"toc-text\">while 循环</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#do%E2%80%A6while\"><span class=\"toc-text\">do…while</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#continue%E5%92%8Cbreak\"><span class=\"toc-text\">continue和break</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#continue\"><span class=\"toc-text\">continue</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#break\"><span class=\"toc-text\">break</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#break-2\"><span class=\"toc-text\">break 2</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%9C%A8while%E4%B8%AD%E4%BD%BF%E7%94%A8continue-break%E5%92%8Cbreak2\"><span class=\"toc-text\">在while中使用continue break和break2</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#foreach-%E5%BE%AA%E7%8E%AF\"><span class=\"toc-text\">foreach 循环</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%95%B0%E7%BB%84-1\"><span class=\"toc-text\">数组</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%95%B0%E5%80%BC%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">数值数组</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%85%B3%E8%81%94%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">关联数组</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%8E%B7%E5%8F%96%E6%95%B0%E7%BB%84%E7%9A%84%E9%95%BF%E5%BA%A6-count-%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">获取数组的长度 - count() 函数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%81%8D%E5%8E%86%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">遍历数组</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A4%9A%E7%BB%B4%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">多维数组</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%9D%E7%BA%A7%E5%AE%9E%E6%88%982-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%BC%80%E5%A4%B4%E9%83%A8%E5%88%86\"><span class=\"toc-text\">初级实战2 - 个人博客的开头部分</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">函数</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">内置函数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%EF%BC%88%E5%AE%9A%E4%B9%89%EF%BC%89%E5%87%BD%E6%95%B0-%E5%92%8C-%E8%B0%83%E7%94%A8\"><span class=\"toc-text\">创建（定义）函数 和 调用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B7%BB%E5%8A%A0%E5%8F%82%E6%95%B0\"><span class=\"toc-text\">添加参数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A4%9A%E4%B8%AA%E5%8F%82%E6%95%B0\"><span class=\"toc-text\">多个参数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BF%94%E5%9B%9E%E5%80%BC\"><span class=\"toc-text\">返回值</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%98%E9%87%8F%E4%BD%9C%E7%94%A8%E5%9F%9F\"><span class=\"toc-text\">变量作用域</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%B1%80%E9%83%A8-%E5%92%8C-%E5%85%A8%E5%B1%80-global-%E4%BD%9C%E7%94%A8%E5%9F%9F\"><span class=\"toc-text\">局部 和 全局(global) 作用域</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#static-%E4%BD%9C%E7%94%A8%E5%9F%9F\"><span class=\"toc-text\">static 作用域</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%87%BD%E6%95%B0%E7%9A%84%E5%8F%82%E6%95%B0%E4%BD%9C%E7%94%A8%E5%9F%9F\"><span class=\"toc-text\">函数的参数作用域</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#unset%E5%92%8Cisset%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">unset和isset函数</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%B6%85%E7%BA%A7%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">超级全局变量</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#GLOBALS\"><span class=\"toc-text\">$GLOBALS</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#SERVER\"><span class=\"toc-text\">$_SERVER</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%9D%E7%BA%A7%E5%AE%9E%E6%88%983-%E5%87%BD%E6%95%B0%E7%9A%84%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">初级实战3 - 函数的使用</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%B6%E4%BB%96%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">其他运算符</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B0%E7%BB%84%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">数组运算符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%89%E5%85%83%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">三元运算符 ?:</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%A9%BA%E5%90%88%E5%B9%B6%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">空合并运算符 ??</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BB%84%E5%90%88%E6%AF%94%E8%BE%83%E7%AC%A6\"><span class=\"toc-text\">组合比较符 &lt;&#x3D;&gt;</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%AF%94%E8%BE%83\"><span class=\"toc-text\">比较</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E7%9A%84%E6%AF%94%E8%BE%83\"><span class=\"toc-text\">数据类型的比较</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%AF%94%E8%BE%83undefined%E3%80%81-0%E3%80%81false%E3%80%81null%E3%80%81%E7%A9%BA%E5%80%BC\"><span class=\"toc-text\">比较undefined、 0、false、null、空值</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#empty\"><span class=\"toc-text\">empty</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E5%85%B3%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">字符串相关函数</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%9D%E7%BA%A7%E5%AE%9E%E6%88%984-%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%87%BD%E6%95%B0%E7%9A%84%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">初级实战4 - 字符串函数的使用</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%95%B0%E7%BB%84%E7%9B%B8%E5%85%B3%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">数组相关函数</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%9D%E7%BA%A7%E5%AE%9E%E6%88%985-%E6%95%B0%E7%BB%84%E5%87%BD%E6%95%B0%E7%9A%84%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">初级实战5 - 数组函数的使用</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%97%B6%E9%97%B4%E3%80%81%E6%97%A5%E6%9C%9F%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86\"><span class=\"toc-text\">时间、日期相关知识</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%87%BD%E6%95%B0-1\"><span class=\"toc-text\">函数</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#DateTime%E5%AF%B9%E8%B1%A1\"><span class=\"toc-text\">DateTime对象</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%89%B9%E6%AE%8A%E7%9A%84%E5%8F%98%E9%87%8F%E5%86%99%E6%B3%95%E5%92%8C%E5%B8%B8%E9%87%8F\"><span class=\"toc-text\">特殊的变量写法和常量</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%89%B9%E6%AE%8A%E7%9A%84%E5%8F%98%E9%87%8F%E5%86%99%E6%B3%95\"><span class=\"toc-text\">特殊的变量写法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E9%87%8F\"><span class=\"toc-text\">常量</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#const%E5%92%8Cdefine%E7%9A%84%E5%8C%BA%E5%88%AB\"><span class=\"toc-text\">const和define的区别</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E9%87%8F%E5%92%8C%E5%8F%98%E9%87%8F%E7%9A%84%E5%8C%BA%E5%88%AB%EF%BC%9A\"><span class=\"toc-text\">常量和变量的区别：</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%AD%94%E6%9C%AF%E5%B8%B8%E9%87%8F\"><span class=\"toc-text\">魔术常量</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#LINE\"><span class=\"toc-text\">__LINE__</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#FILE\"><span class=\"toc-text\">__FILE__</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#DIR\"><span class=\"toc-text\">__DIR__</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#FUNCTION\"><span class=\"toc-text\">__FUNCTION__</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#CLASS\"><span class=\"toc-text\">__CLASS__</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#NAMESPACE\"><span class=\"toc-text\">__NAMESPACE__</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#METHOD\"><span class=\"toc-text\">__METHOD__</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#TRAIT\"><span class=\"toc-text\">__TRAIT__</span></a></li></ol></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8C%85%E5%90%AB%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">包含文件</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#include-%E5%92%8C-require-%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">include 和 require 语句</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BE%8B%E5%A6%82%EF%BC%9A\"><span class=\"toc-text\">例如：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#header-php\"><span class=\"toc-text\">header.php</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#index-php\"><span class=\"toc-text\">index.php</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#include-once-%E5%92%8C-require-once-%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">include_once 和 require_once 语句</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%EF%BC%88OO%EF%BC%89\"><span class=\"toc-text\">面向对象（OO）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">概念</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AF%B9%E8%B1%A1%EF%BC%9A\"><span class=\"toc-text\">对象：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%EF%BC%9A\"><span class=\"toc-text\">面向对象：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AF%B9%E8%B1%A1%E7%9A%84%E4%B8%BB%E8%A6%81%E4%B8%89%E4%B8%AA%E7%89%B9%E6%80%A7%EF%BC%9A\"><span class=\"toc-text\">对象的主要三个特性：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E7%9A%84%E4%B8%89%E4%B8%AA%E4%B8%BB%E8%A6%81%E7%89%B9%E6%80%A7%EF%BC%9A\"><span class=\"toc-text\">面向对象编程的三个主要特性：</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%B1%BB%EF%BC%88class%EF%BC%89\"><span class=\"toc-text\">类（class）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%B1%BB%E7%9A%84%E5%AE%9A%E4%B9%89%E5%92%8C%E8%B0%83%E7%94%A8\"><span class=\"toc-text\">类的定义和调用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E7%B1%BB%E7%9A%84%E5%AE%9A%E4%B9%89\"><span class=\"toc-text\">类的定义</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E7%B1%BB%E7%9A%84%E8%B0%83%E7%94%A8\"><span class=\"toc-text\">类的调用</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%B3%95%E5%92%8C%E5%B1%9E%E6%80%A7\"><span class=\"toc-text\">方法和属性</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E7%B1%BB%E6%96%B9%E6%B3%95%EF%BC%88%E5%87%BD%E6%95%B0%EF%BC%89\"><span class=\"toc-text\">类方法（函数）</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#this\"><span class=\"toc-text\">$this</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6\"><span class=\"toc-text\">访问控制</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#construct%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">__construct构造函数</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#destruct%E6%9E%90%E6%9E%84%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">__destruct析构函数</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#static-%E9%9D%99%E6%80%81%E5%8F%98%E9%87%8F-%E5%92%8C-self\"><span class=\"toc-text\">static 静态变量 和 self</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E7%B1%BB%E5%B8%B8%E9%87%8F\"><span class=\"toc-text\">类常量</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#static-%E9%9D%99%E6%80%81%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">static 静态方法</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%B1%BB%E7%9A%84%E7%BB%A7%E6%89%BF%EF%BC%88extends%EF%BC%89%EF%BC%9A\"><span class=\"toc-text\">类的继承（extends）：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%B3%95%E5%92%8C%E5%B1%9E%E6%80%A7%E9%87%8D%E5%86%99\"><span class=\"toc-text\">方法和属性重写</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#final-%E5%85%B3%E9%94%AE%E5%AD%97\"><span class=\"toc-text\">final 关键字</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E8%B0%83%E7%94%A8%E7%88%B6%E7%B1%BB%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">调用父类方法</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E9%9D%99%E6%80%81%E5%BB%B6%E8%BF%9F%E7%BB%91%E5%AE%9A-static\"><span class=\"toc-text\">静态延迟绑定 static</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%B1%BB%E7%9A%84%E5%A4%9A%E6%80%81\"><span class=\"toc-text\">类的多态</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%B3%95%E9%87%8D%E8%BD%BD\"><span class=\"toc-text\">方法重载</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%8E%A5%E5%8F%A3%E5%92%8C%E6%8A%BD%E8%B1%A1%E7%B1%BB\"><span class=\"toc-text\">接口和抽象类</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#interface-%E6%8E%A5%E5%8F%A3\"><span class=\"toc-text\">interface(接口)</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%8A%BD%E8%B1%A1%E7%B1%BB%E5%92%8C%E6%8A%BD%E8%B1%A1%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">抽象类和抽象方法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#%E6%8A%BD%E8%B1%A1%E7%B1%BB\"><span class=\"toc-text\">抽象类</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#%E6%8A%BD%E8%B1%A1%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">抽象方法</span></a></li></ol></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%8A%BD%E8%B1%A1%E7%B1%BB%E4%B8%8E%E6%8E%A5%E5%8F%A3%E7%9A%84%E5%8C%BA%E5%88%AB\"><span class=\"toc-text\">抽象类与接口的区别</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#trait%E4%BB%A3%E7%A0%81%E5%A4%8D%E7%94%A8\"><span class=\"toc-text\">trait代码复用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%90%8C%E5%90%8D%E5%86%B2%E7%AA%81\"><span class=\"toc-text\">同名冲突</span></a></li></ol></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%A1%A8%E5%8D%95%E5%92%8C%E8%AF%B7%E6%B1%82\"><span class=\"toc-text\">表单和请求</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%A1%A8%E5%8D%95\"><span class=\"toc-text\">表单</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%85%B3%E4%BA%8E%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82\"><span class=\"toc-text\">关于网络请求</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#GET%E8%AF%B7%E6%B1%82%EF%BC%9A\"><span class=\"toc-text\">GET请求：</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#POST%E8%AF%B7%E6%B1%82%EF%BC%9A\"><span class=\"toc-text\">POST请求：</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%8C%BA%E5%88%AB%EF%BC%9A\"><span class=\"toc-text\">区别：</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%B6%85%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F-REQUEST\"><span class=\"toc-text\">超全局变量$_REQUEST</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#htmlspecialchars-%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">htmlspecialchars()函数</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#mysql%E6%95%B0%E6%8D%AE%E5%BA%93\"><span class=\"toc-text\">mysql数据库</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#MySQLi\"><span class=\"toc-text\">MySQLi</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#resource-%E8%B5%84%E6%BA%90%E7%B1%BB%E5%9E%8B-1\"><span class=\"toc-text\">resource 资源类型</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%E5%BA%93\"><span class=\"toc-text\">创建数据库</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%E5%BA%93%E8%A1%A8\"><span class=\"toc-text\">创建数据库表</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%8F%92%E5%85%A5%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">插入数据</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BF%9B%E8%A1%8C%E8%BD%AC%E4%B9%89%E5%A4%84%E7%90%86\"><span class=\"toc-text\">字符串进行转义处理</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%8F%92%E5%85%A5%E5%A4%9A%E6%9D%A1%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">插入多条数据</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%9F%A5%E8%AF%A2%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">查询数据</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#where-%E6%9D%A1%E4%BB%B6%E7%AD%9B%E9%80%89\"><span class=\"toc-text\">where 条件筛选</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#order-by-%E6%8E%92%E5%BA%8F\"><span class=\"toc-text\">order by 排序</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#offset-limit\"><span class=\"toc-text\">offset limit</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%9B%B4%E6%96%B0%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">更新数据</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%A0%E9%99%A4%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">删除数据</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BF%AE%E6%94%B9%E6%95%B0%E6%8D%AE%E8%A1%A8\"><span class=\"toc-text\">修改数据表</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%A2%84%E5%A4%84%E7%90%86%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">预处理语句</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%85%B3%E4%BA%8Esql%E6%B3%A8%E5%85%A5\"><span class=\"toc-text\">关于sql注入</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#1-%E7%9B%B4%E6%8E%A5%E6%89%A7%E8%A1%8C%E7%94%A8%E6%88%B7%E8%BE%93%E5%85%A5%E7%9A%84SQL%E6%9F%A5%E8%AF%A2%EF%BC%9A\"><span class=\"toc-text\">1. 直接执行用户输入的SQL查询：</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#2-%E4%BD%BF%E7%94%A8%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%8B%BC%E6%8E%A5%E7%9A%84%E6%96%B9%E5%BC%8F%E6%9E%84%E5%BB%BASQL%E6%9F%A5%E8%AF%A2%EF%BC%9A\"><span class=\"toc-text\">2. 使用字符串拼接的方式构建SQL查询：</span></a></li></ol></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E9%A2%84%E5%A4%84%E7%90%86%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">预处理方法</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#PDO\"><span class=\"toc-text\">PDO</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E8%BF%9E%E6%8E%A5\"><span class=\"toc-text\">创建连接</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%E5%BA%93-1\"><span class=\"toc-text\">创建数据库</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%E8%A1%A8\"><span class=\"toc-text\">创建数据表</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%9F%A5%E8%AF%A2%E6%95%B0%E6%8D%AE-1\"><span class=\"toc-text\">查询数据</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%9B%B4%E6%96%B0%E6%95%B0%E6%8D%AE-1\"><span class=\"toc-text\">更新数据</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%88%A0%E9%99%A4%E6%95%B0%E6%8D%AE-1\"><span class=\"toc-text\">删除数据</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%8F%92%E5%85%A5%E6%95%B0%E6%8D%AE-1\"><span class=\"toc-text\">插入数据</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#%E4%BA%8B%E5%8A%A1\"><span class=\"toc-text\">事务</span></a></li></ol></li></ol></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#cookie-session\"><span class=\"toc-text\">cookie session</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#cookie\"><span class=\"toc-text\">cookie</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BAcookie\"><span class=\"toc-text\">创建cookie</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E8%8E%B7%E5%8F%96cookie\"><span class=\"toc-text\">获取cookie</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%88%A0%E9%99%A4-Cookie\"><span class=\"toc-text\">删除 Cookie</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#session\"><span class=\"toc-text\">session</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%90%AF%E5%8A%A8session\"><span class=\"toc-text\">启动session</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AD%98%E5%8F%96-Session-%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">存取 Session 变量</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%94%80%E6%AF%81-Session\"><span class=\"toc-text\">销毁 Session</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Session%E5%92%8CCookie%E7%9A%84%E5%85%B3%E7%B3%BB%E5%92%8C%E5%8C%BA%E5%88%AB\"><span class=\"toc-text\">Session和Cookie的关系和区别</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E6%88%98%E6%A1%88%E4%BE%8B%EF%BC%9A%E4%B8%AA%E4%BA%BA%E4%B8%AD%E5%BF%83\"><span class=\"toc-text\">实战案例：个人中心</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%94%A8%E6%88%B7%E6%B3%A8%E5%86%8C\"><span class=\"toc-text\">用户注册</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95\"><span class=\"toc-text\">用户登录</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%94%A8%E6%88%B7%E4%B8%AD%E5%BF%83\"><span class=\"toc-text\">用户中心</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF\"><span class=\"toc-text\">个人信息</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%99%BB%E5%BD%95%E8%AE%B0%E5%BD%95\"><span class=\"toc-text\">登录记录</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BF%AE%E6%94%B9%E5%AF%86%E7%A0%81\"><span class=\"toc-text\">修改密码</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%80%80%E5%87%BA%E7%99%BB%E5%BD%95\"><span class=\"toc-text\">退出登录</span></a></li></ol></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E6%88%98%E8%A1%A5%E5%85%85%E7%9F%A5%E8%AF%86\"><span class=\"toc-text\">实战补充知识</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#str-repeat-%E5%92%8C-rtrim-ltrim-%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">str_repeat() 和 rtrim () ltrim() 函数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#floor-%E5%92%8C-ceil-round-%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">floor() 和 ceil() round() 函数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#md5-%E5%8A%A0%E5%AF%86\"><span class=\"toc-text\">md5() 加密</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#die-%E5%92%8C-exit-%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">die 和 exit 函数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E9%87%8F-DIRECTORY-SEPARATOR\"><span class=\"toc-text\">常量 DIRECTORY_SEPARATOR</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Pdo-%E8%A1%A5%E5%85%85%E7%9F%A5%E8%AF%86\"><span class=\"toc-text\">Pdo 补充知识</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#dirname\"><span class=\"toc-text\">dirname ()</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#header-%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">header ()函数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%9D%99%E6%80%81%E5%8F%98%E9%87%8F%E7%9A%84%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">静态变量的使用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%B1%BB\"><span class=\"toc-text\">类</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%99%AE%E9%80%9A%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">普通函数</span></a></li></ol></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%85%B3%E4%BA%8Ephpinfo\"><span class=\"toc-text\">关于phpinfo()</span></a></li></ol>","author":{"name":"暗使开开","slug":"blog-author","avatar":"\\favicon.ico","link":"/","description":"<p>即使是虚拟的也会开心</p>唯有终夜长开眼，报以平生未展眉","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/344723412"},"qq":{"icon":"/svg/qq.svg","link":"https://qm.qq.com/q/MXqKNejl6g"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"shell","uid":"ce97a94626317b127a6da02030ff4c21","slug":"shell编程","date":"2024-07-30T03:50:33.000Z","updated":"2024-08-04T10:30:28.707Z","comments":true,"path":"api/articles/shell编程.json","keywords":null,"cover":null,"text":"shell编程shell脚本 开头，以什么shell执行 /bash #!/bin/bash 执行 chmod u+x ./xxx.sh sh xxx.sh 输...","permalink":"/post/shell编程","photos":[],"count_time":{"symbolsCount":475,"symbolsTime":"1 mins."},"categories":[{"name":"编程语言","slug":"编程语言","count":5,"path":"api/categories/编程语言.json"}],"tags":[{"name":"shell","slug":"shell","count":2,"path":"api/tags/shell.json"}],"author":{"name":"暗使开开","slug":"blog-author","avatar":"\\favicon.ico","link":"/","description":"<p>即使是虚拟的也会开心</p>唯有终夜长开眼，报以平生未展眉","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/344723412"},"qq":{"icon":"/svg/qq.svg","link":"https://qm.qq.com/q/MXqKNejl6g"}}}}},"next_post":{"title":"C++","uid":"2d728caa47af746573cb7fba96b85d4f","slug":"cpp11","date":"2024-07-29T16:00:00.000Z","updated":"2024-07-30T07:12:03.321Z","comments":true,"path":"api/articles/cpp11.json","keywords":null,"cover":null,"text":"C++中map与unordered_map的区别头文件 map: #include <map> unordered_map: #include <unorder...","permalink":"/post/cpp11","photos":[],"count_time":{"symbolsCount":"9.8k","symbolsTime":"9 mins."},"categories":[{"name":"编程语言","slug":"编程语言","count":5,"path":"api/categories/编程语言.json"}],"tags":[{"name":"C++","slug":"C","count":5,"path":"api/tags/C.json"}],"author":{"name":"暗使开开","slug":"blog-author","avatar":"\\favicon.ico","link":"/","description":"<p>即使是虚拟的也会开心</p>唯有终夜长开眼，报以平生未展眉","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/344723412"},"qq":{"icon":"/svg/qq.svg","link":"https://qm.qq.com/q/MXqKNejl6g"}}}}}}